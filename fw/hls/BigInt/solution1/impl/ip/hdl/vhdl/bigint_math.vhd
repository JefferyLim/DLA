-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bigint_math is
generic (
    C_S_AXI_PERIPH_BUS_ADDR_WIDTH : INTEGER := 11;
    C_S_AXI_PERIPH_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_PERIPH_BUS_AWVALID : IN STD_LOGIC;
    s_axi_PERIPH_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_PERIPH_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_PERIPH_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_PERIPH_BUS_WVALID : IN STD_LOGIC;
    s_axi_PERIPH_BUS_WREADY : OUT STD_LOGIC;
    s_axi_PERIPH_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_PERIPH_BUS_DATA_WIDTH-1 downto 0);
    s_axi_PERIPH_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_PERIPH_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_PERIPH_BUS_ARVALID : IN STD_LOGIC;
    s_axi_PERIPH_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_PERIPH_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_PERIPH_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_PERIPH_BUS_RVALID : OUT STD_LOGIC;
    s_axi_PERIPH_BUS_RREADY : IN STD_LOGIC;
    s_axi_PERIPH_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_PERIPH_BUS_DATA_WIDTH-1 downto 0);
    s_axi_PERIPH_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_PERIPH_BUS_BVALID : OUT STD_LOGIC;
    s_axi_PERIPH_BUS_BREADY : IN STD_LOGIC;
    s_axi_PERIPH_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of bigint_math is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "bigint_math,hls_ip_2016_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.378000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=33,HLS_SYN_DSP=4,HLS_SYN_FF=2928,HLS_SYN_LUT=3837}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_FF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_29 : BOOLEAN;
    signal ap_ready : STD_LOGIC;
    signal a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_ce0 : STD_LOGIC;
    signal a_we0 : STD_LOGIC;
    signal a_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_163_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_100 : BOOLEAN;
    signal loopCount_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal loopCount_ce0 : STD_LOGIC;
    signal loopCount_we0 : STD_LOGIC;
    signal loopCount_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal loopCount_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_div_fu_119_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_div_fu_119_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_div_fu_119_out1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_div_fu_119_out1_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_out1_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_out1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_div_fu_119_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_div_fu_119_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_div_fu_119_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_div_fu_119_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_131_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_131_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_131_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_131_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_131_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_1_fu_131_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_131_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_131_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_1_fu_131_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_1_fu_131_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_138_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_138_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_138_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_138_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_138_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_138_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_138_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_138_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_145_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_145_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_145_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_145_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_145_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_145_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_145_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_145_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_145_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_bigint_math_bigint_zero_fu_152_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_152_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_152_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_152_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_152_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_152_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_152_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_152_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_108 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond_i_fu_157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_grp_bigint_math_bigint_div_fu_119_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_205 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_212 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_mul_1_fu_131_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_229 : BOOLEAN;
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_236 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_add_1_fu_138_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_compare_fu_145_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_255 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_262 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_zero_fu_152_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_273 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_284 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_292 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_299 : BOOLEAN;
    signal tmp_i_fu_169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phitmp_i_fu_174_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);

    component bigint_math_bigint_div IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        out1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out1_ce0 : OUT STD_LOGIC;
        out1_we0 : OUT STD_LOGIC;
        out1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_mul_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_compare IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component bigint_math_bigint_zero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_we0 : OUT STD_LOGIC;
        in_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add_1_tempB IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_PERIPH_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        a_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : IN STD_LOGIC;
        a_we0 : IN STD_LOGIC;
        a_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : IN STD_LOGIC;
        b_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        c_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        c_ce0 : IN STD_LOGIC;
        c_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        d_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        d_ce0 : IN STD_LOGIC;
        d_q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    bigint_math_PERIPH_BUS_s_axi_U : component bigint_math_PERIPH_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_PERIPH_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_PERIPH_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_PERIPH_BUS_AWVALID,
        AWREADY => s_axi_PERIPH_BUS_AWREADY,
        AWADDR => s_axi_PERIPH_BUS_AWADDR,
        WVALID => s_axi_PERIPH_BUS_WVALID,
        WREADY => s_axi_PERIPH_BUS_WREADY,
        WDATA => s_axi_PERIPH_BUS_WDATA,
        WSTRB => s_axi_PERIPH_BUS_WSTRB,
        ARVALID => s_axi_PERIPH_BUS_ARVALID,
        ARREADY => s_axi_PERIPH_BUS_ARREADY,
        ARADDR => s_axi_PERIPH_BUS_ARADDR,
        RVALID => s_axi_PERIPH_BUS_RVALID,
        RREADY => s_axi_PERIPH_BUS_RREADY,
        RDATA => s_axi_PERIPH_BUS_RDATA,
        RRESP => s_axi_PERIPH_BUS_RRESP,
        BVALID => s_axi_PERIPH_BUS_BVALID,
        BREADY => s_axi_PERIPH_BUS_BREADY,
        BRESP => s_axi_PERIPH_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        a_address0 => a_address0,
        a_ce0 => a_ce0,
        a_we0 => a_we0,
        a_d0 => a_d0,
        b_address0 => grp_bigint_math_bigint_mul_1_fu_131_b_address0,
        b_ce0 => grp_bigint_math_bigint_mul_1_fu_131_b_ce0,
        b_q0 => b_q0,
        c_address0 => grp_bigint_math_bigint_compare_fu_145_b_address0,
        c_ce0 => grp_bigint_math_bigint_compare_fu_145_b_ce0,
        c_q0 => c_q0,
        d_address0 => grp_bigint_math_bigint_div_fu_119_b_address0,
        d_ce0 => grp_bigint_math_bigint_div_fu_119_b_ce0,
        d_q0 => d_q0);

    loopCount_U : component bigint_math_bigint_add_1_tempB
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => loopCount_address0,
        ce0 => loopCount_ce0,
        we0 => loopCount_we0,
        d0 => loopCount_d0,
        q0 => loopCount_q0);

    temp_U : component bigint_math_bigint_add_1_tempB
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => temp_d0,
        q0 => temp_q0);

    grp_bigint_math_bigint_div_fu_119 : component bigint_math_bigint_div
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_bigint_math_bigint_div_fu_119_ap_start,
        ap_done => grp_bigint_math_bigint_div_fu_119_ap_done,
        ap_idle => grp_bigint_math_bigint_div_fu_119_ap_idle,
        ap_ready => grp_bigint_math_bigint_div_fu_119_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_div_fu_119_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_div_fu_119_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_div_fu_119_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_div_fu_119_out_r_d0,
        out_r_q0 => loopCount_q0,
        out1_address0 => grp_bigint_math_bigint_div_fu_119_out1_address0,
        out1_ce0 => grp_bigint_math_bigint_div_fu_119_out1_ce0,
        out1_we0 => grp_bigint_math_bigint_div_fu_119_out1_we0,
        out1_d0 => grp_bigint_math_bigint_div_fu_119_out1_d0,
        a_address0 => grp_bigint_math_bigint_div_fu_119_a_address0,
        a_ce0 => grp_bigint_math_bigint_div_fu_119_a_ce0,
        a_q0 => temp_q0,
        b_address0 => grp_bigint_math_bigint_div_fu_119_b_address0,
        b_ce0 => grp_bigint_math_bigint_div_fu_119_b_ce0,
        b_q0 => d_q0);

    grp_bigint_math_bigint_mul_1_fu_131 : component bigint_math_bigint_mul_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_bigint_math_bigint_mul_1_fu_131_ap_start,
        ap_done => grp_bigint_math_bigint_mul_1_fu_131_ap_done,
        ap_idle => grp_bigint_math_bigint_mul_1_fu_131_ap_idle,
        ap_ready => grp_bigint_math_bigint_mul_1_fu_131_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_mul_1_fu_131_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_mul_1_fu_131_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_mul_1_fu_131_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_mul_1_fu_131_out_r_d0,
        out_r_q0 => temp_q0,
        b_address0 => grp_bigint_math_bigint_mul_1_fu_131_b_address0,
        b_ce0 => grp_bigint_math_bigint_mul_1_fu_131_b_ce0,
        b_q0 => b_q0);

    grp_bigint_math_bigint_add_1_fu_138 : component bigint_math_bigint_add_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_bigint_math_bigint_add_1_fu_138_ap_start,
        ap_done => grp_bigint_math_bigint_add_1_fu_138_ap_done,
        ap_idle => grp_bigint_math_bigint_add_1_fu_138_ap_idle,
        ap_ready => grp_bigint_math_bigint_add_1_fu_138_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_add_1_fu_138_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_add_1_fu_138_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_add_1_fu_138_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_add_1_fu_138_out_r_d0,
        out_r_q0 => loopCount_q0);

    grp_bigint_math_bigint_compare_fu_145 : component bigint_math_bigint_compare
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_bigint_math_bigint_compare_fu_145_ap_start,
        ap_done => grp_bigint_math_bigint_compare_fu_145_ap_done,
        ap_idle => grp_bigint_math_bigint_compare_fu_145_ap_idle,
        ap_ready => grp_bigint_math_bigint_compare_fu_145_ap_ready,
        a_address0 => grp_bigint_math_bigint_compare_fu_145_a_address0,
        a_ce0 => grp_bigint_math_bigint_compare_fu_145_a_ce0,
        a_q0 => loopCount_q0,
        b_address0 => grp_bigint_math_bigint_compare_fu_145_b_address0,
        b_ce0 => grp_bigint_math_bigint_compare_fu_145_b_ce0,
        b_q0 => c_q0,
        ap_return => grp_bigint_math_bigint_compare_fu_145_ap_return);

    grp_bigint_math_bigint_zero_fu_152 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_bigint_math_bigint_zero_fu_152_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_152_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_152_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_152_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_152_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_152_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_152_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_152_in_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_add_1_fu_138_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_bigint_math_bigint_add_1_fu_138_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_grp_bigint_math_bigint_add_1_fu_138_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_add_1_fu_138_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_add_1_fu_138_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_compare_fu_145_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_bigint_math_bigint_compare_fu_145_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
                    ap_reg_grp_bigint_math_bigint_compare_fu_145_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_compare_fu_145_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_compare_fu_145_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_div_fu_119_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_bigint_math_bigint_div_fu_119_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
                    ap_reg_grp_bigint_math_bigint_div_fu_119_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_div_fu_119_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_div_fu_119_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_mul_1_fu_131_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_bigint_math_bigint_mul_1_fu_131_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_grp_bigint_math_bigint_mul_1_fu_131_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_mul_1_fu_131_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_mul_1_fu_131_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_152_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_152_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond_i_fu_157_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_152_ap_done))) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_152_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_152_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_152_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_i_fu_157_p2 = ap_const_lv1_0))) then 
                i_i_reg_108 <= i_fu_163_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_i_reg_108 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_bigint_math_bigint_div_fu_119_ap_done, grp_bigint_math_bigint_mul_1_fu_131_ap_done, grp_bigint_math_bigint_add_1_fu_138_ap_done, grp_bigint_math_bigint_compare_fu_145_ap_done, grp_bigint_math_bigint_zero_fu_152_ap_done, exitcond_i_fu_157_p2, phitmp_i_fu_174_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((exitcond_i_fu_157_p2 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_152_ap_done))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_152_ap_done))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_add_1_fu_138_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_mul_1_fu_131_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_145_ap_done)) and not((ap_const_lv1_0 = phitmp_i_fu_174_p2)))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_145_ap_done)) and (ap_const_lv1_0 = phitmp_i_fu_174_p2))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_152_ap_done))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_div_fu_119_ap_done))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_bigint_math_bigint_div_fu_119_out1_address0, ap_sig_cseq_ST_st12_fsm_11, tmp_i_fu_169_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            a_address0 <= tmp_i_fu_169_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            a_address0 <= grp_bigint_math_bigint_div_fu_119_out1_address0;
        else 
            a_address0 <= "XXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_bigint_math_bigint_div_fu_119_out1_ce0, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            a_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            a_ce0 <= grp_bigint_math_bigint_div_fu_119_out1_ce0;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    a_d0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_bigint_math_bigint_div_fu_119_out1_d0, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            a_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            a_d0 <= grp_bigint_math_bigint_div_fu_119_out1_d0;
        else 
            a_d0 <= "XXXXXXXX";
        end if; 
    end process;


    a_we0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, grp_bigint_math_bigint_div_fu_119_out1_we0, exitcond_i_fu_157_p2, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_i_fu_157_p2 = ap_const_lv1_0)))) then 
            a_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            a_we0 <= grp_bigint_math_bigint_div_fu_119_out1_we0;
        else 
            a_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_bigint_math_bigint_div_fu_119_ap_done, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_logic_0 = grp_bigint_math_bigint_div_fu_119_ap_done)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_bigint_math_bigint_div_fu_119_ap_done, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_logic_0 = grp_bigint_math_bigint_div_fu_119_ap_done)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_100_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_100 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_205_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_205 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_212_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_212 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_229_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_229 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_236_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_236 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_255_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_255 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_262_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_262 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_273_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_273 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_284_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_284 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_29_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_29 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_292_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_292 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_299_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_299 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_299)
    begin
        if (ap_sig_299) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_205)
    begin
        if (ap_sig_205) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_212)
    begin
        if (ap_sig_212) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_29)
    begin
        if (ap_sig_29) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_100)
    begin
        if (ap_sig_100) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_273)
    begin
        if (ap_sig_273) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_292)
    begin
        if (ap_sig_292) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_229)
    begin
        if (ap_sig_229) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_236)
    begin
        if (ap_sig_236) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_255)
    begin
        if (ap_sig_255) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_262)
    begin
        if (ap_sig_262) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_284)
    begin
        if (ap_sig_284) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_i_fu_157_p2 <= "1" when (i_i_reg_108 = ap_const_lv9_100) else "0";
    grp_bigint_math_bigint_add_1_fu_138_ap_start <= ap_reg_grp_bigint_math_bigint_add_1_fu_138_ap_start;
    grp_bigint_math_bigint_compare_fu_145_ap_start <= ap_reg_grp_bigint_math_bigint_compare_fu_145_ap_start;
    grp_bigint_math_bigint_div_fu_119_ap_start <= ap_reg_grp_bigint_math_bigint_div_fu_119_ap_start;
    grp_bigint_math_bigint_mul_1_fu_131_ap_start <= ap_reg_grp_bigint_math_bigint_mul_1_fu_131_ap_start;
    grp_bigint_math_bigint_zero_fu_152_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_152_ap_start;
    i_fu_163_p2 <= std_logic_vector(unsigned(i_i_reg_108) + unsigned(ap_const_lv9_1));

    loopCount_address0_assign_proc : process(grp_bigint_math_bigint_div_fu_119_out_r_address0, grp_bigint_math_bigint_add_1_fu_138_out_r_address0, grp_bigint_math_bigint_compare_fu_145_a_address0, grp_bigint_math_bigint_zero_fu_152_in_r_address0, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            loopCount_address0 <= grp_bigint_math_bigint_zero_fu_152_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            loopCount_address0 <= grp_bigint_math_bigint_compare_fu_145_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            loopCount_address0 <= grp_bigint_math_bigint_add_1_fu_138_out_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            loopCount_address0 <= grp_bigint_math_bigint_div_fu_119_out_r_address0;
        else 
            loopCount_address0 <= "XXXXXXXX";
        end if; 
    end process;


    loopCount_ce0_assign_proc : process(grp_bigint_math_bigint_div_fu_119_out_r_ce0, grp_bigint_math_bigint_add_1_fu_138_out_r_ce0, grp_bigint_math_bigint_compare_fu_145_a_ce0, grp_bigint_math_bigint_zero_fu_152_in_r_ce0, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            loopCount_ce0 <= grp_bigint_math_bigint_zero_fu_152_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            loopCount_ce0 <= grp_bigint_math_bigint_compare_fu_145_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            loopCount_ce0 <= grp_bigint_math_bigint_add_1_fu_138_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            loopCount_ce0 <= grp_bigint_math_bigint_div_fu_119_out_r_ce0;
        else 
            loopCount_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    loopCount_d0_assign_proc : process(grp_bigint_math_bigint_div_fu_119_out_r_d0, grp_bigint_math_bigint_add_1_fu_138_out_r_d0, grp_bigint_math_bigint_zero_fu_152_in_r_d0, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            loopCount_d0 <= grp_bigint_math_bigint_zero_fu_152_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            loopCount_d0 <= grp_bigint_math_bigint_add_1_fu_138_out_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            loopCount_d0 <= grp_bigint_math_bigint_div_fu_119_out_r_d0;
        else 
            loopCount_d0 <= "XXXXXXXX";
        end if; 
    end process;


    loopCount_we0_assign_proc : process(grp_bigint_math_bigint_div_fu_119_out_r_we0, grp_bigint_math_bigint_add_1_fu_138_out_r_we0, grp_bigint_math_bigint_zero_fu_152_in_r_we0, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            loopCount_we0 <= grp_bigint_math_bigint_zero_fu_152_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            loopCount_we0 <= grp_bigint_math_bigint_add_1_fu_138_out_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            loopCount_we0 <= grp_bigint_math_bigint_div_fu_119_out_r_we0;
        else 
            loopCount_we0 <= ap_const_logic_0;
        end if; 
    end process;

    phitmp_i_fu_174_p2 <= "1" when (grp_bigint_math_bigint_compare_fu_145_ap_return = ap_const_lv2_0) else "0";

    temp_address0_assign_proc : process(grp_bigint_math_bigint_div_fu_119_a_address0, grp_bigint_math_bigint_mul_1_fu_131_out_r_address0, grp_bigint_math_bigint_zero_fu_152_in_r_address0, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            temp_address0 <= ap_const_lv64_FF(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            temp_address0 <= grp_bigint_math_bigint_zero_fu_152_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            temp_address0 <= grp_bigint_math_bigint_mul_1_fu_131_out_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            temp_address0 <= grp_bigint_math_bigint_div_fu_119_a_address0;
        else 
            temp_address0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(grp_bigint_math_bigint_div_fu_119_a_ce0, grp_bigint_math_bigint_mul_1_fu_131_out_r_ce0, grp_bigint_math_bigint_zero_fu_152_ap_done, grp_bigint_math_bigint_zero_fu_152_in_r_ce0, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_152_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            temp_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            temp_ce0 <= grp_bigint_math_bigint_zero_fu_152_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            temp_ce0 <= grp_bigint_math_bigint_mul_1_fu_131_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            temp_ce0 <= grp_bigint_math_bigint_div_fu_119_a_ce0;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_d0_assign_proc : process(grp_bigint_math_bigint_mul_1_fu_131_out_r_d0, grp_bigint_math_bigint_zero_fu_152_in_r_d0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            temp_d0 <= ap_const_lv8_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            temp_d0 <= grp_bigint_math_bigint_zero_fu_152_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            temp_d0 <= grp_bigint_math_bigint_mul_1_fu_131_out_r_d0;
        else 
            temp_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_we0_assign_proc : process(grp_bigint_math_bigint_mul_1_fu_131_out_r_we0, grp_bigint_math_bigint_zero_fu_152_ap_done, grp_bigint_math_bigint_zero_fu_152_in_r_we0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_152_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)))) then 
            temp_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            temp_we0 <= grp_bigint_math_bigint_zero_fu_152_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            temp_we0 <= grp_bigint_math_bigint_mul_1_fu_131_out_r_we0;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_i_fu_169_p1 <= std_logic_vector(resize(unsigned(i_i_reg_108),64));
end behav;
