// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module bigint_math_bigint_add_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0,
        out_r_q0
);

parameter    ap_ST_st1_fsm_0 = 14'b1;
parameter    ap_ST_st2_fsm_1 = 14'b10;
parameter    ap_ST_st3_fsm_2 = 14'b100;
parameter    ap_ST_st4_fsm_3 = 14'b1000;
parameter    ap_ST_st5_fsm_4 = 14'b10000;
parameter    ap_ST_st6_fsm_5 = 14'b100000;
parameter    ap_ST_st7_fsm_6 = 14'b1000000;
parameter    ap_ST_st8_fsm_7 = 14'b10000000;
parameter    ap_ST_st9_fsm_8 = 14'b100000000;
parameter    ap_ST_st10_fsm_9 = 14'b1000000000;
parameter    ap_ST_st11_fsm_10 = 14'b10000000000;
parameter    ap_ST_st12_fsm_11 = 14'b100000000000;
parameter    ap_ST_st13_fsm_12 = 14'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 14'b10000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv9_FF = 9'b11111111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv9_1FF = 9'b111111111;
parameter    ap_const_lv9_1FE = 9'b111111110;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [7:0] out_r_d0;
input  [7:0] out_r_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] out_r_address0;
reg out_r_ce0;
reg out_r_we0;
reg[7:0] out_r_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_31;
wire   [7:0] tempA9_address0;
reg    tempA9_ce0;
wire   [0:0] tempA9_q0;
reg   [7:0] reg_167;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_56;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_63;
wire   [8:0] i_12_fu_177_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_73;
wire   [8:0] i_13_fu_189_p2;
reg   [8:0] i_13_reg_352;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_82;
wire   [63:0] tmp_i3_fu_195_p1;
reg   [63:0] tmp_i3_reg_357;
wire   [0:0] exitcond_i2_fu_183_p2;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_99;
wire   [0:0] tmp_fu_204_p3;
reg   [7:0] b_addr_reg_380;
wire   [7:0] sum_fu_223_p2;
reg   [7:0] sum_reg_385;
wire   [0:0] tmp_37_fu_243_p3;
reg   [0:0] tmp_37_reg_390;
wire   [7:0] carry_fu_251_p1;
reg   [7:0] carry_reg_395;
wire   [0:0] tmp_38_fu_269_p3;
reg   [0:0] tmp_38_reg_400;
reg   [7:0] b_addr_1_reg_404;
wire   [7:0] tmp_55_fu_288_p2;
reg   [7:0] tmp_55_reg_409;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_128;
wire   [8:0] i_8_fu_293_p2;
reg   [8:0] i_8_reg_414;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_137;
reg   [7:0] b_addr_2_reg_419;
wire   [0:0] tmp_39_fu_317_p3;
reg   [0:0] tmp_39_reg_424;
reg   [7:0] b_addr_3_reg_428;
wire   [7:0] tmp_61_fu_336_p2;
reg   [7:0] tmp_61_reg_433;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_155;
reg   [7:0] tempB_address0;
reg    tempB_ce0;
reg    tempB_we0;
reg   [7:0] tempB_d0;
wire   [7:0] tempB_q0;
wire    grp_bigint_math_bigint_zero_fu_153_ap_start;
wire    grp_bigint_math_bigint_zero_fu_153_ap_done;
wire    grp_bigint_math_bigint_zero_fu_153_ap_idle;
wire    grp_bigint_math_bigint_zero_fu_153_ap_ready;
wire   [7:0] grp_bigint_math_bigint_zero_fu_153_in_r_address0;
wire    grp_bigint_math_bigint_zero_fu_153_in_r_ce0;
wire    grp_bigint_math_bigint_zero_fu_153_in_r_we0;
wire   [7:0] grp_bigint_math_bigint_zero_fu_153_in_r_d0;
reg   [8:0] i_i_reg_119;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_184;
wire   [0:0] exitcond_i_fu_171_p2;
reg   [8:0] i_i1_reg_130;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_199;
reg   [8:0] i_reg_141;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_211;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_219;
reg    ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start;
wire   [63:0] tmp_s_fu_212_p1;
wire  signed [63:0] tmp_53_fu_283_p1;
wire  signed [63:0] tmp_56_fu_299_p1;
wire  signed [63:0] tmp_59_fu_331_p1;
wire   [7:0] grp_fu_160_p2;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_245;
wire  signed [31:0] i_cast_fu_200_p1;
wire   [7:0] tempA_load_cast_fu_219_p1;
wire   [8:0] tmp_57_cast_fu_233_p1;
wire   [8:0] tmp_56_cast_fu_229_p1;
wire   [8:0] tmp_50_fu_237_p2;
wire   [8:0] tmp_60_cast_fu_255_p1;
wire   [8:0] tmp_61_cast_fu_259_p1;
wire   [8:0] tmp_51_fu_263_p2;
wire   [8:0] tmp_52_fu_277_p2;
wire   [8:0] tmp_72_cast_fu_308_p1;
wire   [8:0] tmp_71_cast_fu_304_p1;
wire   [8:0] tmp_57_fu_311_p2;
wire   [8:0] tmp_58_fu_325_p2;
reg   [13:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'b1;
#0 ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start = 1'b0;
end

bigint_math_bigint_add_1_tempA9 #(
    .DataWidth( 1 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
tempA9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tempA9_address0),
    .ce0(tempA9_ce0),
    .q0(tempA9_q0)
);

bigint_math_bigint_add_1_tempB #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
tempB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tempB_address0),
    .ce0(tempB_ce0),
    .we0(tempB_we0),
    .d0(tempB_d0),
    .q0(tempB_q0)
);

bigint_math_bigint_zero grp_bigint_math_bigint_zero_fu_153(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_bigint_math_bigint_zero_fu_153_ap_start),
    .ap_done(grp_bigint_math_bigint_zero_fu_153_ap_done),
    .ap_idle(grp_bigint_math_bigint_zero_fu_153_ap_idle),
    .ap_ready(grp_bigint_math_bigint_zero_fu_153_ap_ready),
    .in_r_address0(grp_bigint_math_bigint_zero_fu_153_in_r_address0),
    .in_r_ce0(grp_bigint_math_bigint_zero_fu_153_in_r_ce0),
    .in_r_we0(grp_bigint_math_bigint_zero_fu_153_in_r_we0),
    .in_r_d0(grp_bigint_math_bigint_zero_fu_153_in_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start <= 1'b0;
    end else begin
        if ((((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond_i2_fu_183_p2 == 1'b0)))) begin
            ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start <= 1'b1;
        end else if ((1'b1 == grp_bigint_math_bigint_zero_fu_153_ap_ready)) begin
            ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond_i_fu_171_p2))) begin
        i_i1_reg_130 <= ap_const_lv9_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i_i1_reg_130 <= i_13_reg_352;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond_i_fu_171_p2))) begin
        i_i_reg_119 <= i_12_fu_177_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == grp_bigint_math_bigint_zero_fu_153_ap_done))) begin
        i_i_reg_119 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        i_reg_141 <= i_8_reg_414;
    end else if ((~(1'b0 == grp_bigint_math_bigint_zero_fu_153_ap_done) & (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        i_reg_141 <= ap_const_lv9_FF;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) & ~(1'b0 == tmp_38_fu_269_p3))) begin
        b_addr_1_reg_404 <= tmp_53_fu_283_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        b_addr_2_reg_419 <= tmp_56_fu_299_p1;
        i_8_reg_414 <= i_8_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == tmp_39_fu_317_p3))) begin
        b_addr_3_reg_428 <= tmp_59_fu_331_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & (1'b0 == tmp_fu_204_p3))) begin
        b_addr_reg_380 <= tmp_s_fu_212_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        carry_reg_395[0] <= carry_fu_251_p1[0];
        sum_reg_385 <= sum_fu_223_p2;
        tmp_37_reg_390 <= tmp_50_fu_237_p2[ap_const_lv32_8];
        tmp_38_reg_400 <= tmp_51_fu_263_p2[ap_const_lv32_8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_13_reg_352 <= i_13_fu_189_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        reg_167 <= out_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        tmp_39_reg_424 <= tmp_57_fu_311_p2[ap_const_lv32_8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp_55_reg_409 <= tmp_55_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_61_reg_433 <= tmp_61_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond_i2_fu_183_p2 == 1'b0))) begin
        tmp_i3_reg_357[8 : 0] <= tmp_i3_fu_195_p1[8 : 0];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == tmp_fu_204_p3)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(1'b0 == tmp_fu_204_p3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_245) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_137) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_63) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_155) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_219) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_31) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_184) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_73) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_82) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_199) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_211) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_99) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_56) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_128) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        out_r_address0 = b_addr_2_reg_419;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        out_r_address0 = b_addr_3_reg_428;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        out_r_address0 = b_addr_reg_380;
    end else if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        out_r_address0 = b_addr_1_reg_404;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        out_r_address0 = tmp_59_fu_331_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        out_r_address0 = tmp_56_fu_299_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        out_r_address0 = tmp_53_fu_283_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        out_r_address0 = tmp_s_fu_212_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond_i2_fu_183_p2 == 1'b0))) begin
        out_r_address0 = tmp_i3_fu_195_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_r_address0 = grp_bigint_math_bigint_zero_fu_153_in_r_address0;
    end else begin
        out_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st8_fsm_7) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11) | ((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond_i2_fu_183_p2 == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9))) begin
        out_r_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_r_ce0 = grp_bigint_math_bigint_zero_fu_153_in_r_ce0;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        out_r_d0 = tmp_61_reg_433;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        out_r_d0 = tmp_55_reg_409;
    end else if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) | (1'b1 == ap_sig_cseq_ST_st13_fsm_12))) begin
        out_r_d0 = grp_fu_160_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_r_d0 = grp_bigint_math_bigint_zero_fu_153_in_r_d0;
    end else begin
        out_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) | ((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == tmp_38_reg_400)) | (1'b1 == ap_sig_cseq_ST_st10_fsm_9) | ((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == tmp_39_reg_424)))) begin
        out_r_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        out_r_we0 = grp_bigint_math_bigint_zero_fu_153_in_r_we0;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tempA9_ce0 = 1'b1;
    end else begin
        tempA9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tempB_address0 = tmp_i3_reg_357;
    end else if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tempB_address0 = tmp_s_fu_212_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tempB_address0 = grp_bigint_math_bigint_zero_fu_153_in_r_address0;
    end else begin
        tempB_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) | (1'b1 == ap_sig_cseq_ST_st5_fsm_4))) begin
        tempB_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tempB_ce0 = grp_bigint_math_bigint_zero_fu_153_in_r_ce0;
    end else begin
        tempB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tempB_d0 = out_r_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tempB_d0 = grp_bigint_math_bigint_zero_fu_153_in_r_d0;
    end else begin
        tempB_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tempB_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        tempB_we0 = grp_bigint_math_bigint_zero_fu_153_in_r_we0;
    end else begin
        tempB_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == grp_bigint_math_bigint_zero_fu_153_ap_done)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond_i_fu_171_p2)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(exitcond_i2_fu_183_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == grp_bigint_math_bigint_zero_fu_153_ap_done)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(1'b0 == tmp_fu_204_p3)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_128 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_137 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_155 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_184 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_199 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_211 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_219 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_245 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_31 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_56 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_63 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_73 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_82 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_99 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

assign carry_fu_251_p1 = tmp_37_fu_243_p3;

assign exitcond_i2_fu_183_p2 = ((i_i1_reg_130 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_i_fu_171_p2 = ((i_i_reg_119 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign grp_bigint_math_bigint_zero_fu_153_ap_start = ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start;

assign grp_fu_160_p2 = (ap_const_lv8_1 + out_r_q0);

assign i_12_fu_177_p2 = (i_i_reg_119 + ap_const_lv9_1);

assign i_13_fu_189_p2 = (i_i1_reg_130 + ap_const_lv9_1);

assign i_8_fu_293_p2 = ($signed(i_reg_141) + $signed(ap_const_lv9_1FF));

assign i_cast_fu_200_p1 = $signed(i_reg_141);

assign sum_fu_223_p2 = (tempB_q0 + tempA_load_cast_fu_219_p1);

assign tempA9_address0 = tmp_s_fu_212_p1;

assign tempA_load_cast_fu_219_p1 = tempA9_q0;

assign tmp_37_fu_243_p3 = tmp_50_fu_237_p2[ap_const_lv32_8];

assign tmp_38_fu_269_p3 = tmp_51_fu_263_p2[ap_const_lv32_8];

assign tmp_39_fu_317_p3 = tmp_57_fu_311_p2[ap_const_lv32_8];

assign tmp_50_fu_237_p2 = (tmp_57_cast_fu_233_p1 + tmp_56_cast_fu_229_p1);

assign tmp_51_fu_263_p2 = (tmp_60_cast_fu_255_p1 + tmp_61_cast_fu_259_p1);

assign tmp_52_fu_277_p2 = ($signed(ap_const_lv9_1FF) + $signed(i_reg_141));

assign tmp_53_fu_283_p1 = $signed(tmp_52_fu_277_p2);

assign tmp_55_fu_288_p2 = (sum_reg_385 + reg_167);

assign tmp_56_cast_fu_229_p1 = tempA9_q0;

assign tmp_56_fu_299_p1 = $signed(i_8_fu_293_p2);

assign tmp_57_cast_fu_233_p1 = tempB_q0;

assign tmp_57_fu_311_p2 = (tmp_72_cast_fu_308_p1 + tmp_71_cast_fu_304_p1);

assign tmp_58_fu_325_p2 = ($signed(ap_const_lv9_1FE) + $signed(i_reg_141));

assign tmp_59_fu_331_p1 = $signed(tmp_58_fu_325_p2);

assign tmp_60_cast_fu_255_p1 = out_r_q0;

assign tmp_61_cast_fu_259_p1 = sum_fu_223_p2;

assign tmp_61_fu_336_p2 = (reg_167 + carry_reg_395);

assign tmp_71_cast_fu_304_p1 = out_r_q0;

assign tmp_72_cast_fu_308_p1 = tmp_37_reg_390;

assign tmp_fu_204_p3 = i_reg_141[ap_const_lv32_8];

assign tmp_i3_fu_195_p1 = i_i1_reg_130;

assign tmp_s_fu_212_p1 = $unsigned(i_cast_fu_200_p1);

always @ (posedge ap_clk) begin
    tmp_i3_reg_357[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    carry_reg_395[7:1] <= 7'b0000000;
end

endmodule //bigint_math_bigint_add_1
