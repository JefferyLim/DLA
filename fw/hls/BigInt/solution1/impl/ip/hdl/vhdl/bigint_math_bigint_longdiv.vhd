-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bigint_math_bigint_longdiv is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    out1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out1_ce0 : OUT STD_LOGIC;
    out1_we0 : OUT STD_LOGIC;
    out1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b_ce0 : OUT STD_LOGIC;
    b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of bigint_math_bigint_longdiv is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000001000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000010000000000000000000000000000000";
    constant ap_ST_st33_fsm_32 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000100000000000000000000000000000000";
    constant ap_ST_st34_fsm_33 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000001000000000000000000000000000000000";
    constant ap_ST_st35_fsm_34 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000010000000000000000000000000000000000";
    constant ap_ST_st36_fsm_35 : STD_LOGIC_VECTOR (45 downto 0) := "0000000000100000000000000000000000000000000000";
    constant ap_ST_st37_fsm_36 : STD_LOGIC_VECTOR (45 downto 0) := "0000000001000000000000000000000000000000000000";
    constant ap_ST_st38_fsm_37 : STD_LOGIC_VECTOR (45 downto 0) := "0000000010000000000000000000000000000000000000";
    constant ap_ST_st39_fsm_38 : STD_LOGIC_VECTOR (45 downto 0) := "0000000100000000000000000000000000000000000000";
    constant ap_ST_st40_fsm_39 : STD_LOGIC_VECTOR (45 downto 0) := "0000001000000000000000000000000000000000000000";
    constant ap_ST_st41_fsm_40 : STD_LOGIC_VECTOR (45 downto 0) := "0000010000000000000000000000000000000000000000";
    constant ap_ST_st42_fsm_41 : STD_LOGIC_VECTOR (45 downto 0) := "0000100000000000000000000000000000000000000000";
    constant ap_ST_st43_fsm_42 : STD_LOGIC_VECTOR (45 downto 0) := "0001000000000000000000000000000000000000000000";
    constant ap_ST_st44_fsm_43 : STD_LOGIC_VECTOR (45 downto 0) := "0010000000000000000000000000000000000000000000";
    constant ap_ST_st45_fsm_44 : STD_LOGIC_VECTOR (45 downto 0) := "0100000000000000000000000000000000000000000000";
    constant ap_ST_st46_fsm_45 : STD_LOGIC_VECTOR (45 downto 0) := "1000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv64_FF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011111111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (45 downto 0) := "0000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_63 : BOOLEAN;
    signal zero_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zero_ce0 : STD_LOGIC;
    signal zero_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal one_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal one_ce0 : STD_LOGIC;
    signal one_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_680 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal grp_bigint_math_bigint_copy_fu_379_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_398_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_405_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_371_ap_done : STD_LOGIC;
    signal tmp_53_reg_684 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_133 : BOOLEAN;
    signal tmp_54_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_688 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_144 : BOOLEAN;
    signal tmp_55_reg_692 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_428_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_703 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_158 : BOOLEAN;
    signal i_5_fu_436_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_5_reg_707 : STD_LOGIC_VECTOR (8 downto 0);
    signal a_load_reg_717 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_172 : BOOLEAN;
    signal j_6_fu_465_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_181 : BOOLEAN;
    signal aMSB_4_fu_504_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_457_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal aMSB_5_fu_524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_198 : BOOLEAN;
    signal tmp_63_fu_518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_535_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_756 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_212 : BOOLEAN;
    signal i_6_fu_543_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_6_reg_760 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_load_reg_770 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_226 : BOOLEAN;
    signal j_7_fu_572_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_235 : BOOLEAN;
    signal bMSB_4_fu_611_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bMSB_5_fu_631_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_252 : BOOLEAN;
    signal tmp_71_fu_625_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_637_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_reg_802 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_266 : BOOLEAN;
    signal tmp_74_fu_651_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_74_reg_808 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_8_fu_666_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_8_reg_816 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_277 : BOOLEAN;
    signal tempA_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_ce0 : STD_LOGIC;
    signal tempA_we0 : STD_LOGIC;
    signal tempA_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_ce0 : STD_LOGIC;
    signal tempB_we0 : STD_LOGIC;
    signal tempB_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_ce0 : STD_LOGIC;
    signal d_we0 : STD_LOGIC;
    signal d_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quot_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quot_ce0 : STD_LOGIC;
    signal quot_we0 : STD_LOGIC;
    signal quot_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal quot_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitPlace_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitPlace_ce0 : STD_LOGIC;
    signal bitPlace_we0 : STD_LOGIC;
    signal bitPlace_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitPlace_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_sub_fu_326_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_sub_fu_326_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_sub_fu_326_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_sub_fu_326_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_sub_fu_326_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_sub_fu_326_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_sub_fu_326_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_sub_fu_326_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_sub_fu_326_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_sub_fu_326_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_sub_fu_326_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_sub_fu_326_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_sub_fu_326_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_sub_fu_326_b_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_335_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_335_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_335_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_335_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_335_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_335_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_335_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_335_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_335_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_335_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_335_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_335_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_343_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_343_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_343_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_343_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_343_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_leftshift_fu_343_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_343_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_343_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_leftshift_fu_343_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_leftshift_fu_343_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_350_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_350_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_350_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_350_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_350_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_leftshift_fu_350_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_350_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_leftshift_fu_350_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_leftshift_fu_350_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_leftshift_fu_350_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_358_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_358_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_358_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_358_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_358_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_rightshift_fu_358_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_358_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_358_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_rightshift_fu_358_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_rightshift_fu_358_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_358_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_fu_364_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_add_fu_364_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_add_fu_364_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_add_fu_364_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_add_fu_364_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_fu_364_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_fu_364_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_fu_364_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_fu_364_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_fu_364_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_fu_364_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_fu_364_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_371_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_371_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_371_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_371_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_371_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_371_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_371_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_371_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_371_b_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_371_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_bigint_math_bigint_copy_fu_379_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_379_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_379_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_379_to_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_379_to_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_379_to_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_379_to_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_379_from_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_379_from_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_379_from_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_388_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_388_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_388_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_388_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_388_to_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_388_to_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_388_to_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_388_to_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_388_from_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_388_from_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_398_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_398_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_398_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_398_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_398_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_398_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_398_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_405_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_405_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_405_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_405_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_405_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_405_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_405_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i5_reg_178 : STD_LOGIC_VECTOR (8 downto 0);
    signal aMSB_reg_189 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_201 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_57_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal aMSB_1_reg_212 : STD_LOGIC_VECTOR (31 downto 0);
    signal aMSB_2_reg_223 : STD_LOGIC_VECTOR (31 downto 0);
    signal aMSB_3_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_246 : STD_LOGIC_VECTOR (8 downto 0);
    signal bMSB_reg_257 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_reg_269 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_65_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bMSB_1_reg_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal bMSB_2_reg_291 : STD_LOGIC_VECTOR (31 downto 0);
    signal bMSB_3_reg_303 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_reg_315 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_542 : BOOLEAN;
    signal ap_sig_cseq_ST_st38_fsm_37 : STD_LOGIC;
    signal ap_sig_556 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_sub_fu_326_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st27_fsm_26 : STD_LOGIC;
    signal ap_sig_567 : BOOLEAN;
    signal ap_sig_cseq_ST_st42_fsm_41 : STD_LOGIC;
    signal ap_sig_574 : BOOLEAN;
    signal ap_sig_cseq_ST_st28_fsm_27 : STD_LOGIC;
    signal ap_sig_582 : BOOLEAN;
    signal ap_sig_cseq_ST_st43_fsm_42 : STD_LOGIC;
    signal ap_sig_589 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_mul_fu_335_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st40_fsm_39 : STD_LOGIC;
    signal ap_sig_606 : BOOLEAN;
    signal ap_sig_cseq_ST_st41_fsm_40 : STD_LOGIC;
    signal ap_sig_613 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_leftshift_fu_343_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_leftshift_fu_350_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_rightshift_fu_358_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st31_fsm_30 : STD_LOGIC;
    signal ap_sig_626 : BOOLEAN;
    signal ap_sig_cseq_ST_st35_fsm_34 : STD_LOGIC;
    signal ap_sig_633 : BOOLEAN;
    signal ap_sig_cseq_ST_st32_fsm_31 : STD_LOGIC;
    signal ap_sig_641 : BOOLEAN;
    signal ap_sig_cseq_ST_st36_fsm_35 : STD_LOGIC;
    signal ap_sig_648 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_add_fu_364_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st23_fsm_22 : STD_LOGIC;
    signal ap_sig_658 : BOOLEAN;
    signal tmp_15_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st24_fsm_23 : STD_LOGIC;
    signal ap_sig_669 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_compare_fu_371_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_678 : BOOLEAN;
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_685 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_693 : BOOLEAN;
    signal tmp_75_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_grp_bigint_math_bigint_copy_fu_379_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_710 : BOOLEAN;
    signal ap_sig_cseq_ST_st25_fsm_24 : STD_LOGIC;
    signal ap_sig_723 : BOOLEAN;
    signal ap_sig_cseq_ST_st29_fsm_28 : STD_LOGIC;
    signal ap_sig_731 : BOOLEAN;
    signal ap_sig_cseq_ST_st33_fsm_32 : STD_LOGIC;
    signal ap_sig_739 : BOOLEAN;
    signal ap_sig_cseq_ST_st37_fsm_36 : STD_LOGIC;
    signal ap_sig_747 : BOOLEAN;
    signal ap_sig_cseq_ST_st44_fsm_43 : STD_LOGIC;
    signal ap_sig_755 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_763 : BOOLEAN;
    signal ap_sig_cseq_ST_st46_fsm_45 : STD_LOGIC;
    signal ap_sig_770 : BOOLEAN;
    signal ap_sig_cseq_ST_st39_fsm_38 : STD_LOGIC;
    signal ap_sig_777 : BOOLEAN;
    signal ap_sig_cseq_ST_st26_fsm_25 : STD_LOGIC;
    signal ap_sig_785 : BOOLEAN;
    signal ap_sig_cseq_ST_st30_fsm_29 : STD_LOGIC;
    signal ap_sig_792 : BOOLEAN;
    signal ap_sig_cseq_ST_st34_fsm_33 : STD_LOGIC;
    signal ap_sig_800 : BOOLEAN;
    signal ap_sig_cseq_ST_st45_fsm_44 : STD_LOGIC;
    signal ap_sig_807 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_copy_fu_388_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_zero_fu_398_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_833 : BOOLEAN;
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_840 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_zero_fu_405_ap_start : STD_LOGIC := '0';
    signal tmp_56_fu_442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_64_fu_549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal flag_fu_118 : STD_LOGIC_VECTOR (1 downto 0);
    signal flag_3_fu_122 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_cast3_fu_453_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_471_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_60_fu_482_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_59_fu_477_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_cast_fu_488_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_492_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_cast1_fu_560_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_66_fu_578_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_68_fu_589_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_67_fu_584_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_84_cast_fu_595_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_fu_599_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_73_fu_645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_2_cast_fu_657_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (45 downto 0);

    component bigint_math_bigint_sub IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_leftshift IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        shift : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component bigint_math_bigint_rightshift IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_compare IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component bigint_math_bigint_copy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        to_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        to_r_ce0 : OUT STD_LOGIC;
        to_r_we0 : OUT STD_LOGIC;
        to_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        from_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        from_ce0 : OUT STD_LOGIC;
        from_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_zero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_we0 : OUT STD_LOGIC;
        in_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_longdiv_zero IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_longdiv_one IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add_tempA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    zero_U : component bigint_math_bigint_longdiv_zero
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => zero_address0,
        ce0 => zero_ce0,
        q0 => zero_q0);

    one_U : component bigint_math_bigint_longdiv_one
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_address0,
        ce0 => one_ce0,
        q0 => one_q0);

    tempA_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempA_address0,
        ce0 => tempA_ce0,
        we0 => tempA_we0,
        d0 => tempA_d0,
        q0 => tempA_q0);

    tempB_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempB_address0,
        ce0 => tempB_ce0,
        we0 => tempB_we0,
        d0 => tempB_d0,
        q0 => tempB_q0);

    temp_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => temp_d0,
        q0 => temp_q0);

    d_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => d_address0,
        ce0 => d_ce0,
        we0 => d_we0,
        d0 => d_d0,
        q0 => d_q0);

    quot_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => quot_address0,
        ce0 => quot_ce0,
        we0 => quot_we0,
        d0 => quot_d0,
        q0 => quot_q0);

    bitPlace_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bitPlace_address0,
        ce0 => bitPlace_ce0,
        we0 => bitPlace_we0,
        d0 => bitPlace_d0,
        q0 => bitPlace_q0);

    grp_bigint_math_bigint_sub_fu_326 : component bigint_math_bigint_sub
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_sub_fu_326_ap_start,
        ap_done => grp_bigint_math_bigint_sub_fu_326_ap_done,
        ap_idle => grp_bigint_math_bigint_sub_fu_326_ap_idle,
        ap_ready => grp_bigint_math_bigint_sub_fu_326_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_sub_fu_326_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_sub_fu_326_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_sub_fu_326_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_sub_fu_326_out_r_d0,
        a_address0 => grp_bigint_math_bigint_sub_fu_326_a_address0,
        a_ce0 => grp_bigint_math_bigint_sub_fu_326_a_ce0,
        a_q0 => grp_bigint_math_bigint_sub_fu_326_a_q0,
        b_address0 => grp_bigint_math_bigint_sub_fu_326_b_address0,
        b_ce0 => grp_bigint_math_bigint_sub_fu_326_b_ce0,
        b_q0 => grp_bigint_math_bigint_sub_fu_326_b_q0);

    grp_bigint_math_bigint_mul_fu_335 : component bigint_math_bigint_mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_mul_fu_335_ap_start,
        ap_done => grp_bigint_math_bigint_mul_fu_335_ap_done,
        ap_idle => grp_bigint_math_bigint_mul_fu_335_ap_idle,
        ap_ready => grp_bigint_math_bigint_mul_fu_335_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_mul_fu_335_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_mul_fu_335_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_mul_fu_335_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_mul_fu_335_out_r_d0,
        out_r_q0 => temp_q0,
        a_address0 => grp_bigint_math_bigint_mul_fu_335_a_address0,
        a_ce0 => grp_bigint_math_bigint_mul_fu_335_a_ce0,
        a_q0 => out_r_q0,
        b_address0 => grp_bigint_math_bigint_mul_fu_335_b_address0,
        b_ce0 => grp_bigint_math_bigint_mul_fu_335_b_ce0,
        b_q0 => tempB_q0);

    grp_bigint_math_bigint_leftshift_fu_343 : component bigint_math_bigint_leftshift
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_leftshift_fu_343_ap_start,
        ap_done => grp_bigint_math_bigint_leftshift_fu_343_ap_done,
        ap_idle => grp_bigint_math_bigint_leftshift_fu_343_ap_idle,
        ap_ready => grp_bigint_math_bigint_leftshift_fu_343_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_leftshift_fu_343_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_leftshift_fu_343_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_leftshift_fu_343_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_leftshift_fu_343_out_r_d0,
        out_r_q0 => d_q0,
        a_address0 => grp_bigint_math_bigint_leftshift_fu_343_a_address0,
        a_ce0 => grp_bigint_math_bigint_leftshift_fu_343_a_ce0,
        a_q0 => tempB_q0,
        shift => tmp_72_reg_802);

    grp_bigint_math_bigint_leftshift_fu_350 : component bigint_math_bigint_leftshift
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_leftshift_fu_350_ap_start,
        ap_done => grp_bigint_math_bigint_leftshift_fu_350_ap_done,
        ap_idle => grp_bigint_math_bigint_leftshift_fu_350_ap_idle,
        ap_ready => grp_bigint_math_bigint_leftshift_fu_350_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_leftshift_fu_350_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_leftshift_fu_350_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_leftshift_fu_350_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_leftshift_fu_350_out_r_d0,
        out_r_q0 => bitPlace_q0,
        a_address0 => grp_bigint_math_bigint_leftshift_fu_350_a_address0,
        a_ce0 => grp_bigint_math_bigint_leftshift_fu_350_a_ce0,
        a_q0 => one_q0,
        shift => tmp_72_reg_802);

    grp_bigint_math_bigint_rightshift_fu_358 : component bigint_math_bigint_rightshift
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_rightshift_fu_358_ap_start,
        ap_done => grp_bigint_math_bigint_rightshift_fu_358_ap_done,
        ap_idle => grp_bigint_math_bigint_rightshift_fu_358_ap_idle,
        ap_ready => grp_bigint_math_bigint_rightshift_fu_358_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_rightshift_fu_358_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_rightshift_fu_358_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_rightshift_fu_358_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_rightshift_fu_358_out_r_d0,
        out_r_q0 => temp_q0,
        a_address0 => grp_bigint_math_bigint_rightshift_fu_358_a_address0,
        a_ce0 => grp_bigint_math_bigint_rightshift_fu_358_a_ce0,
        a_q0 => grp_bigint_math_bigint_rightshift_fu_358_a_q0);

    grp_bigint_math_bigint_add_fu_364 : component bigint_math_bigint_add
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_add_fu_364_ap_start,
        ap_done => grp_bigint_math_bigint_add_fu_364_ap_done,
        ap_idle => grp_bigint_math_bigint_add_fu_364_ap_idle,
        ap_ready => grp_bigint_math_bigint_add_fu_364_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_add_fu_364_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_add_fu_364_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_add_fu_364_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_add_fu_364_out_r_d0,
        out_r_q0 => temp_q0,
        a_address0 => grp_bigint_math_bigint_add_fu_364_a_address0,
        a_ce0 => grp_bigint_math_bigint_add_fu_364_a_ce0,
        a_q0 => quot_q0,
        b_address0 => grp_bigint_math_bigint_add_fu_364_b_address0,
        b_ce0 => grp_bigint_math_bigint_add_fu_364_b_ce0,
        b_q0 => bitPlace_q0);

    grp_bigint_math_bigint_compare_fu_371 : component bigint_math_bigint_compare
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_compare_fu_371_ap_start,
        ap_done => grp_bigint_math_bigint_compare_fu_371_ap_done,
        ap_idle => grp_bigint_math_bigint_compare_fu_371_ap_idle,
        ap_ready => grp_bigint_math_bigint_compare_fu_371_ap_ready,
        a_address0 => grp_bigint_math_bigint_compare_fu_371_a_address0,
        a_ce0 => grp_bigint_math_bigint_compare_fu_371_a_ce0,
        a_q0 => grp_bigint_math_bigint_compare_fu_371_a_q0,
        b_address0 => grp_bigint_math_bigint_compare_fu_371_b_address0,
        b_ce0 => grp_bigint_math_bigint_compare_fu_371_b_ce0,
        b_q0 => grp_bigint_math_bigint_compare_fu_371_b_q0,
        ap_return => grp_bigint_math_bigint_compare_fu_371_ap_return);

    grp_bigint_math_bigint_copy_fu_379 : component bigint_math_bigint_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_copy_fu_379_ap_start,
        ap_done => grp_bigint_math_bigint_copy_fu_379_ap_done,
        ap_idle => grp_bigint_math_bigint_copy_fu_379_ap_idle,
        ap_ready => grp_bigint_math_bigint_copy_fu_379_ap_ready,
        to_r_address0 => grp_bigint_math_bigint_copy_fu_379_to_r_address0,
        to_r_ce0 => grp_bigint_math_bigint_copy_fu_379_to_r_ce0,
        to_r_we0 => grp_bigint_math_bigint_copy_fu_379_to_r_we0,
        to_r_d0 => grp_bigint_math_bigint_copy_fu_379_to_r_d0,
        from_address0 => grp_bigint_math_bigint_copy_fu_379_from_address0,
        from_ce0 => grp_bigint_math_bigint_copy_fu_379_from_ce0,
        from_q0 => grp_bigint_math_bigint_copy_fu_379_from_q0);

    grp_bigint_math_bigint_copy_fu_388 : component bigint_math_bigint_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_copy_fu_388_ap_start,
        ap_done => grp_bigint_math_bigint_copy_fu_388_ap_done,
        ap_idle => grp_bigint_math_bigint_copy_fu_388_ap_idle,
        ap_ready => grp_bigint_math_bigint_copy_fu_388_ap_ready,
        to_r_address0 => grp_bigint_math_bigint_copy_fu_388_to_r_address0,
        to_r_ce0 => grp_bigint_math_bigint_copy_fu_388_to_r_ce0,
        to_r_we0 => grp_bigint_math_bigint_copy_fu_388_to_r_we0,
        to_r_d0 => grp_bigint_math_bigint_copy_fu_388_to_r_d0,
        from_address0 => grp_bigint_math_bigint_copy_fu_388_from_address0,
        from_ce0 => grp_bigint_math_bigint_copy_fu_388_from_ce0,
        from_q0 => zero_q0);

    grp_bigint_math_bigint_zero_fu_398 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_398_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_398_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_398_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_398_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_398_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_398_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_398_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_398_in_r_d0);

    grp_bigint_math_bigint_zero_fu_405 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_405_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_405_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_405_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_405_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_405_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_405_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_405_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_405_in_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_add_fu_364_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_add_fu_364_ap_start <= ap_const_logic_0;
            else
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22) and (ap_const_lv1_0 = tmp_15_fu_672_p3))) then 
                    ap_reg_grp_bigint_math_bigint_add_fu_364_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_add_fu_364_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_add_fu_364_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_compare_fu_371_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_compare_fu_371_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and not((ap_const_lv1_0 = tmp_75_fu_661_p2))))) then 
                    ap_reg_grp_bigint_math_bigint_compare_fu_371_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_compare_fu_371_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_compare_fu_371_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_copy_fu_379_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_copy_fu_379_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and not((grp_fu_411_p2 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) and (ap_const_lv1_0 = tmp_75_fu_661_p2)) or (ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24) or (ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28) or (ap_const_logic_1 = ap_sig_cseq_ST_st33_fsm_32) or (ap_const_logic_1 = ap_sig_cseq_ST_st37_fsm_36) or (ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43))) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_379_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_copy_fu_379_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_379_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_copy_fu_388_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_copy_fu_388_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and not((grp_fu_411_p2 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st44_fsm_43))) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_388_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_copy_fu_388_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_388_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_leftshift_fu_343_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_leftshift_fu_343_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                    ap_reg_grp_bigint_math_bigint_leftshift_fu_343_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_leftshift_fu_343_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_leftshift_fu_343_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_leftshift_fu_350_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_leftshift_fu_350_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then 
                    ap_reg_grp_bigint_math_bigint_leftshift_fu_350_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_leftshift_fu_350_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_leftshift_fu_350_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_mul_fu_335_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_mul_fu_335_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st40_fsm_39)) then 
                    ap_reg_grp_bigint_math_bigint_mul_fu_335_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_mul_fu_335_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_mul_fu_335_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_rightshift_fu_358_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_rightshift_fu_358_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30) or (ap_const_logic_1 = ap_sig_cseq_ST_st35_fsm_34))) then 
                    ap_reg_grp_bigint_math_bigint_rightshift_fu_358_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_rightshift_fu_358_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_rightshift_fu_358_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_sub_fu_326_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_sub_fu_326_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26) or (ap_const_logic_1 = ap_sig_cseq_ST_st42_fsm_41))) then 
                    ap_reg_grp_bigint_math_bigint_sub_fu_326_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_sub_fu_326_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_sub_fu_326_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_398_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_398_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (not((ap_const_lv1_0 = tmp_71_fu_625_p2)) or not((ap_const_lv1_0 = tmp_13_reg_756)))))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_398_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_398_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_398_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_405_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_405_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (not((ap_const_lv1_0 = tmp_71_fu_625_p2)) or not((ap_const_lv1_0 = tmp_13_reg_756)))))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_405_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_405_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_405_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    aMSB_1_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = tmp_57_fu_447_p2))) then 
                aMSB_1_reg_212 <= aMSB_reg_189;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = tmp_12_fu_457_p3) and (ap_const_lv1_0 = tmp_62_fu_498_p2))) then 
                aMSB_1_reg_212 <= aMSB_4_fu_504_p2;
            end if; 
        end if;
    end process;

    aMSB_2_reg_223_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (not((ap_const_lv1_0 = tmp_12_fu_457_p3)) or not((ap_const_lv1_0 = tmp_62_fu_498_p2))))) then 
                aMSB_2_reg_223 <= aMSB_1_reg_212;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_57_fu_447_p2)))) then 
                aMSB_2_reg_223 <= aMSB_reg_189;
            end if; 
        end if;
    end process;

    aMSB_3_reg_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = tmp_11_reg_703) and not((ap_const_lv1_0 = tmp_63_fu_518_p2)))) then 
                aMSB_3_reg_234 <= aMSB_2_reg_223;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and not((ap_const_lv1_0 = tmp_11_fu_428_p3)))) then 
                aMSB_3_reg_234 <= aMSB_reg_189;
            end if; 
        end if;
    end process;

    aMSB_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (tmp_54_fu_417_p2 = ap_const_lv1_0) and (grp_fu_411_p2 = ap_const_lv1_0))) then 
                aMSB_reg_189 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = tmp_11_reg_703) and (ap_const_lv1_0 = tmp_63_fu_518_p2))) then 
                aMSB_reg_189 <= aMSB_5_fu_524_p2;
            end if; 
        end if;
    end process;

    bMSB_1_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = tmp_65_fu_554_p2))) then 
                bMSB_1_reg_280 <= bMSB_reg_257;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and (ap_const_lv1_0 = tmp_14_fu_564_p3) and (ap_const_lv1_0 = tmp_70_fu_605_p2))) then 
                bMSB_1_reg_280 <= bMSB_4_fu_611_p2;
            end if; 
        end if;
    end process;

    bMSB_2_reg_291_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and (not((ap_const_lv1_0 = tmp_14_fu_564_p3)) or not((ap_const_lv1_0 = tmp_70_fu_605_p2))))) then 
                bMSB_2_reg_291 <= bMSB_1_reg_280;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and not((ap_const_lv1_0 = tmp_65_fu_554_p2)))) then 
                bMSB_2_reg_291 <= bMSB_reg_257;
            end if; 
        end if;
    end process;

    bMSB_3_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = tmp_13_reg_756) and not((ap_const_lv1_0 = tmp_71_fu_625_p2)))) then 
                bMSB_3_reg_303 <= bMSB_2_reg_291;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = tmp_13_fu_535_p3)))) then 
                bMSB_3_reg_303 <= bMSB_reg_257;
            end if; 
        end if;
    end process;

    bMSB_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = tmp_13_reg_756) and (ap_const_lv1_0 = tmp_71_fu_625_p2))) then 
                bMSB_reg_257 <= bMSB_5_fu_631_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (not((ap_const_lv1_0 = tmp_63_fu_518_p2)) or not((ap_const_lv1_0 = tmp_11_reg_703))))) then 
                bMSB_reg_257 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    flag_3_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and (ap_const_lv1_0 = tmp_14_fu_564_p3) and not((ap_const_lv1_0 = tmp_70_fu_605_p2)))) then 
                flag_3_fu_122(0) <= '1';
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (not((ap_const_lv1_0 = tmp_63_fu_518_p2)) or not((ap_const_lv1_0 = tmp_11_reg_703))))) then 
                flag_3_fu_122(0) <= '0';
            end if; 
        end if;
    end process;

    flag_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = tmp_12_fu_457_p3) and not((ap_const_lv1_0 = tmp_62_fu_498_p2)))) then 
                flag_fu_118(0) <= '1';
            elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (tmp_54_fu_417_p2 = ap_const_lv1_0) and (grp_fu_411_p2 = ap_const_lv1_0))) then 
                flag_fu_118(0) <= '0';
            end if; 
        end if;
    end process;

    i5_reg_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (tmp_54_fu_417_p2 = ap_const_lv1_0) and (grp_fu_411_p2 = ap_const_lv1_0))) then 
                i5_reg_178 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = tmp_11_reg_703) and (ap_const_lv1_0 = tmp_63_fu_518_p2))) then 
                i5_reg_178 <= i_5_reg_707;
            end if; 
        end if;
    end process;

    i_1_reg_246_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = tmp_13_reg_756) and (ap_const_lv1_0 = tmp_71_fu_625_p2))) then 
                i_1_reg_246 <= i_6_reg_760;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (not((ap_const_lv1_0 = tmp_63_fu_518_p2)) or not((ap_const_lv1_0 = tmp_11_reg_703))))) then 
                i_1_reg_246 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_1_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_lv1_0 = tmp_65_fu_554_p2))) then 
                j_1_reg_269 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and (ap_const_lv1_0 = tmp_14_fu_564_p3) and (ap_const_lv1_0 = tmp_70_fu_605_p2))) then 
                j_1_reg_269 <= j_7_fu_572_p2;
            end if; 
        end if;
    end process;

    j_2_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37) and not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done)))) then 
                j_2_reg_315 <= j_8_reg_816;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_398_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_405_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_leftshift_fu_343_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_leftshift_fu_350_ap_done))))) then 
                j_2_reg_315 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    j_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = tmp_57_fu_447_p2))) then 
                j_reg_201 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_lv1_0 = tmp_12_fu_457_p3) and (ap_const_lv1_0 = tmp_62_fu_498_p2))) then 
                j_reg_201 <= j_6_fu_465_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                a_load_reg_717 <= a_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                b_load_reg_770 <= b_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                i_5_reg_707 <= i_5_fu_436_p2;
                tmp_11_reg_703 <= i5_reg_178(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                i_6_reg_760 <= i_6_fu_543_p2;
                tmp_13_reg_756 <= i_1_reg_246(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then
                j_8_reg_816 <= j_8_fu_666_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)))) then
                tmp_53_reg_684 <= grp_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then
                tmp_54_reg_688 <= tmp_54_fu_417_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (tmp_54_fu_417_p2 = ap_const_lv1_0))) then
                tmp_55_reg_692 <= grp_fu_411_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19)) then
                tmp_72_reg_802 <= tmp_72_fu_637_p2;
                tmp_74_reg_808 <= tmp_74_fu_651_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_398_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_405_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done))))) then
                tmp_s_reg_680 <= grp_fu_411_p2;
            end if;
        end if;
    end process;
    flag_fu_118(1) <= '0';
    flag_3_fu_122(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_fu_411_p2, tmp_s_reg_680, grp_bigint_math_bigint_copy_fu_379_ap_done, grp_bigint_math_bigint_zero_fu_398_ap_done, grp_bigint_math_bigint_zero_fu_405_ap_done, grp_bigint_math_bigint_compare_fu_371_ap_done, tmp_53_reg_684, tmp_54_fu_417_p2, tmp_54_reg_688, tmp_55_reg_692, tmp_11_fu_428_p3, tmp_11_reg_703, tmp_12_fu_457_p3, tmp_62_fu_498_p2, tmp_63_fu_518_p2, tmp_13_fu_535_p3, tmp_13_reg_756, tmp_14_fu_564_p3, tmp_70_fu_605_p2, tmp_71_fu_625_p2, grp_bigint_math_bigint_sub_fu_326_ap_done, grp_bigint_math_bigint_mul_fu_335_ap_done, grp_bigint_math_bigint_leftshift_fu_343_ap_done, grp_bigint_math_bigint_leftshift_fu_350_ap_done, grp_bigint_math_bigint_rightshift_fu_358_ap_done, grp_bigint_math_bigint_add_fu_364_ap_done, grp_bigint_math_bigint_copy_fu_388_ap_done, tmp_57_fu_447_p2, tmp_65_fu_554_p2, tmp_15_fu_672_p3, tmp_75_fu_661_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_398_ap_done))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_398_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if ((not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_398_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_405_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done))) and not((grp_fu_411_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st43_fsm_42;
                elsif ((not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_398_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_405_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done))) and (grp_fu_411_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when ap_ST_st8_fsm_7 => 
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and not((grp_fu_411_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st46_fsm_45;
                elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (grp_fu_411_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (tmp_54_fu_417_p2 = ap_const_lv1_0) and not((grp_fu_411_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st43_fsm_42;
                elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (tmp_54_fu_417_p2 = ap_const_lv1_0) and (grp_fu_411_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and not((tmp_54_fu_417_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st44_fsm_43;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_lv1_0 = tmp_11_fu_428_p3))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_lv1_0 = tmp_57_fu_447_p2))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st13_fsm_12 => 
                if ((not((ap_const_lv1_0 = tmp_12_fu_457_p3)) or not((ap_const_lv1_0 = tmp_62_fu_498_p2)))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st14_fsm_13 => 
                if ((not((ap_const_lv1_0 = tmp_63_fu_518_p2)) or not((ap_const_lv1_0 = tmp_11_reg_703)))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st15_fsm_14 => 
                if (not((ap_const_lv1_0 = tmp_13_fu_535_p3))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st16_fsm_15 => 
                if (not((ap_const_lv1_0 = tmp_65_fu_554_p2))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                end if;
            when ap_ST_st17_fsm_16 => 
                if ((not((ap_const_lv1_0 = tmp_14_fu_564_p3)) or not((ap_const_lv1_0 = tmp_70_fu_605_p2)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                end if;
            when ap_ST_st18_fsm_17 => 
                if (((ap_const_lv1_0 = tmp_13_reg_756) and (ap_const_lv1_0 = tmp_71_fu_625_p2))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                end if;
            when ap_ST_st19_fsm_18 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_398_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_405_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                end if;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_398_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_405_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_leftshift_fu_343_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_leftshift_fu_350_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                else
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                end if;
            when ap_ST_st22_fsm_21 => 
                if ((ap_const_lv1_0 = tmp_75_fu_661_p2)) then
                    ap_NS_fsm <= ap_ST_st39_fsm_38;
                else
                    ap_NS_fsm <= ap_ST_st23_fsm_22;
                end if;
            when ap_ST_st23_fsm_22 => 
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and not((ap_const_lv1_0 = tmp_15_fu_672_p3)))) then
                    ap_NS_fsm <= ap_ST_st31_fsm_30;
                elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_lv1_0 = tmp_15_fu_672_p3))) then
                    ap_NS_fsm <= ap_ST_st24_fsm_23;
                else
                    ap_NS_fsm <= ap_ST_st23_fsm_22;
                end if;
            when ap_ST_st24_fsm_23 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_add_fu_364_ap_done))) then
                    ap_NS_fsm <= ap_ST_st25_fsm_24;
                else
                    ap_NS_fsm <= ap_ST_st24_fsm_23;
                end if;
            when ap_ST_st25_fsm_24 => 
                ap_NS_fsm <= ap_ST_st26_fsm_25;
            when ap_ST_st26_fsm_25 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done))) then
                    ap_NS_fsm <= ap_ST_st27_fsm_26;
                else
                    ap_NS_fsm <= ap_ST_st26_fsm_25;
                end if;
            when ap_ST_st27_fsm_26 => 
                ap_NS_fsm <= ap_ST_st28_fsm_27;
            when ap_ST_st28_fsm_27 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_sub_fu_326_ap_done))) then
                    ap_NS_fsm <= ap_ST_st29_fsm_28;
                else
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                end if;
            when ap_ST_st29_fsm_28 => 
                ap_NS_fsm <= ap_ST_st30_fsm_29;
            when ap_ST_st30_fsm_29 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done))) then
                    ap_NS_fsm <= ap_ST_st31_fsm_30;
                else
                    ap_NS_fsm <= ap_ST_st30_fsm_29;
                end if;
            when ap_ST_st31_fsm_30 => 
                ap_NS_fsm <= ap_ST_st32_fsm_31;
            when ap_ST_st32_fsm_31 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_rightshift_fu_358_ap_done))) then
                    ap_NS_fsm <= ap_ST_st33_fsm_32;
                else
                    ap_NS_fsm <= ap_ST_st32_fsm_31;
                end if;
            when ap_ST_st33_fsm_32 => 
                ap_NS_fsm <= ap_ST_st34_fsm_33;
            when ap_ST_st34_fsm_33 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done))) then
                    ap_NS_fsm <= ap_ST_st35_fsm_34;
                else
                    ap_NS_fsm <= ap_ST_st34_fsm_33;
                end if;
            when ap_ST_st35_fsm_34 => 
                ap_NS_fsm <= ap_ST_st36_fsm_35;
            when ap_ST_st36_fsm_35 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_rightshift_fu_358_ap_done))) then
                    ap_NS_fsm <= ap_ST_st37_fsm_36;
                else
                    ap_NS_fsm <= ap_ST_st36_fsm_35;
                end if;
            when ap_ST_st37_fsm_36 => 
                ap_NS_fsm <= ap_ST_st38_fsm_37;
            when ap_ST_st38_fsm_37 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done))) then
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                else
                    ap_NS_fsm <= ap_ST_st38_fsm_37;
                end if;
            when ap_ST_st39_fsm_38 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done))) then
                    ap_NS_fsm <= ap_ST_st40_fsm_39;
                else
                    ap_NS_fsm <= ap_ST_st39_fsm_38;
                end if;
            when ap_ST_st40_fsm_39 => 
                ap_NS_fsm <= ap_ST_st41_fsm_40;
            when ap_ST_st41_fsm_40 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_mul_fu_335_ap_done))) then
                    ap_NS_fsm <= ap_ST_st42_fsm_41;
                else
                    ap_NS_fsm <= ap_ST_st41_fsm_40;
                end if;
            when ap_ST_st42_fsm_41 => 
                ap_NS_fsm <= ap_ST_st43_fsm_42;
            when ap_ST_st43_fsm_42 => 
                if (not(((tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0) and (ap_const_logic_0 = grp_bigint_math_bigint_sub_fu_326_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st43_fsm_42;
                end if;
            when ap_ST_st44_fsm_43 => 
                ap_NS_fsm <= ap_ST_st45_fsm_44;
            when ap_ST_st45_fsm_44 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_388_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st43_fsm_42;
                else
                    ap_NS_fsm <= ap_ST_st45_fsm_44;
                end if;
            when ap_ST_st46_fsm_45 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_379_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_388_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st43_fsm_42;
                else
                    ap_NS_fsm <= ap_ST_st46_fsm_45;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    aMSB_4_fu_504_p2 <= std_logic_vector(unsigned(aMSB_1_reg_212) + unsigned(ap_const_lv32_1));
    aMSB_5_fu_524_p2 <= std_logic_vector(unsigned(aMSB_2_reg_223) + unsigned(ap_const_lv32_8));

    a_address0_assign_proc : process(tmp_s_reg_680, ap_sig_cseq_ST_st6_fsm_5, tmp_53_reg_684, tmp_54_reg_688, tmp_55_reg_692, ap_sig_cseq_ST_st11_fsm_10, grp_bigint_math_bigint_sub_fu_326_a_address0, grp_bigint_math_bigint_copy_fu_379_from_address0, ap_sig_cseq_ST_st43_fsm_42, tmp_56_fu_442_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            a_address0 <= tmp_56_fu_442_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            a_address0 <= grp_bigint_math_bigint_copy_fu_379_from_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            a_address0 <= grp_bigint_math_bigint_sub_fu_326_a_address0;
        else 
            a_address0 <= "XXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(tmp_s_reg_680, ap_sig_cseq_ST_st6_fsm_5, tmp_53_reg_684, tmp_54_reg_688, tmp_55_reg_692, ap_sig_cseq_ST_st11_fsm_10, grp_bigint_math_bigint_sub_fu_326_a_ce0, grp_bigint_math_bigint_copy_fu_379_from_ce0, ap_sig_cseq_ST_st43_fsm_42)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            a_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            a_ce0 <= grp_bigint_math_bigint_copy_fu_379_from_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            a_ce0 <= grp_bigint_math_bigint_sub_fu_326_a_ce0;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, tmp_s_reg_680, tmp_53_reg_684, tmp_54_reg_688, tmp_55_reg_692, grp_bigint_math_bigint_sub_fu_326_ap_done, ap_sig_cseq_ST_st43_fsm_42)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and not(((tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0) and (ap_const_logic_0 = grp_bigint_math_bigint_sub_fu_326_ap_done)))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_s_reg_680, tmp_53_reg_684, tmp_54_reg_688, tmp_55_reg_692, grp_bigint_math_bigint_sub_fu_326_ap_done, ap_sig_cseq_ST_st43_fsm_42)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and not(((tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0) and (ap_const_logic_0 = grp_bigint_math_bigint_sub_fu_326_ap_done))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_133_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_133 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_144_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_144 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_158_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_158 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_172_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_172 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_181_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_181 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_198_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_198 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_212_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_212 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_226_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_226 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_235_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_235 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_252_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_252 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_266_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_266 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_277_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_277 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_542_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_542 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_556_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_556 <= (ap_const_lv1_1 = ap_CS_fsm(37 downto 37));
    end process;


    ap_sig_567_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_567 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    ap_sig_574_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_574 <= (ap_const_lv1_1 = ap_CS_fsm(41 downto 41));
    end process;


    ap_sig_582_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_582 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    ap_sig_589_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_589 <= (ap_const_lv1_1 = ap_CS_fsm(42 downto 42));
    end process;


    ap_sig_606_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_606 <= (ap_const_lv1_1 = ap_CS_fsm(39 downto 39));
    end process;


    ap_sig_613_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_613 <= (ap_const_lv1_1 = ap_CS_fsm(40 downto 40));
    end process;


    ap_sig_626_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_626 <= (ap_const_lv1_1 = ap_CS_fsm(30 downto 30));
    end process;


    ap_sig_63_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_63 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_633_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_633 <= (ap_const_lv1_1 = ap_CS_fsm(34 downto 34));
    end process;


    ap_sig_641_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_641 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    ap_sig_648_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_648 <= (ap_const_lv1_1 = ap_CS_fsm(35 downto 35));
    end process;


    ap_sig_658_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_658 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_669_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_669 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    ap_sig_678_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_678 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_685_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_685 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_693_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_693 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_710_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_710 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_723_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_723 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_731_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_731 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    ap_sig_739_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_739 <= (ap_const_lv1_1 = ap_CS_fsm(32 downto 32));
    end process;


    ap_sig_747_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_747 <= (ap_const_lv1_1 = ap_CS_fsm(36 downto 36));
    end process;


    ap_sig_755_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_755 <= (ap_const_lv1_1 = ap_CS_fsm(43 downto 43));
    end process;


    ap_sig_763_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_763 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_770_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_770 <= (ap_const_lv1_1 = ap_CS_fsm(45 downto 45));
    end process;


    ap_sig_777_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_777 <= (ap_const_lv1_1 = ap_CS_fsm(38 downto 38));
    end process;


    ap_sig_785_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_785 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    ap_sig_792_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_792 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    ap_sig_800_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_800 <= (ap_const_lv1_1 = ap_CS_fsm(33 downto 33));
    end process;


    ap_sig_807_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_807 <= (ap_const_lv1_1 = ap_CS_fsm(44 downto 44));
    end process;


    ap_sig_833_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_833 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_840_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_840 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_144)
    begin
        if (ap_sig_144) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_158)
    begin
        if (ap_sig_158) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_172)
    begin
        if (ap_sig_172) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_181)
    begin
        if (ap_sig_181) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_198)
    begin
        if (ap_sig_198) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_212)
    begin
        if (ap_sig_212) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_226)
    begin
        if (ap_sig_226) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_235)
    begin
        if (ap_sig_235) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_252)
    begin
        if (ap_sig_252) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_840)
    begin
        if (ap_sig_840) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_63)
    begin
        if (ap_sig_63) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_266)
    begin
        if (ap_sig_266) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_542)
    begin
        if (ap_sig_542) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_277)
    begin
        if (ap_sig_277) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st23_fsm_22_assign_proc : process(ap_sig_658)
    begin
        if (ap_sig_658) then 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st24_fsm_23_assign_proc : process(ap_sig_669)
    begin
        if (ap_sig_669) then 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st25_fsm_24_assign_proc : process(ap_sig_723)
    begin
        if (ap_sig_723) then 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st26_fsm_25_assign_proc : process(ap_sig_785)
    begin
        if (ap_sig_785) then 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st27_fsm_26_assign_proc : process(ap_sig_567)
    begin
        if (ap_sig_567) then 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st28_fsm_27_assign_proc : process(ap_sig_582)
    begin
        if (ap_sig_582) then 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st29_fsm_28_assign_proc : process(ap_sig_731)
    begin
        if (ap_sig_731) then 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_833)
    begin
        if (ap_sig_833) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st30_fsm_29_assign_proc : process(ap_sig_792)
    begin
        if (ap_sig_792) then 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st31_fsm_30_assign_proc : process(ap_sig_626)
    begin
        if (ap_sig_626) then 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st32_fsm_31_assign_proc : process(ap_sig_641)
    begin
        if (ap_sig_641) then 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st33_fsm_32_assign_proc : process(ap_sig_739)
    begin
        if (ap_sig_739) then 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st33_fsm_32 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st34_fsm_33_assign_proc : process(ap_sig_800)
    begin
        if (ap_sig_800) then 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st34_fsm_33 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st35_fsm_34_assign_proc : process(ap_sig_633)
    begin
        if (ap_sig_633) then 
            ap_sig_cseq_ST_st35_fsm_34 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st35_fsm_34 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st36_fsm_35_assign_proc : process(ap_sig_648)
    begin
        if (ap_sig_648) then 
            ap_sig_cseq_ST_st36_fsm_35 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st36_fsm_35 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st37_fsm_36_assign_proc : process(ap_sig_747)
    begin
        if (ap_sig_747) then 
            ap_sig_cseq_ST_st37_fsm_36 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st37_fsm_36 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st38_fsm_37_assign_proc : process(ap_sig_556)
    begin
        if (ap_sig_556) then 
            ap_sig_cseq_ST_st38_fsm_37 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st38_fsm_37 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st39_fsm_38_assign_proc : process(ap_sig_777)
    begin
        if (ap_sig_777) then 
            ap_sig_cseq_ST_st39_fsm_38 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st39_fsm_38 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_710)
    begin
        if (ap_sig_710) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st40_fsm_39_assign_proc : process(ap_sig_606)
    begin
        if (ap_sig_606) then 
            ap_sig_cseq_ST_st40_fsm_39 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st40_fsm_39 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st41_fsm_40_assign_proc : process(ap_sig_613)
    begin
        if (ap_sig_613) then 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st41_fsm_40 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st42_fsm_41_assign_proc : process(ap_sig_574)
    begin
        if (ap_sig_574) then 
            ap_sig_cseq_ST_st42_fsm_41 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st42_fsm_41 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st43_fsm_42_assign_proc : process(ap_sig_589)
    begin
        if (ap_sig_589) then 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st43_fsm_42 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st44_fsm_43_assign_proc : process(ap_sig_755)
    begin
        if (ap_sig_755) then 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st44_fsm_43 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st45_fsm_44_assign_proc : process(ap_sig_807)
    begin
        if (ap_sig_807) then 
            ap_sig_cseq_ST_st45_fsm_44 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st45_fsm_44 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st46_fsm_45_assign_proc : process(ap_sig_770)
    begin
        if (ap_sig_770) then 
            ap_sig_cseq_ST_st46_fsm_45 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st46_fsm_45 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_763)
    begin
        if (ap_sig_763) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_678)
    begin
        if (ap_sig_678) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_685)
    begin
        if (ap_sig_685) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_133)
    begin
        if (ap_sig_133) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_693)
    begin
        if (ap_sig_693) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    bMSB_4_fu_611_p2 <= std_logic_vector(unsigned(bMSB_1_reg_280) + unsigned(ap_const_lv32_1));
    bMSB_5_fu_631_p2 <= std_logic_vector(unsigned(bMSB_2_reg_291) + unsigned(ap_const_lv32_8));

    b_address0_assign_proc : process(ap_sig_cseq_ST_st15_fsm_14, grp_bigint_math_bigint_copy_fu_379_from_address0, ap_sig_cseq_ST_st4_fsm_3, tmp_64_fu_549_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            b_address0 <= tmp_64_fu_549_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            b_address0 <= grp_bigint_math_bigint_copy_fu_379_from_address0;
        else 
            b_address0 <= "XXXXXXXX";
        end if; 
    end process;


    b_ce0_assign_proc : process(ap_sig_cseq_ST_st15_fsm_14, grp_bigint_math_bigint_copy_fu_379_from_ce0, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            b_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            b_ce0 <= grp_bigint_math_bigint_copy_fu_379_from_ce0;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bitPlace_address0_assign_proc : process(grp_bigint_math_bigint_leftshift_fu_350_out_r_address0, grp_bigint_math_bigint_rightshift_fu_358_a_address0, grp_bigint_math_bigint_add_fu_364_b_address0, grp_bigint_math_bigint_copy_fu_379_to_r_address0, grp_bigint_math_bigint_zero_fu_405_in_r_address0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st34_fsm_33, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            bitPlace_address0 <= grp_bigint_math_bigint_zero_fu_405_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            bitPlace_address0 <= grp_bigint_math_bigint_copy_fu_379_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            bitPlace_address0 <= grp_bigint_math_bigint_add_fu_364_b_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            bitPlace_address0 <= grp_bigint_math_bigint_rightshift_fu_358_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            bitPlace_address0 <= grp_bigint_math_bigint_leftshift_fu_350_out_r_address0;
        else 
            bitPlace_address0 <= "XXXXXXXX";
        end if; 
    end process;


    bitPlace_ce0_assign_proc : process(grp_bigint_math_bigint_leftshift_fu_350_out_r_ce0, grp_bigint_math_bigint_rightshift_fu_358_a_ce0, grp_bigint_math_bigint_add_fu_364_b_ce0, grp_bigint_math_bigint_copy_fu_379_to_r_ce0, grp_bigint_math_bigint_zero_fu_405_in_r_ce0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st34_fsm_33, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            bitPlace_ce0 <= grp_bigint_math_bigint_zero_fu_405_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            bitPlace_ce0 <= grp_bigint_math_bigint_copy_fu_379_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            bitPlace_ce0 <= grp_bigint_math_bigint_add_fu_364_b_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            bitPlace_ce0 <= grp_bigint_math_bigint_rightshift_fu_358_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            bitPlace_ce0 <= grp_bigint_math_bigint_leftshift_fu_350_out_r_ce0;
        else 
            bitPlace_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bitPlace_d0_assign_proc : process(grp_bigint_math_bigint_leftshift_fu_350_out_r_d0, grp_bigint_math_bigint_copy_fu_379_to_r_d0, grp_bigint_math_bigint_zero_fu_405_in_r_d0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st34_fsm_33, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            bitPlace_d0 <= grp_bigint_math_bigint_zero_fu_405_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            bitPlace_d0 <= grp_bigint_math_bigint_copy_fu_379_to_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            bitPlace_d0 <= grp_bigint_math_bigint_leftshift_fu_350_out_r_d0;
        else 
            bitPlace_d0 <= "XXXXXXXX";
        end if; 
    end process;


    bitPlace_we0_assign_proc : process(grp_bigint_math_bigint_leftshift_fu_350_out_r_we0, grp_bigint_math_bigint_copy_fu_379_to_r_we0, grp_bigint_math_bigint_zero_fu_405_in_r_we0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st34_fsm_33, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            bitPlace_we0 <= grp_bigint_math_bigint_zero_fu_405_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33)) then 
            bitPlace_we0 <= grp_bigint_math_bigint_copy_fu_379_to_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            bitPlace_we0 <= grp_bigint_math_bigint_leftshift_fu_350_out_r_we0;
        else 
            bitPlace_we0 <= ap_const_logic_0;
        end if; 
    end process;


    d_address0_assign_proc : process(grp_bigint_math_bigint_sub_fu_326_b_address0, grp_bigint_math_bigint_leftshift_fu_343_out_r_address0, grp_bigint_math_bigint_rightshift_fu_358_a_address0, grp_bigint_math_bigint_compare_fu_371_b_address0, grp_bigint_math_bigint_copy_fu_379_to_r_address0, grp_bigint_math_bigint_zero_fu_398_in_r_address0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st38_fsm_37, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            d_address0 <= grp_bigint_math_bigint_zero_fu_398_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            d_address0 <= grp_bigint_math_bigint_copy_fu_379_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            d_address0 <= grp_bigint_math_bigint_compare_fu_371_b_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            d_address0 <= grp_bigint_math_bigint_rightshift_fu_358_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            d_address0 <= grp_bigint_math_bigint_leftshift_fu_343_out_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            d_address0 <= grp_bigint_math_bigint_sub_fu_326_b_address0;
        else 
            d_address0 <= "XXXXXXXX";
        end if; 
    end process;


    d_ce0_assign_proc : process(grp_bigint_math_bigint_sub_fu_326_b_ce0, grp_bigint_math_bigint_leftshift_fu_343_out_r_ce0, grp_bigint_math_bigint_rightshift_fu_358_a_ce0, grp_bigint_math_bigint_compare_fu_371_b_ce0, grp_bigint_math_bigint_copy_fu_379_to_r_ce0, grp_bigint_math_bigint_zero_fu_398_in_r_ce0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st38_fsm_37, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            d_ce0 <= grp_bigint_math_bigint_zero_fu_398_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            d_ce0 <= grp_bigint_math_bigint_copy_fu_379_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            d_ce0 <= grp_bigint_math_bigint_compare_fu_371_b_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            d_ce0 <= grp_bigint_math_bigint_rightshift_fu_358_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            d_ce0 <= grp_bigint_math_bigint_leftshift_fu_343_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            d_ce0 <= grp_bigint_math_bigint_sub_fu_326_b_ce0;
        else 
            d_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    d_d0_assign_proc : process(grp_bigint_math_bigint_leftshift_fu_343_out_r_d0, grp_bigint_math_bigint_copy_fu_379_to_r_d0, grp_bigint_math_bigint_zero_fu_398_in_r_d0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st38_fsm_37, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            d_d0 <= grp_bigint_math_bigint_zero_fu_398_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            d_d0 <= grp_bigint_math_bigint_copy_fu_379_to_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            d_d0 <= grp_bigint_math_bigint_leftshift_fu_343_out_r_d0;
        else 
            d_d0 <= "XXXXXXXX";
        end if; 
    end process;


    d_we0_assign_proc : process(grp_bigint_math_bigint_leftshift_fu_343_out_r_we0, grp_bigint_math_bigint_copy_fu_379_to_r_we0, grp_bigint_math_bigint_zero_fu_398_in_r_we0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st38_fsm_37, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            d_we0 <= grp_bigint_math_bigint_zero_fu_398_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37)) then 
            d_we0 <= grp_bigint_math_bigint_copy_fu_379_to_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            d_we0 <= grp_bigint_math_bigint_leftshift_fu_343_out_r_we0;
        else 
            d_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_bigint_math_bigint_add_fu_364_ap_start <= ap_reg_grp_bigint_math_bigint_add_fu_364_ap_start;

    grp_bigint_math_bigint_compare_fu_371_a_q0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st10_fsm_9, tempA_q0, tempB_q0, ap_sig_cseq_ST_st23_fsm_22)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then 
            grp_bigint_math_bigint_compare_fu_371_a_q0 <= tempA_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7))) then 
            grp_bigint_math_bigint_compare_fu_371_a_q0 <= tempB_q0;
        else 
            grp_bigint_math_bigint_compare_fu_371_a_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_compare_fu_371_ap_start <= ap_reg_grp_bigint_math_bigint_compare_fu_371_ap_start;

    grp_bigint_math_bigint_compare_fu_371_b_q0_assign_proc : process(zero_q0, one_q0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st10_fsm_9, tempB_q0, d_q0, ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            grp_bigint_math_bigint_compare_fu_371_b_q0 <= d_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_bigint_math_bigint_compare_fu_371_b_q0 <= tempB_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_bigint_math_bigint_compare_fu_371_b_q0 <= one_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_bigint_math_bigint_compare_fu_371_b_q0 <= zero_q0;
        else 
            grp_bigint_math_bigint_compare_fu_371_b_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_copy_fu_379_ap_start <= ap_reg_grp_bigint_math_bigint_copy_fu_379_ap_start;

    grp_bigint_math_bigint_copy_fu_379_from_q0_assign_proc : process(a_q0, b_q0, ap_sig_cseq_ST_st6_fsm_5, tempA_q0, temp_q0, quot_q0, ap_sig_cseq_ST_st38_fsm_37, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st34_fsm_33, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33))) then 
            grp_bigint_math_bigint_copy_fu_379_from_q0 <= temp_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38)) then 
            grp_bigint_math_bigint_copy_fu_379_from_q0 <= quot_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44))) then 
            grp_bigint_math_bigint_copy_fu_379_from_q0 <= tempA_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_bigint_math_bigint_copy_fu_379_from_q0 <= a_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            grp_bigint_math_bigint_copy_fu_379_from_q0 <= b_q0;
        else 
            grp_bigint_math_bigint_copy_fu_379_from_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_copy_fu_388_ap_start <= ap_reg_grp_bigint_math_bigint_copy_fu_388_ap_start;
    grp_bigint_math_bigint_leftshift_fu_343_ap_start <= ap_reg_grp_bigint_math_bigint_leftshift_fu_343_ap_start;
    grp_bigint_math_bigint_leftshift_fu_350_ap_start <= ap_reg_grp_bigint_math_bigint_leftshift_fu_350_ap_start;
    grp_bigint_math_bigint_mul_fu_335_ap_start <= ap_reg_grp_bigint_math_bigint_mul_fu_335_ap_start;

    grp_bigint_math_bigint_rightshift_fu_358_a_q0_assign_proc : process(d_q0, bitPlace_q0, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st36_fsm_35)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35)) then 
            grp_bigint_math_bigint_rightshift_fu_358_a_q0 <= d_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31)) then 
            grp_bigint_math_bigint_rightshift_fu_358_a_q0 <= bitPlace_q0;
        else 
            grp_bigint_math_bigint_rightshift_fu_358_a_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_rightshift_fu_358_ap_start <= ap_reg_grp_bigint_math_bigint_rightshift_fu_358_ap_start;

    grp_bigint_math_bigint_sub_fu_326_a_q0_assign_proc : process(a_q0, tmp_s_reg_680, tmp_53_reg_684, tmp_54_reg_688, tmp_55_reg_692, tempA_q0, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st43_fsm_42)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            grp_bigint_math_bigint_sub_fu_326_a_q0 <= a_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            grp_bigint_math_bigint_sub_fu_326_a_q0 <= tempA_q0;
        else 
            grp_bigint_math_bigint_sub_fu_326_a_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_sub_fu_326_ap_start <= ap_reg_grp_bigint_math_bigint_sub_fu_326_ap_start;

    grp_bigint_math_bigint_sub_fu_326_b_q0_assign_proc : process(tmp_s_reg_680, tmp_53_reg_684, tmp_54_reg_688, tmp_55_reg_692, temp_q0, d_q0, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st43_fsm_42)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            grp_bigint_math_bigint_sub_fu_326_b_q0 <= temp_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            grp_bigint_math_bigint_sub_fu_326_b_q0 <= d_q0;
        else 
            grp_bigint_math_bigint_sub_fu_326_b_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_zero_fu_398_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_398_ap_start;
    grp_bigint_math_bigint_zero_fu_405_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_405_ap_start;
    grp_fu_411_p2 <= "1" when (grp_bigint_math_bigint_compare_fu_371_ap_return = ap_const_lv2_0) else "0";
    i_5_fu_436_p2 <= std_logic_vector(unsigned(i5_reg_178) + unsigned(ap_const_lv9_1));
    i_6_fu_543_p2 <= std_logic_vector(unsigned(i_1_reg_246) + unsigned(ap_const_lv9_1));
    j_1_cast1_fu_560_p1 <= std_logic_vector(resize(unsigned(j_1_reg_269),8));
    j_2_cast_fu_657_p1 <= std_logic_vector(resize(unsigned(j_2_reg_315),32));
    j_6_fu_465_p2 <= std_logic_vector(unsigned(j_reg_201) + unsigned(ap_const_lv4_1));
    j_7_fu_572_p2 <= std_logic_vector(unsigned(j_1_reg_269) + unsigned(ap_const_lv4_1));
    j_8_fu_666_p2 <= std_logic_vector(unsigned(j_2_reg_315) + unsigned(ap_const_lv31_1));
    j_cast3_fu_453_p1 <= std_logic_vector(resize(unsigned(j_reg_201),8));

    one_address0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, grp_bigint_math_bigint_leftshift_fu_350_a_address0, grp_bigint_math_bigint_compare_fu_371_b_address0, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            one_address0 <= grp_bigint_math_bigint_compare_fu_371_b_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            one_address0 <= grp_bigint_math_bigint_leftshift_fu_350_a_address0;
        else 
            one_address0 <= "XXXXXXXX";
        end if; 
    end process;


    one_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, grp_bigint_math_bigint_leftshift_fu_350_a_ce0, grp_bigint_math_bigint_compare_fu_371_b_ce0, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            one_ce0 <= grp_bigint_math_bigint_compare_fu_371_b_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            one_ce0 <= grp_bigint_math_bigint_leftshift_fu_350_a_ce0;
        else 
            one_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out1_address0_assign_proc : process(tmp_s_reg_680, ap_sig_cseq_ST_st6_fsm_5, tmp_53_reg_684, tmp_54_reg_688, ap_sig_cseq_ST_st10_fsm_9, tmp_55_reg_692, grp_bigint_math_bigint_sub_fu_326_out_r_address0, grp_bigint_math_bigint_copy_fu_379_to_r_address0, grp_bigint_math_bigint_copy_fu_388_to_r_address0, grp_bigint_math_bigint_zero_fu_405_in_r_address0, ap_sig_cseq_ST_st43_fsm_42, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out1_address0 <= ap_const_lv64_FF(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out1_address0 <= grp_bigint_math_bigint_zero_fu_405_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45)) then 
            out1_address0 <= grp_bigint_math_bigint_copy_fu_388_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            out1_address0 <= grp_bigint_math_bigint_copy_fu_379_to_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            out1_address0 <= grp_bigint_math_bigint_sub_fu_326_out_r_address0;
        else 
            out1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    out1_ce0_assign_proc : process(tmp_s_reg_680, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_compare_fu_371_ap_done, tmp_53_reg_684, tmp_54_reg_688, ap_sig_cseq_ST_st10_fsm_9, tmp_55_reg_692, grp_bigint_math_bigint_sub_fu_326_out_r_ce0, grp_bigint_math_bigint_copy_fu_379_to_r_ce0, grp_bigint_math_bigint_copy_fu_388_to_r_ce0, grp_bigint_math_bigint_zero_fu_405_in_r_ce0, ap_sig_cseq_ST_st43_fsm_42, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            out1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out1_ce0 <= grp_bigint_math_bigint_zero_fu_405_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45)) then 
            out1_ce0 <= grp_bigint_math_bigint_copy_fu_388_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            out1_ce0 <= grp_bigint_math_bigint_copy_fu_379_to_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            out1_ce0 <= grp_bigint_math_bigint_sub_fu_326_out_r_ce0;
        else 
            out1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out1_d0_assign_proc : process(tmp_s_reg_680, ap_sig_cseq_ST_st6_fsm_5, tmp_53_reg_684, tmp_54_reg_688, ap_sig_cseq_ST_st10_fsm_9, tmp_55_reg_692, grp_bigint_math_bigint_sub_fu_326_out_r_d0, grp_bigint_math_bigint_copy_fu_379_to_r_d0, grp_bigint_math_bigint_copy_fu_388_to_r_d0, grp_bigint_math_bigint_zero_fu_405_in_r_d0, ap_sig_cseq_ST_st43_fsm_42, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out1_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out1_d0 <= grp_bigint_math_bigint_zero_fu_405_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45)) then 
            out1_d0 <= grp_bigint_math_bigint_copy_fu_388_to_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            out1_d0 <= grp_bigint_math_bigint_copy_fu_379_to_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            out1_d0 <= grp_bigint_math_bigint_sub_fu_326_out_r_d0;
        else 
            out1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out1_we0_assign_proc : process(grp_fu_411_p2, tmp_s_reg_680, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_compare_fu_371_ap_done, tmp_53_reg_684, tmp_54_fu_417_p2, tmp_54_reg_688, ap_sig_cseq_ST_st10_fsm_9, tmp_55_reg_692, grp_bigint_math_bigint_sub_fu_326_out_r_we0, grp_bigint_math_bigint_copy_fu_379_to_r_we0, grp_bigint_math_bigint_copy_fu_388_to_r_we0, grp_bigint_math_bigint_zero_fu_405_in_r_we0, ap_sig_cseq_ST_st43_fsm_42, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if (((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (tmp_54_fu_417_p2 = ap_const_lv1_0) and not((grp_fu_411_p2 = ap_const_lv1_0))))) then 
            out1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out1_we0 <= grp_bigint_math_bigint_zero_fu_405_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45)) then 
            out1_we0 <= grp_bigint_math_bigint_copy_fu_388_to_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            out1_we0 <= grp_bigint_math_bigint_copy_fu_379_to_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            out1_we0 <= grp_bigint_math_bigint_sub_fu_326_out_r_we0;
        else 
            out1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_address0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_mul_fu_335_a_address0, grp_bigint_math_bigint_copy_fu_379_to_r_address0, grp_bigint_math_bigint_copy_fu_388_to_r_address0, grp_bigint_math_bigint_zero_fu_398_in_r_address0, ap_sig_cseq_ST_st41_fsm_40, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out_r_address0 <= ap_const_lv64_FF(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_r_address0 <= grp_bigint_math_bigint_zero_fu_398_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            out_r_address0 <= grp_bigint_math_bigint_copy_fu_388_to_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38))) then 
            out_r_address0 <= grp_bigint_math_bigint_copy_fu_379_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            out_r_address0 <= grp_bigint_math_bigint_mul_fu_335_a_address0;
        else 
            out_r_address0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_compare_fu_371_ap_done, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_mul_fu_335_a_ce0, grp_bigint_math_bigint_copy_fu_379_to_r_ce0, grp_bigint_math_bigint_copy_fu_388_to_r_ce0, grp_bigint_math_bigint_zero_fu_398_in_r_ce0, ap_sig_cseq_ST_st41_fsm_40, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            out_r_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_r_ce0 <= grp_bigint_math_bigint_zero_fu_398_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            out_r_ce0 <= grp_bigint_math_bigint_copy_fu_388_to_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38))) then 
            out_r_ce0 <= grp_bigint_math_bigint_copy_fu_379_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            out_r_ce0 <= grp_bigint_math_bigint_mul_fu_335_a_ce0;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_copy_fu_379_to_r_d0, grp_bigint_math_bigint_copy_fu_388_to_r_d0, grp_bigint_math_bigint_zero_fu_398_in_r_d0, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out_r_d0 <= ap_const_lv8_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_r_d0 <= grp_bigint_math_bigint_zero_fu_398_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            out_r_d0 <= grp_bigint_math_bigint_copy_fu_388_to_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38))) then 
            out_r_d0 <= grp_bigint_math_bigint_copy_fu_379_to_r_d0;
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(grp_fu_411_p2, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_compare_fu_371_ap_done, tmp_54_fu_417_p2, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_copy_fu_379_to_r_we0, grp_bigint_math_bigint_copy_fu_388_to_r_we0, grp_bigint_math_bigint_zero_fu_398_in_r_we0, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if (((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_371_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (tmp_54_fu_417_p2 = ap_const_lv1_0) and not((grp_fu_411_p2 = ap_const_lv1_0))))) then 
            out_r_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_r_we0 <= grp_bigint_math_bigint_zero_fu_398_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44)) then 
            out_r_we0 <= grp_bigint_math_bigint_copy_fu_388_to_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38))) then 
            out_r_we0 <= grp_bigint_math_bigint_copy_fu_379_to_r_we0;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    quot_address0_assign_proc : process(grp_bigint_math_bigint_add_fu_364_a_address0, grp_bigint_math_bigint_copy_fu_379_to_r_address0, grp_bigint_math_bigint_copy_fu_379_from_address0, grp_bigint_math_bigint_zero_fu_405_in_r_address0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            quot_address0 <= grp_bigint_math_bigint_zero_fu_405_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38)) then 
            quot_address0 <= grp_bigint_math_bigint_copy_fu_379_from_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            quot_address0 <= grp_bigint_math_bigint_copy_fu_379_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            quot_address0 <= grp_bigint_math_bigint_add_fu_364_a_address0;
        else 
            quot_address0 <= "XXXXXXXX";
        end if; 
    end process;


    quot_ce0_assign_proc : process(grp_bigint_math_bigint_add_fu_364_a_ce0, grp_bigint_math_bigint_copy_fu_379_to_r_ce0, grp_bigint_math_bigint_copy_fu_379_from_ce0, grp_bigint_math_bigint_zero_fu_405_in_r_ce0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st39_fsm_38, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            quot_ce0 <= grp_bigint_math_bigint_zero_fu_405_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st39_fsm_38)) then 
            quot_ce0 <= grp_bigint_math_bigint_copy_fu_379_from_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            quot_ce0 <= grp_bigint_math_bigint_copy_fu_379_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            quot_ce0 <= grp_bigint_math_bigint_add_fu_364_a_ce0;
        else 
            quot_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    quot_d0_assign_proc : process(grp_bigint_math_bigint_copy_fu_379_to_r_d0, grp_bigint_math_bigint_zero_fu_405_in_r_d0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            quot_d0 <= grp_bigint_math_bigint_zero_fu_405_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            quot_d0 <= grp_bigint_math_bigint_copy_fu_379_to_r_d0;
        else 
            quot_d0 <= "XXXXXXXX";
        end if; 
    end process;


    quot_we0_assign_proc : process(grp_bigint_math_bigint_copy_fu_379_to_r_we0, grp_bigint_math_bigint_zero_fu_405_in_r_we0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st26_fsm_25)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            quot_we0 <= grp_bigint_math_bigint_zero_fu_405_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25)) then 
            quot_we0 <= grp_bigint_math_bigint_copy_fu_379_to_r_we0;
        else 
            quot_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempA_address0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_sub_fu_326_a_address0, grp_bigint_math_bigint_compare_fu_371_a_address0, grp_bigint_math_bigint_copy_fu_379_to_r_address0, grp_bigint_math_bigint_copy_fu_379_from_address0, grp_bigint_math_bigint_zero_fu_398_in_r_address0, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_address0 <= grp_bigint_math_bigint_zero_fu_398_in_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44))) then 
            tempA_address0 <= grp_bigint_math_bigint_copy_fu_379_from_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29))) then 
            tempA_address0 <= grp_bigint_math_bigint_copy_fu_379_to_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then 
            tempA_address0 <= grp_bigint_math_bigint_compare_fu_371_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            tempA_address0 <= grp_bigint_math_bigint_sub_fu_326_a_address0;
        else 
            tempA_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempA_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_sub_fu_326_a_ce0, grp_bigint_math_bigint_compare_fu_371_a_ce0, grp_bigint_math_bigint_copy_fu_379_to_r_ce0, grp_bigint_math_bigint_copy_fu_379_from_ce0, grp_bigint_math_bigint_zero_fu_398_in_r_ce0, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_ce0 <= grp_bigint_math_bigint_zero_fu_398_in_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44))) then 
            tempA_ce0 <= grp_bigint_math_bigint_copy_fu_379_from_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29))) then 
            tempA_ce0 <= grp_bigint_math_bigint_copy_fu_379_to_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then 
            tempA_ce0 <= grp_bigint_math_bigint_compare_fu_371_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            tempA_ce0 <= grp_bigint_math_bigint_sub_fu_326_a_ce0;
        else 
            tempA_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempA_d0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_copy_fu_379_to_r_d0, grp_bigint_math_bigint_zero_fu_398_in_r_d0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_d0 <= grp_bigint_math_bigint_zero_fu_398_in_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29))) then 
            tempA_d0 <= grp_bigint_math_bigint_copy_fu_379_to_r_d0;
        else 
            tempA_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempA_we0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_copy_fu_379_to_r_we0, grp_bigint_math_bigint_zero_fu_398_in_r_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st30_fsm_29)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_we0 <= grp_bigint_math_bigint_zero_fu_398_in_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29))) then 
            tempA_we0 <= grp_bigint_math_bigint_copy_fu_379_to_r_we0;
        else 
            tempA_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_address0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_mul_fu_335_b_address0, grp_bigint_math_bigint_leftshift_fu_343_a_address0, grp_bigint_math_bigint_compare_fu_371_a_address0, grp_bigint_math_bigint_compare_fu_371_b_address0, grp_bigint_math_bigint_copy_fu_379_to_r_address0, grp_bigint_math_bigint_zero_fu_398_in_r_address0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st41_fsm_40, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_address0 <= grp_bigint_math_bigint_zero_fu_398_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempB_address0 <= grp_bigint_math_bigint_copy_fu_379_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            tempB_address0 <= grp_bigint_math_bigint_compare_fu_371_b_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7))) then 
            tempB_address0 <= grp_bigint_math_bigint_compare_fu_371_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            tempB_address0 <= grp_bigint_math_bigint_leftshift_fu_343_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            tempB_address0 <= grp_bigint_math_bigint_mul_fu_335_b_address0;
        else 
            tempB_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_mul_fu_335_b_ce0, grp_bigint_math_bigint_leftshift_fu_343_a_ce0, grp_bigint_math_bigint_compare_fu_371_a_ce0, grp_bigint_math_bigint_compare_fu_371_b_ce0, grp_bigint_math_bigint_copy_fu_379_to_r_ce0, grp_bigint_math_bigint_zero_fu_398_in_r_ce0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st41_fsm_40, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_ce0 <= grp_bigint_math_bigint_zero_fu_398_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempB_ce0 <= grp_bigint_math_bigint_copy_fu_379_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            tempB_ce0 <= grp_bigint_math_bigint_compare_fu_371_b_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7))) then 
            tempB_ce0 <= grp_bigint_math_bigint_compare_fu_371_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            tempB_ce0 <= grp_bigint_math_bigint_leftshift_fu_343_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            tempB_ce0 <= grp_bigint_math_bigint_mul_fu_335_b_ce0;
        else 
            tempB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_d0_assign_proc : process(grp_bigint_math_bigint_copy_fu_379_to_r_d0, grp_bigint_math_bigint_zero_fu_398_in_r_d0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_d0 <= grp_bigint_math_bigint_zero_fu_398_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempB_d0 <= grp_bigint_math_bigint_copy_fu_379_to_r_d0;
        else 
            tempB_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_we0_assign_proc : process(grp_bigint_math_bigint_copy_fu_379_to_r_we0, grp_bigint_math_bigint_zero_fu_398_in_r_we0, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_we0 <= grp_bigint_math_bigint_zero_fu_398_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempB_we0 <= grp_bigint_math_bigint_copy_fu_379_to_r_we0;
        else 
            tempB_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_address0_assign_proc : process(tmp_s_reg_680, tmp_53_reg_684, tmp_54_reg_688, tmp_55_reg_692, grp_bigint_math_bigint_sub_fu_326_out_r_address0, grp_bigint_math_bigint_sub_fu_326_b_address0, grp_bigint_math_bigint_mul_fu_335_out_r_address0, grp_bigint_math_bigint_rightshift_fu_358_out_r_address0, grp_bigint_math_bigint_add_fu_364_out_r_address0, grp_bigint_math_bigint_copy_fu_379_from_address0, grp_bigint_math_bigint_zero_fu_398_in_r_address0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st38_fsm_37, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st43_fsm_42, ap_sig_cseq_ST_st41_fsm_40, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            temp_address0 <= grp_bigint_math_bigint_zero_fu_398_in_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33))) then 
            temp_address0 <= grp_bigint_math_bigint_copy_fu_379_from_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            temp_address0 <= grp_bigint_math_bigint_add_fu_364_out_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35))) then 
            temp_address0 <= grp_bigint_math_bigint_rightshift_fu_358_out_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            temp_address0 <= grp_bigint_math_bigint_mul_fu_335_out_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            temp_address0 <= grp_bigint_math_bigint_sub_fu_326_b_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            temp_address0 <= grp_bigint_math_bigint_sub_fu_326_out_r_address0;
        else 
            temp_address0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(tmp_s_reg_680, tmp_53_reg_684, tmp_54_reg_688, tmp_55_reg_692, grp_bigint_math_bigint_sub_fu_326_out_r_ce0, grp_bigint_math_bigint_sub_fu_326_b_ce0, grp_bigint_math_bigint_mul_fu_335_out_r_ce0, grp_bigint_math_bigint_rightshift_fu_358_out_r_ce0, grp_bigint_math_bigint_add_fu_364_out_r_ce0, grp_bigint_math_bigint_copy_fu_379_from_ce0, grp_bigint_math_bigint_zero_fu_398_in_r_ce0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st38_fsm_37, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st43_fsm_42, ap_sig_cseq_ST_st41_fsm_40, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st24_fsm_23, ap_sig_cseq_ST_st26_fsm_25, ap_sig_cseq_ST_st30_fsm_29, ap_sig_cseq_ST_st34_fsm_33)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            temp_ce0 <= grp_bigint_math_bigint_zero_fu_398_in_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st38_fsm_37) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29) or (ap_const_logic_1 = ap_sig_cseq_ST_st34_fsm_33))) then 
            temp_ce0 <= grp_bigint_math_bigint_copy_fu_379_from_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            temp_ce0 <= grp_bigint_math_bigint_add_fu_364_out_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35))) then 
            temp_ce0 <= grp_bigint_math_bigint_rightshift_fu_358_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            temp_ce0 <= grp_bigint_math_bigint_mul_fu_335_out_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st43_fsm_42) and (tmp_s_reg_680 = ap_const_lv1_0) and (tmp_53_reg_684 = ap_const_lv1_0) and (tmp_54_reg_688 = ap_const_lv1_0) and (tmp_55_reg_692 = ap_const_lv1_0))) then 
            temp_ce0 <= grp_bigint_math_bigint_sub_fu_326_b_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            temp_ce0 <= grp_bigint_math_bigint_sub_fu_326_out_r_ce0;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_d0_assign_proc : process(grp_bigint_math_bigint_sub_fu_326_out_r_d0, grp_bigint_math_bigint_mul_fu_335_out_r_d0, grp_bigint_math_bigint_rightshift_fu_358_out_r_d0, grp_bigint_math_bigint_add_fu_364_out_r_d0, grp_bigint_math_bigint_zero_fu_398_in_r_d0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st41_fsm_40, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st24_fsm_23)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            temp_d0 <= grp_bigint_math_bigint_zero_fu_398_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            temp_d0 <= grp_bigint_math_bigint_add_fu_364_out_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35))) then 
            temp_d0 <= grp_bigint_math_bigint_rightshift_fu_358_out_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            temp_d0 <= grp_bigint_math_bigint_mul_fu_335_out_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            temp_d0 <= grp_bigint_math_bigint_sub_fu_326_out_r_d0;
        else 
            temp_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_we0_assign_proc : process(grp_bigint_math_bigint_sub_fu_326_out_r_we0, grp_bigint_math_bigint_mul_fu_335_out_r_we0, grp_bigint_math_bigint_rightshift_fu_358_out_r_we0, grp_bigint_math_bigint_add_fu_364_out_r_we0, grp_bigint_math_bigint_zero_fu_398_in_r_we0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st28_fsm_27, ap_sig_cseq_ST_st41_fsm_40, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st36_fsm_35, ap_sig_cseq_ST_st24_fsm_23)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            temp_we0 <= grp_bigint_math_bigint_zero_fu_398_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23)) then 
            temp_we0 <= grp_bigint_math_bigint_add_fu_364_out_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) or (ap_const_logic_1 = ap_sig_cseq_ST_st36_fsm_35))) then 
            temp_we0 <= grp_bigint_math_bigint_rightshift_fu_358_out_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st41_fsm_40)) then 
            temp_we0 <= grp_bigint_math_bigint_mul_fu_335_out_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
            temp_we0 <= grp_bigint_math_bigint_sub_fu_326_out_r_we0;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_fu_428_p3 <= i5_reg_178(8 downto 8);
    tmp_12_fu_457_p3 <= j_reg_201(3 downto 3);
    tmp_13_fu_535_p3 <= i_1_reg_246(8 downto 8);
    tmp_14_fu_564_p3 <= j_1_reg_269(3 downto 3);
    tmp_15_fu_672_p3 <= grp_bigint_math_bigint_compare_fu_371_ap_return(1 downto 1);
    tmp_54_fu_417_p2 <= "1" when (grp_bigint_math_bigint_compare_fu_371_ap_return = ap_const_lv2_3) else "0";
    tmp_56_fu_442_p1 <= std_logic_vector(resize(unsigned(i5_reg_178),64));
    tmp_57_fu_447_p2 <= "1" when (a_q0 = ap_const_lv8_0) else "0";
    tmp_58_fu_471_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv8_80),to_integer(unsigned('0' & j_cast3_fu_453_p1(8-1 downto 0)))));
    tmp_59_fu_477_p2 <= (tmp_58_fu_471_p2 and a_load_reg_717);
    tmp_60_fu_482_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) - unsigned(j_reg_201));
    tmp_61_fu_492_p2 <= std_logic_vector(shift_right(unsigned(tmp_59_fu_477_p2),to_integer(unsigned('0' & tmp_73_cast_fu_488_p1(8-1 downto 0)))));
    tmp_62_fu_498_p2 <= "1" when (tmp_61_fu_492_p2 = ap_const_lv8_1) else "0";
    tmp_63_fu_518_p2 <= "1" when (flag_fu_118 = ap_const_lv2_1) else "0";
    tmp_64_fu_549_p1 <= std_logic_vector(resize(unsigned(i_1_reg_246),64));
    tmp_65_fu_554_p2 <= "1" when (b_q0 = ap_const_lv8_0) else "0";
    tmp_66_fu_578_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv8_80),to_integer(unsigned('0' & j_1_cast1_fu_560_p1(8-1 downto 0)))));
    tmp_67_fu_584_p2 <= (tmp_66_fu_578_p2 and b_load_reg_770);
    tmp_68_fu_589_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) - unsigned(j_1_reg_269));
    tmp_69_fu_599_p2 <= std_logic_vector(shift_right(unsigned(tmp_67_fu_584_p2),to_integer(unsigned('0' & tmp_84_cast_fu_595_p1(8-1 downto 0)))));
    tmp_70_fu_605_p2 <= "1" when (tmp_69_fu_599_p2 = ap_const_lv8_1) else "0";
    tmp_71_fu_625_p2 <= "1" when (flag_3_fu_122 = ap_const_lv2_1) else "0";
    tmp_72_fu_637_p2 <= std_logic_vector(unsigned(bMSB_3_reg_303) - unsigned(aMSB_3_reg_234));
    tmp_73_cast_fu_488_p1 <= std_logic_vector(resize(unsigned(tmp_60_fu_482_p2),8));
    tmp_73_fu_645_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) - unsigned(aMSB_3_reg_234));
    tmp_74_fu_651_p2 <= std_logic_vector(unsigned(tmp_73_fu_645_p2) + unsigned(bMSB_3_reg_303));
    tmp_75_fu_661_p2 <= "1" when (signed(j_2_cast_fu_657_p1) < signed(tmp_74_reg_808)) else "0";
    tmp_84_cast_fu_595_p1 <= std_logic_vector(resize(unsigned(tmp_68_fu_589_p2),8));

    zero_address0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_compare_fu_371_b_address0, grp_bigint_math_bigint_copy_fu_388_from_address0, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44))) then 
            zero_address0 <= grp_bigint_math_bigint_copy_fu_388_from_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            zero_address0 <= grp_bigint_math_bigint_compare_fu_371_b_address0;
        else 
            zero_address0 <= "XXXXXXXX";
        end if; 
    end process;


    zero_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_compare_fu_371_b_ce0, grp_bigint_math_bigint_copy_fu_388_from_ce0, ap_sig_cseq_ST_st46_fsm_45, ap_sig_cseq_ST_st45_fsm_44)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st46_fsm_45) or (ap_const_logic_1 = ap_sig_cseq_ST_st45_fsm_44))) then 
            zero_ce0 <= grp_bigint_math_bigint_copy_fu_388_from_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            zero_ce0 <= grp_bigint_math_bigint_compare_fu_371_b_ce0;
        else 
            zero_ce0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
