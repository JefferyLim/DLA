

================================================================
== Vivado HLS Report for 'bigint_math_bigint_rightshift'
================================================================
* Date:           Sun Mar 19 09:53:13 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        BigInt
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  50.00|      6.79|        6.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  6914|  6914|  6914|  6914|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+------+------+----------+-----------+-----------+------+----------+
        |             |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1     |   256|   256|         1|          -|          -|   256|    no    |
        |- Loop 2     |  6656|  6656|        26|          -|          -|   256|    no    |
        | + Loop 2.1  |    24|    24|         3|          -|          -|     8|    no    |
        +-------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 6
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond_i)
	2  / (!exitcond_i)
3 --> 
	4  / (!exitcond)
4 --> 
	5  / (!tmp_4)
	3  / (tmp_4)
5 --> 
	6  / true
6 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([256 x i8]* %a, [1 x i8]* @p_str10, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str10, i32 -1, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10)

ST_1: empty_16 [1/1] 0.00ns
:1  %empty_16 = call i32 (...)* @_ssdm_op_SpecMemCore([256 x i8]* %out_r, [1 x i8]* @p_str10, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str10, i32 -1, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10)

ST_1: stg_9 [1/1] 1.57ns
:2  br label %1


 <State 2>: 3.60ns
ST_2: i_i [1/1] 0.00ns
:0  %i_i = phi i9 [ 0, %0 ], [ %i_5, %2 ]

ST_2: exitcond_i [1/1] 2.03ns
:1  %exitcond_i = icmp eq i9 %i_i, -256

ST_2: empty_17 [1/1] 0.00ns
:2  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_2: i_5 [1/1] 1.84ns
:3  %i_5 = add i9 %i_i, 1

ST_2: stg_14 [1/1] 1.57ns
:4  br i1 %exitcond_i, label %bigint_zero.exit, label %2

ST_2: tmp_i [1/1] 0.00ns
:0  %tmp_i = zext i9 %i_i to i64

ST_2: out_addr_2 [1/1] 0.00ns
:1  %out_addr_2 = getelementptr [256 x i8]* %out_r, i64 0, i64 %tmp_i

ST_2: stg_17 [1/1] 2.39ns
:2  store i8 0, i8* %out_addr_2, align 1

ST_2: stg_18 [1/1] 0.00ns
:3  br label %1


 <State 3>: 2.03ns
ST_3: i [1/1] 0.00ns
bigint_zero.exit:0  %i = phi i9 [ %i_3, %9 ], [ 0, %1 ]

ST_3: k [1/1] 0.00ns
bigint_zero.exit:1  %k = phi i32 [ %p_k_1, %9 ], [ 0, %1 ]

ST_3: exitcond [1/1] 2.03ns
bigint_zero.exit:2  %exitcond = icmp eq i9 %i, -256

ST_3: empty_18 [1/1] 0.00ns
bigint_zero.exit:3  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_3: i_3 [1/1] 1.84ns
bigint_zero.exit:4  %i_3 = add i9 %i, 1

ST_3: stg_24 [1/1] 0.00ns
bigint_zero.exit:5  br i1 %exitcond, label %.loopexit, label %3

ST_3: tmp [1/1] 0.00ns
:0  %tmp = zext i9 %i to i64

ST_3: a_addr [1/1] 0.00ns
:1  %a_addr = getelementptr [256 x i8]* %a, i64 0, i64 %tmp

ST_3: stg_27 [1/1] 1.57ns
:2  br label %4

ST_3: stg_28 [1/1] 0.00ns
.loopexit:0  ret void


 <State 4>: 3.89ns
ST_4: j [1/1] 0.00ns
:0  %j = phi i4 [ 7, %3 ], [ %j_4, %8 ]

ST_4: k_1 [1/1] 0.00ns
:1  %k_1 = phi i32 [ %k, %3 ], [ %k_2, %8 ]

ST_4: outputBit [1/1] 0.00ns
:2  %outputBit = phi i32 [ 6, %3 ], [ %outputBit_2, %8 ]

ST_4: j_cast [1/1] 0.00ns
:3  %j_cast = sext i4 %j to i8

ST_4: tmp_4 [1/1] 0.00ns
:4  %tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %j, i32 3)

ST_4: empty_19 [1/1] 0.00ns
:5  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)

ST_4: stg_35 [1/1] 0.00ns
:6  br i1 %tmp_4, label %9, label %5

ST_4: a_load [2/2] 2.39ns
:0  %a_load = load i8* %a_addr, align 1

ST_4: tmp_s [1/1] 2.52ns
:0  %tmp_s = icmp eq i32 %outputBit, 0

ST_4: k_3 [1/1] 2.44ns
:1  %k_3 = add nsw i32 %k_1, 1

ST_4: p_k_1 [1/1] 1.37ns
:2  %p_k_1 = select i1 %tmp_s, i32 %k_3, i32 %k_1

ST_4: stg_40 [1/1] 0.00ns
:3  br label %bigint_zero.exit


 <State 5>: 4.83ns
ST_5: a_load [1/2] 2.39ns
:0  %a_load = load i8* %a_addr, align 1

ST_5: tmp_15 [1/1] 0.00ns (grouped into LUT with out node b)
:1  %tmp_15 = shl i8 1, %j_cast

ST_5: tmp_16 [1/1] 0.00ns (grouped into LUT with out node b)
:2  %tmp_16 = and i8 %tmp_15, %a_load

ST_5: b [1/1] 2.01ns (out node of the LUT)
:3  %b = lshr i8 %tmp_16, %j_cast

ST_5: tmp_17 [1/1] 2.52ns
:4  %tmp_17 = icmp eq i32 %outputBit, -1

ST_5: stg_46 [1/1] 0.00ns
:5  br i1 %tmp_17, label %6, label %7

ST_5: tmp_21 [1/1] 0.00ns
:2  %tmp_21 = sext i32 %k_1 to i64

ST_5: out_addr_1 [1/1] 0.00ns
:3  %out_addr_1 = getelementptr [256 x i8]* %out_r, i64 0, i64 %tmp_21

ST_5: out_load_1 [2/2] 2.39ns
:4  %out_load_1 = load i8* %out_addr_1, align 1

ST_5: k_4 [1/1] 2.44ns
:0  %k_4 = add nsw i32 1, %k_1

ST_5: tmp_18 [1/1] 0.00ns
:2  %tmp_18 = sext i32 %k_4 to i64

ST_5: out_addr [1/1] 0.00ns
:3  %out_addr = getelementptr [256 x i8]* %out_r, i64 0, i64 %tmp_18

ST_5: out_load [2/2] 2.39ns
:4  %out_load = load i8* %out_addr, align 1


 <State 6>: 6.79ns
ST_6: tmp_6 [1/1] 0.00ns (grouped into LUT with out node tmp_22)
:0  %tmp_6 = trunc i32 %outputBit to i8

ST_6: tmp_20 [1/1] 0.00ns (grouped into LUT with out node tmp_22)
:1  %tmp_20 = shl i8 %b, %tmp_6

ST_6: out_load_1 [1/2] 2.39ns
:4  %out_load_1 = load i8* %out_addr_1, align 1

ST_6: tmp_22 [1/1] 2.01ns (out node of the LUT)
:5  %tmp_22 = add i8 %tmp_20, %out_load_1

ST_6: stg_58 [1/1] 2.39ns
:6  store i8 %tmp_22, i8* %out_addr_1, align 1

ST_6: stg_59 [1/1] 1.57ns
:7  br label %8

ST_6: tmp_5 [1/1] 0.00ns (grouped into LUT with out node tmp_19)
:1  %tmp_5 = shl i8 %b, 7

ST_6: out_load [1/2] 2.39ns
:4  %out_load = load i8* %out_addr, align 1

ST_6: tmp_19 [1/1] 1.72ns (out node of the LUT)
:5  %tmp_19 = add i8 %out_load, %tmp_5

ST_6: stg_63 [1/1] 2.39ns
:6  store i8 %tmp_19, i8* %out_addr, align 1

ST_6: stg_64 [1/1] 1.57ns
:7  br label %8

ST_6: k_2 [1/1] 0.00ns
:0  %k_2 = phi i32 [ %k_4, %6 ], [ %k_1, %7 ]

ST_6: outputBit_1 [1/1] 0.00ns (grouped into LUT with out node outputBit_2)
:1  %outputBit_1 = phi i32 [ 7, %6 ], [ %outputBit, %7 ]

ST_6: outputBit_2 [1/1] 2.44ns (out node of the LUT)
:2  %outputBit_2 = add nsw i32 %outputBit_1, -1

ST_6: j_4 [1/1] 0.80ns
:3  %j_4 = add i4 %j, -1

ST_6: stg_69 [1/1] 0.00ns
:4  br label %4



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 50ns, clock uncertainty: 6.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
