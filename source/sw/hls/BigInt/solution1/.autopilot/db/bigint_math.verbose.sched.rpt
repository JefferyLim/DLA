

================================================================
== Vivado HLS Report for 'bigint_math'
================================================================
* Date:           Wed Feb 15 21:19:56 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        BigInt
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.10|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +--------+--------+--------+--------+---------+
    |     Latency     |     Interval    | Pipeline|
    |   min  |   max  |   min  |   max  |   Type  |
    +--------+--------+--------+--------+---------+
    |  147970|  147970|  147971|  147971|   none  |
    +--------+--------+--------+--------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |             |     Latency     | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |   min  |   max  |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+--------+--------+----------+-----------+-----------+------+----------+
        |- Loop 1     |     256|     256|         1|          -|          -|   256|    no    |
        |- Loop 2     |  147712|  147712|      1154|          -|          -|   128|    no    |
        | + Loop 2.1  |    1152|    1152|         9|          -|          -|   128|    no    |
        +-------------+--------+--------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 12
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (exitcond2)
	2  / (!exitcond2)
3 --> 
	4  / (!exitcond1)
4 --> 
	3  / (exitcond)
	5  / (!exitcond)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	4  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_13 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([128 x i8]* %a) nounwind, !map !7

ST_1: stg_14 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([128 x i8]* %b) nounwind, !map !13

ST_1: stg_15 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([256 x i8]* %c) nounwind, !map !17

ST_1: stg_16 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @bigint_math_str) nounwind

ST_1: stg_17 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [11 x i8]* @p_str1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2) nounwind

ST_1: empty [1/1] 0.00ns
:5  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([128 x i8]* %a, [1 x i8]* @p_str3, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str3, i32 -1, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3, [1 x i8]* @p_str3) nounwind

ST_1: stg_19 [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecInterface([128 x i8]* %a, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [11 x i8]* @p_str1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2) nounwind

ST_1: empty_4 [1/1] 0.00ns
:7  %empty_4 = call i32 (...)* @_ssdm_op_SpecMemCore([128 x i8]* %b, [1 x i8]* @p_str4, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str4, i32 -1, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4, [1 x i8]* @p_str4) nounwind

ST_1: stg_21 [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecInterface([128 x i8]* %b, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [11 x i8]* @p_str1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2) nounwind

ST_1: empty_5 [1/1] 0.00ns
:9  %empty_5 = call i32 (...)* @_ssdm_op_SpecMemCore([256 x i8]* %c, [1 x i8]* @p_str5, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str5, i32 -1, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5, [1 x i8]* @p_str5) nounwind

ST_1: stg_23 [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecInterface([256 x i8]* %c, [10 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [11 x i8]* @p_str1, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2) nounwind

ST_1: stg_24 [1/1] 1.57ns
:11  br label %1


 <State 2>: 3.60ns
ST_2: i [1/1] 0.00ns
:0  %i = phi i9 [ 0, %0 ], [ %i_2, %2 ]

ST_2: exitcond2 [1/1] 2.03ns
:1  %exitcond2 = icmp eq i9 %i, -256

ST_2: empty_6 [1/1] 0.00ns
:2  %empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind

ST_2: i_2 [1/1] 1.84ns
:3  %i_2 = add i9 %i, 1

ST_2: stg_29 [1/1] 1.57ns
:4  br i1 %exitcond2, label %.preheader, label %2

ST_2: tmp [1/1] 0.00ns
:0  %tmp = zext i9 %i to i64

ST_2: c_addr [1/1] 0.00ns
:1  %c_addr = getelementptr [256 x i8]* %c, i64 0, i64 %tmp

ST_2: stg_32 [1/1] 2.39ns
:2  store i8 0, i8* %c_addr, align 1

ST_2: stg_33 [1/1] 0.00ns
:3  br label %1


 <State 3>: 2.94ns
ST_3: i_1 [1/1] 0.00ns
.preheader:0  %i_1 = phi i8 [ 0, %1 ], [ %i_3, %4 ]

ST_3: exitcond1 [1/1] 2.00ns
.preheader:1  %exitcond1 = icmp eq i8 %i_1, -128

ST_3: empty_7 [1/1] 0.00ns
.preheader:2  %empty_7 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) nounwind

ST_3: i_3 [1/1] 1.72ns
.preheader:3  %i_3 = add i8 %i_1, 1

ST_3: stg_38 [1/1] 0.00ns
.preheader:4  br i1 %exitcond1, label %8, label %3

ST_3: k [1/1] 1.37ns
:0  %k = xor i8 %i_1, -1

ST_3: tmp_3 [1/1] 1.72ns
:1  %tmp_3 = sub i8 127, %i_1

ST_3: tmp_4 [1/1] 0.00ns
:2  %tmp_4 = zext i8 %tmp_3 to i64

ST_3: b_addr [1/1] 0.00ns
:3  %b_addr = getelementptr [128 x i8]* %b, i64 0, i64 %tmp_4

ST_3: stg_43 [1/1] 1.57ns
:4  br label %4

ST_3: stg_44 [1/1] 0.00ns
:0  ret void


 <State 4>: 4.11ns
ST_4: j [1/1] 0.00ns
:0  %j = phi i8 [ 0, %3 ], [ %j_1, %._crit_edge3 ]

ST_4: k1 [1/1] 0.00ns
:1  %k1 = phi i8 [ %k, %3 ], [ %k_1, %._crit_edge3 ]

ST_4: exitcond [1/1] 2.00ns
:2  %exitcond = icmp eq i8 %j, -128

ST_4: empty_8 [1/1] 0.00ns
:3  %empty_8 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128) nounwind

ST_4: j_1 [1/1] 1.72ns
:4  %j_1 = add i8 %j, 1

ST_4: stg_50 [1/1] 0.00ns
:5  br i1 %exitcond, label %.preheader, label %5

ST_4: b_load [2/2] 2.39ns
:0  %b_load = load i8* %b_addr, align 1

ST_4: tmp_6 [1/1] 1.72ns
:1  %tmp_6 = sub i8 127, %j

ST_4: tmp_7 [1/1] 0.00ns
:2  %tmp_7 = zext i8 %tmp_6 to i64

ST_4: a_addr [1/1] 0.00ns
:3  %a_addr = getelementptr [128 x i8]* %a, i64 0, i64 %tmp_7

ST_4: a_load [2/2] 2.39ns
:4  %a_load = load i8* %a_addr, align 1


 <State 5>: 2.39ns
ST_5: b_load [1/2] 2.39ns
:0  %b_load = load i8* %b_addr, align 1

ST_5: a_load [1/2] 2.39ns
:4  %a_load = load i8* %a_addr, align 1

ST_5: tmp_5 [1/1] 0.00ns
:10  %tmp_5 = zext i8 %k1 to i64

ST_5: c_addr_1 [1/1] 0.00ns
:11  %c_addr_1 = getelementptr [256 x i8]* %c, i64 0, i64 %tmp_5

ST_5: c_load [2/2] 2.39ns
:12  %c_load = load i8* %c_addr_1, align 1


 <State 6>: 8.10ns
ST_6: prod [1/1] 6.38ns
:5  %prod = mul i8 %b_load, %a_load

ST_6: tmp_9_cast [1/1] 0.00ns
:6  %tmp_9_cast = zext i8 %b_load to i16

ST_6: tmp_cast [1/1] 0.00ns
:7  %tmp_cast = zext i8 %a_load to i16

ST_6: tmp_1 [1/1] 6.38ns
:8  %tmp_1 = mul i16 %tmp_9_cast, %tmp_cast

ST_6: carry [1/1] 0.00ns
:9  %carry = call i8 @_ssdm_op_PartSelect.i8.i16.i32.i32(i16 %tmp_1, i32 8, i32 15)

ST_6: c_load [1/2] 2.39ns
:12  %c_load = load i8* %c_addr_1, align 1

ST_6: tmp_8_cast [1/1] 0.00ns
:13  %tmp_8_cast = zext i8 %c_load to i9

ST_6: tmp_10_cast [1/1] 0.00ns
:14  %tmp_10_cast = zext i8 %prod to i9

ST_6: tmp_s [1/1] 1.72ns
:15  %tmp_s = add i9 %tmp_10_cast, %tmp_8_cast

ST_6: tmp_8 [1/1] 0.00ns
:16  %tmp_8 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %tmp_s, i32 8)

ST_6: stg_71 [1/1] 0.00ns
:17  br i1 %tmp_8, label %6, label %._crit_edge

ST_6: tmp_2 [1/1] 1.72ns
:0  %tmp_2 = add i8 -1, %k1

ST_6: tmp_9 [1/1] 0.00ns
:1  %tmp_9 = zext i8 %tmp_2 to i64

ST_6: c_addr_2 [1/1] 0.00ns
:2  %c_addr_2 = getelementptr [256 x i8]* %c, i64 0, i64 %tmp_9

ST_6: c_load_1 [2/2] 2.39ns
:3  %c_load_1 = load i8* %c_addr_2, align 1


 <State 7>: 6.50ns
ST_7: c_load_1 [1/2] 2.39ns
:3  %c_load_1 = load i8* %c_addr_2, align 1

ST_7: tmp_10 [1/1] 1.72ns
:4  %tmp_10 = add i8 1, %c_load_1

ST_7: stg_78 [1/1] 2.39ns
:5  store i8 %tmp_10, i8* %c_addr_2, align 1

ST_7: stg_79 [1/1] 0.00ns
:6  br label %._crit_edge

ST_7: tmp_11 [1/1] 1.72ns
._crit_edge:0  %tmp_11 = add i8 %c_load, %prod


 <State 8>: 2.39ns
ST_8: stg_81 [1/1] 2.39ns
._crit_edge:1  store i8 %tmp_11, i8* %c_addr_1, align 1


 <State 9>: 4.11ns
ST_9: k_1 [1/1] 1.72ns
._crit_edge:2  %k_1 = add i8 %k1, -1

ST_9: tmp_12 [1/1] 0.00ns
._crit_edge:3  %tmp_12 = zext i8 %k_1 to i64

ST_9: c_addr_3 [1/1] 0.00ns
._crit_edge:4  %c_addr_3 = getelementptr [256 x i8]* %c, i64 0, i64 %tmp_12

ST_9: c_load_2 [2/2] 2.39ns
._crit_edge:5  %c_load_2 = load i8* %c_addr_3, align 1


 <State 10>: 4.11ns
ST_10: c_load_2 [1/2] 2.39ns
._crit_edge:5  %c_load_2 = load i8* %c_addr_3, align 1

ST_10: tmp_20_cast [1/1] 0.00ns
._crit_edge:6  %tmp_20_cast = zext i8 %c_load_2 to i9

ST_10: tmp_21_cast [1/1] 0.00ns
._crit_edge:7  %tmp_21_cast = zext i8 %carry to i9

ST_10: tmp_13 [1/1] 1.72ns
._crit_edge:8  %tmp_13 = add i9 %tmp_21_cast, %tmp_20_cast

ST_10: tmp_14 [1/1] 0.00ns
._crit_edge:9  %tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %tmp_13, i32 8)

ST_10: stg_91 [1/1] 0.00ns
._crit_edge:10  br i1 %tmp_14, label %7, label %._crit_edge3

ST_10: k1_cast [1/1] 0.00ns
:0  %k1_cast = zext i8 %k1 to i9

ST_10: tmp_15 [1/1] 1.72ns
:1  %tmp_15 = add i9 -2, %k1_cast

ST_10: tmp_16 [1/1] 0.00ns
:2  %tmp_16 = sext i9 %tmp_15 to i64

ST_10: c_addr_4 [1/1] 0.00ns
:3  %c_addr_4 = getelementptr [256 x i8]* %c, i64 0, i64 %tmp_16

ST_10: c_load_3 [2/2] 2.39ns
:4  %c_load_3 = load i8* %c_addr_4, align 1


 <State 11>: 6.50ns
ST_11: c_load_3 [1/2] 2.39ns
:4  %c_load_3 = load i8* %c_addr_4, align 1

ST_11: tmp_17 [1/1] 1.72ns
:5  %tmp_17 = add i8 1, %c_load_3

ST_11: stg_99 [1/1] 2.39ns
:6  store i8 %tmp_17, i8* %c_addr_4, align 1

ST_11: stg_100 [1/1] 0.00ns
:7  br label %._crit_edge3

ST_11: tmp_18 [1/1] 1.72ns
._crit_edge3:0  %tmp_18 = add i8 %c_load_2, %carry


 <State 12>: 2.39ns
ST_12: stg_102 [1/1] 2.39ns
._crit_edge3:1  store i8 %tmp_18, i8* %c_addr_3, align 1

ST_12: stg_103 [1/1] 0.00ns
._crit_edge3:2  br label %4



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
