-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bigint_math_bigint_compare is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b_ce0 : OUT STD_LOGIC;
    b_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of bigint_math_bigint_compare is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_24 : BOOLEAN;
    signal i_7_fu_178_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_7_reg_264 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_47 : BOOLEAN;
    signal tmp_s_fu_184_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_269 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_70 : BOOLEAN;
    signal grp_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_305 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_208_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_309 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_81 : BOOLEAN;
    signal i_6_fu_216_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_6_reg_313 : STD_LOGIC_VECTOR (8 downto 0);
    signal state_load_1_reg_323 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_95 : BOOLEAN;
    signal p_flag_fu_227_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_flag_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_334 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal state_ce0 : STD_LOGIC;
    signal state_we0 : STD_LOGIC;
    signal state_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_115 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_121 : BOOLEAN;
    signal i_1_reg_126 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_130 : BOOLEAN;
    signal or_cond1_fu_256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_246_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_reg_137 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_phi_fu_153_p8 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_0_reg_149 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal state_addr_2_gep_fu_92_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal state_addr_1_gep_fu_100_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_222_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_251_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_284 : BOOLEAN;
    signal ap_sig_245 : BOOLEAN;
    signal ap_sig_176 : BOOLEAN;
    signal ap_sig_180 : BOOLEAN;

    component bigint_math_bigint_compare_state IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    state_U : component bigint_math_bigint_compare_state
    generic map (
        DataWidth => 2,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => state_address0,
        ce0 => state_ce0,
        we0 => state_we0,
        d0 => state_d0,
        q0 => state_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv2_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and ((ap_const_lv1_0 = tmp_reg_305) or not((ap_const_lv1_0 = or_cond_fu_246_p2)) or not((ap_const_lv1_0 = or_cond1_fu_256_p2)) or not((ap_const_lv1_0 = tmp_36_reg_309))))) then 
                    ap_return_preg <= p_0_phi_fu_153_p8;
                end if; 
            end if;
        end if;
    end process;


    flag_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = grp_fu_166_p2)))) then 
                flag_reg_137 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = or_cond1_fu_256_p2) and not((ap_const_lv1_0 = tmp_reg_305)) and (ap_const_lv1_0 = tmp_36_reg_309) and (ap_const_lv1_0 = or_cond_fu_246_p2))) then 
                flag_reg_137 <= p_flag_reg_329;
            end if; 
        end if;
    end process;

    i_1_reg_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = grp_fu_166_p2)))) then 
                i_1_reg_126 <= ap_const_lv9_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = or_cond1_fu_256_p2) and not((ap_const_lv1_0 = tmp_reg_305)) and (ap_const_lv1_0 = tmp_36_reg_309) and (ap_const_lv1_0 = or_cond_fu_246_p2))) then 
                i_1_reg_126 <= i_6_reg_313;
            end if; 
        end if;
    end process;

    i_reg_115_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                i_reg_115 <= i_7_reg_264;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                i_reg_115 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    p_0_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_reg_305)) and (ap_const_lv1_0 = tmp_36_reg_309) and (ap_const_lv1_0 = or_cond_fu_246_p2) and not((ap_const_lv1_0 = or_cond1_fu_256_p2)))) then 
                p_0_reg_149 <= ap_const_lv2_3;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_reg_305)) and (ap_const_lv1_0 = tmp_36_reg_309) and not((ap_const_lv1_0 = or_cond_fu_246_p2)))) then 
                p_0_reg_149 <= ap_const_lv2_1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = tmp_36_fu_208_p3)))) then 
                p_0_reg_149 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (ap_const_lv1_0 = grp_fu_166_p2))) then 
                p_0_reg_149 <= state_q0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                i_6_reg_313 <= i_6_fu_216_p2;
                tmp_36_reg_309 <= i_1_reg_126(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                i_7_reg_264 <= i_7_fu_178_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                p_flag_reg_329 <= p_flag_fu_227_p3;
                state_load_1_reg_323 <= state_q0;
                tmp_48_reg_334 <= tmp_48_fu_235_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                tmp_reg_305 <= grp_fu_166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_172_p2 = ap_const_lv1_0))) then
                    tmp_s_reg_269(8 downto 0) <= tmp_s_fu_184_p1(8 downto 0);
            end if;
        end if;
    end process;
    tmp_s_reg_269(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_fu_172_p2, grp_fu_166_p2, tmp_reg_305, tmp_36_fu_208_p3, tmp_36_reg_309, or_cond1_fu_256_p2, or_cond_fu_246_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((exitcond_fu_172_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st4_fsm_3 => 
                if ((ap_const_lv1_0 = grp_fu_166_p2)) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = tmp_36_fu_208_p3))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when ap_ST_st7_fsm_6 => 
                if (((ap_const_lv1_0 = tmp_reg_305) or not((ap_const_lv1_0 = or_cond_fu_246_p2)) or not((ap_const_lv1_0 = or_cond1_fu_256_p2)) or not((ap_const_lv1_0 = tmp_36_reg_309)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    a_address0 <= tmp_s_fu_184_p1(8 - 1 downto 0);

    a_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, tmp_reg_305, tmp_36_reg_309, ap_sig_cseq_ST_st7_fsm_6, or_cond1_fu_256_p2, or_cond_fu_246_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and ((ap_const_lv1_0 = tmp_reg_305) or not((ap_const_lv1_0 = or_cond_fu_246_p2)) or not((ap_const_lv1_0 = or_cond1_fu_256_p2)) or not((ap_const_lv1_0 = tmp_36_reg_309)))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_reg_305, tmp_36_reg_309, ap_sig_cseq_ST_st7_fsm_6, or_cond1_fu_256_p2, or_cond_fu_246_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and ((ap_const_lv1_0 = tmp_reg_305) or not((ap_const_lv1_0 = or_cond_fu_246_p2)) or not((ap_const_lv1_0 = or_cond1_fu_256_p2)) or not((ap_const_lv1_0 = tmp_36_reg_309))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(tmp_reg_305, tmp_36_reg_309, ap_sig_cseq_ST_st7_fsm_6, or_cond1_fu_256_p2, or_cond_fu_246_p2, p_0_phi_fu_153_p8, ap_return_preg)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and ((ap_const_lv1_0 = tmp_reg_305) or not((ap_const_lv1_0 = or_cond_fu_246_p2)) or not((ap_const_lv1_0 = or_cond1_fu_256_p2)) or not((ap_const_lv1_0 = tmp_36_reg_309))))) then 
            ap_return <= p_0_phi_fu_153_p8;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    ap_sig_121_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_121 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_130_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_130 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_176_assign_proc : process(tmp_42_fu_190_p2, tmp_43_fu_196_p2, tmp_47_fu_202_p2)
    begin
                ap_sig_176 <= ((ap_const_lv1_0 = tmp_42_fu_190_p2) and (ap_const_lv1_0 = tmp_43_fu_196_p2) and not((ap_const_lv1_0 = tmp_47_fu_202_p2)));
    end process;


    ap_sig_180_assign_proc : process(tmp_42_fu_190_p2, tmp_43_fu_196_p2)
    begin
                ap_sig_180 <= ((ap_const_lv1_0 = tmp_42_fu_190_p2) and not((ap_const_lv1_0 = tmp_43_fu_196_p2)));
    end process;


    ap_sig_24_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_24 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_245_assign_proc : process(tmp_reg_305, tmp_36_reg_309, ap_sig_cseq_ST_st7_fsm_6)
    begin
                ap_sig_245 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_reg_305)) and (ap_const_lv1_0 = tmp_36_reg_309));
    end process;


    ap_sig_284_assign_proc : process(or_cond1_fu_256_p2, or_cond_fu_246_p2)
    begin
                ap_sig_284 <= ((ap_const_lv1_0 = or_cond_fu_246_p2) and not((ap_const_lv1_0 = or_cond1_fu_256_p2)));
    end process;


    ap_sig_47_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_47 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_70_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_70 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_81_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_81 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_95_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_95 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_24)
    begin
        if (ap_sig_24) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_47)
    begin
        if (ap_sig_47) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_121)
    begin
        if (ap_sig_121) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_70)
    begin
        if (ap_sig_70) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_81)
    begin
        if (ap_sig_81) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_95)
    begin
        if (ap_sig_95) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_130)
    begin
        if (ap_sig_130) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;

    b_address0 <= tmp_s_fu_184_p1(8 - 1 downto 0);

    b_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            b_ce0 <= ap_const_logic_1;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_172_p2 <= "1" when (i_reg_115 = ap_const_lv9_100) else "0";
    grp_fu_166_p2 <= "1" when (state_q0 = ap_const_lv2_0) else "0";
    i_6_fu_216_p2 <= std_logic_vector(unsigned(i_1_reg_126) + unsigned(ap_const_lv9_1));
    i_7_fu_178_p2 <= std_logic_vector(unsigned(i_reg_115) + unsigned(ap_const_lv9_1));
    or_cond1_fu_256_p2 <= (tmp_49_fu_251_p2 and tmp_48_reg_334);
    or_cond_fu_246_p2 <= (tmp_46_fu_241_p2 and tmp_48_reg_334);

    p_0_phi_fu_153_p8_assign_proc : process(or_cond_fu_246_p2, p_0_reg_149, ap_sig_284, ap_sig_245)
    begin
        if (ap_sig_245) then
            if (ap_sig_284) then 
                p_0_phi_fu_153_p8 <= ap_const_lv2_3;
            elsif (not((ap_const_lv1_0 = or_cond_fu_246_p2))) then 
                p_0_phi_fu_153_p8 <= ap_const_lv2_1;
            else 
                p_0_phi_fu_153_p8 <= p_0_reg_149;
            end if;
        else 
            p_0_phi_fu_153_p8 <= p_0_reg_149;
        end if; 
    end process;

    p_flag_fu_227_p3 <= 
        ap_const_lv32_1 when (grp_fu_166_p2(0) = '1') else 
        flag_reg_137;
    state_addr_1_gep_fu_100_p3 <= tmp_s_reg_269(8 - 1 downto 0);
    state_addr_2_gep_fu_92_p3 <= tmp_s_reg_269(8 - 1 downto 0);

    state_address0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, tmp_s_reg_269, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, tmp_42_fu_190_p2, tmp_43_fu_196_p2, tmp_47_fu_202_p2, state_addr_2_gep_fu_92_p3, state_addr_1_gep_fu_100_p3, tmp_44_fu_222_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_42_fu_190_p2)))) then 
            state_address0 <= state_addr_1_gep_fu_100_p3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_42_fu_190_p2) and not((ap_const_lv1_0 = tmp_43_fu_196_p2)))) then 
            state_address0 <= state_addr_2_gep_fu_92_p3;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_42_fu_190_p2) and (ap_const_lv1_0 = tmp_43_fu_196_p2) and not((ap_const_lv1_0 = tmp_47_fu_202_p2)))) then 
            state_address0 <= tmp_s_reg_269(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            state_address0 <= tmp_44_fu_222_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            state_address0 <= ap_const_lv64_0(8 - 1 downto 0);
        else 
            state_address0 <= "XXXXXXXX";
        end if; 
    end process;


    state_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st3_fsm_2, tmp_42_fu_190_p2, tmp_43_fu_196_p2, tmp_47_fu_202_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_42_fu_190_p2) and (ap_const_lv1_0 = tmp_43_fu_196_p2) and not((ap_const_lv1_0 = tmp_47_fu_202_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_42_fu_190_p2) and not((ap_const_lv1_0 = tmp_43_fu_196_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_42_fu_190_p2))))) then 
            state_ce0 <= ap_const_logic_1;
        else 
            state_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    state_d0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, tmp_42_fu_190_p2, ap_sig_176, ap_sig_180)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
            if (not((ap_const_lv1_0 = tmp_42_fu_190_p2))) then 
                state_d0 <= ap_const_lv2_1;
            elsif (ap_sig_180) then 
                state_d0 <= ap_const_lv2_3;
            elsif (ap_sig_176) then 
                state_d0 <= ap_const_lv2_0;
            else 
                state_d0 <= "XX";
            end if;
        else 
            state_d0 <= "XX";
        end if; 
    end process;


    state_we0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, tmp_42_fu_190_p2, tmp_43_fu_196_p2, tmp_47_fu_202_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_42_fu_190_p2) and (ap_const_lv1_0 = tmp_43_fu_196_p2) and not((ap_const_lv1_0 = tmp_47_fu_202_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_42_fu_190_p2) and not((ap_const_lv1_0 = tmp_43_fu_196_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_42_fu_190_p2))))) then 
            state_we0 <= ap_const_logic_1;
        else 
            state_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_36_fu_208_p3 <= i_1_reg_126(8 downto 8);
    tmp_42_fu_190_p2 <= "1" when (unsigned(a_q0) > unsigned(b_q0)) else "0";
    tmp_43_fu_196_p2 <= "1" when (unsigned(a_q0) < unsigned(b_q0)) else "0";
    tmp_44_fu_222_p1 <= std_logic_vector(resize(unsigned(i_1_reg_126),64));
    tmp_46_fu_241_p2 <= "1" when (state_load_1_reg_323 = ap_const_lv2_1) else "0";
    tmp_47_fu_202_p2 <= "1" when (a_q0 = b_q0) else "0";
    tmp_48_fu_235_p2 <= "1" when (p_flag_fu_227_p3 = ap_const_lv32_1) else "0";
    tmp_49_fu_251_p2 <= "1" when (state_load_1_reg_323 = ap_const_lv2_3) else "0";
    tmp_s_fu_184_p1 <= std_logic_vector(resize(unsigned(i_reg_115),64));
end behav;
