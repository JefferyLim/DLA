

================================================================
== Vivado HLS Report for 'bigint_math_bigint_add_1'
================================================================
* Date:           Sun Mar 19 09:53:13 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        BigInt
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  50.00|      6.50|        6.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3591|  3591|  3591|  3591|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+------+------+----------+-----------+-----------+------+----------+
        |          |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1  |   512|   512|         2|          -|          -|   256|    no    |
        |- Loop 2  |   512|   512|         2|          -|          -|   256|    no    |
        |- Loop 3  |  2048|  2048|         8|          -|          -|   256|    no    |
        +----------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 15
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (!exitcond_i)
	5  / (exitcond_i)
4 --> 
	3  / true
5 --> 
	6  / (!exitcond_i2)
	7  / (exitcond_i2)
6 --> 
	5  / true
7 --> 
	8  / true
8 --> 
	9  / (!tmp)
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	8  / true
* FSM state operations: 

 <State 1>: 0.00ns
ST_1: tempA [1/1] 0.00ns
:2  %tempA = alloca [256 x i8], align 16

ST_1: tempB [1/1] 0.00ns
:3  %tempB = alloca [256 x i8], align 16

ST_1: stg_18 [2/2] 0.00ns
:4  call fastcc void @bigint_math_bigint_zero([256 x i8]* %tempA)

ST_1: stg_19 [2/2] 0.00ns
:5  call fastcc void @bigint_math_bigint_zero([256 x i8]* %tempB)


 <State 2>: 1.57ns
ST_2: empty [1/1] 0.00ns
:0  %empty = call i32 (...)* @_ssdm_op_SpecMemCore([256 x i8]* %b, [1 x i8]* @p_str10, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str10, i32 -1, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10)

ST_2: empty_79 [1/1] 0.00ns
:1  %empty_79 = call i32 (...)* @_ssdm_op_SpecMemCore([256 x i8]* %out_r, [1 x i8]* @p_str10, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str10, i32 -1, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10)

ST_2: stg_22 [1/2] 0.00ns
:4  call fastcc void @bigint_math_bigint_zero([256 x i8]* %tempA)

ST_2: stg_23 [1/2] 0.00ns
:5  call fastcc void @bigint_math_bigint_zero([256 x i8]* %tempB)

ST_2: empty_80 [1/1] 0.00ns
:6  %empty_80 = call i32 (...)* @_ssdm_op_SpecMemCore([256 x i8]* %tempB, [1 x i8]* @p_str10, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str10, i32 -1, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10)

ST_2: empty_81 [1/1] 0.00ns
:7  %empty_81 = call i32 (...)* @_ssdm_op_SpecMemCore([256 x i8]* %tempA, [1 x i8]* @p_str10, [7 x i8]* @RAM_1P_str, [1 x i8]* @p_str10, i32 -1, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10, [1 x i8]* @p_str10)

ST_2: stg_26 [1/1] 1.57ns
:8  br label %1


 <State 3>: 3.60ns
ST_3: i_i [1/1] 0.00ns
:0  %i_i = phi i9 [ 0, %0 ], [ %i_13, %2 ]

ST_3: exitcond_i [1/1] 2.03ns
:1  %exitcond_i = icmp eq i9 %i_i, -256

ST_3: empty_82 [1/1] 0.00ns
:2  %empty_82 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_3: i_13 [1/1] 1.84ns
:3  %i_13 = add i9 %i_i, 1

ST_3: stg_31 [1/1] 1.57ns
:4  br i1 %exitcond_i, label %bigint_copy.exit, label %2

ST_3: tmp_i [1/1] 0.00ns
:0  %tmp_i = zext i9 %i_i to i64

ST_3: a_addr_4 [1/1] 0.00ns
:1  %a_addr_4 = getelementptr [256 x i8]* %out_r, i64 0, i64 %tmp_i

ST_3: a_load_4 [2/2] 2.39ns
:2  %a_load_4 = load i8* %a_addr_4, align 1


 <State 4>: 4.78ns
ST_4: a_load_4 [1/2] 2.39ns
:2  %a_load_4 = load i8* %a_addr_4, align 1

ST_4: tempA_addr [1/1] 0.00ns
:3  %tempA_addr = getelementptr [256 x i8]* %tempA, i64 0, i64 %tmp_i

ST_4: stg_37 [1/1] 2.39ns
:4  store i8 %a_load_4, i8* %tempA_addr, align 1

ST_4: stg_38 [1/1] 0.00ns
:5  br label %1


 <State 5>: 2.39ns
ST_5: i_i1 [1/1] 0.00ns
bigint_copy.exit:0  %i_i1 = phi i9 [ %i_3, %3 ], [ 0, %1 ]

ST_5: exitcond_i2 [1/1] 2.03ns
bigint_copy.exit:1  %exitcond_i2 = icmp eq i9 %i_i1, -256

ST_5: empty_83 [1/1] 0.00ns
bigint_copy.exit:2  %empty_83 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_5: i_3 [1/1] 1.84ns
bigint_copy.exit:3  %i_3 = add i9 %i_i1, 1

ST_5: stg_43 [1/1] 0.00ns
bigint_copy.exit:4  br i1 %exitcond_i2, label %bigint_copy.exit8, label %3

ST_5: tmp_i3 [1/1] 0.00ns
:0  %tmp_i3 = zext i9 %i_i1 to i64

ST_5: b_addr [1/1] 0.00ns
:1  %b_addr = getelementptr [256 x i8]* %b, i64 0, i64 %tmp_i3

ST_5: b_load [2/2] 2.39ns
:2  %b_load = load i8* %b_addr, align 1

ST_5: stg_47 [2/2] 0.00ns
bigint_copy.exit8:0  call fastcc void @bigint_math_bigint_zero([256 x i8]* %out_r)


 <State 6>: 4.78ns
ST_6: b_load [1/2] 2.39ns
:2  %b_load = load i8* %b_addr, align 1

ST_6: tempB_addr_4 [1/1] 0.00ns
:3  %tempB_addr_4 = getelementptr [256 x i8]* %tempB, i64 0, i64 %tmp_i3

ST_6: stg_50 [1/1] 2.39ns
:4  store i8 %b_load, i8* %tempB_addr_4, align 1

ST_6: stg_51 [1/1] 0.00ns
:5  br label %bigint_copy.exit


 <State 7>: 1.57ns
ST_7: stg_52 [1/2] 0.00ns
bigint_copy.exit8:0  call fastcc void @bigint_math_bigint_zero([256 x i8]* %out_r)

ST_7: stg_53 [1/1] 1.57ns
bigint_copy.exit8:1  br label %4


 <State 8>: 2.39ns
ST_8: i [1/1] 0.00ns
:0  %i = phi i9 [ 255, %bigint_copy.exit8 ], [ %i_14, %._crit_edge1 ]

ST_8: i_cast [1/1] 0.00ns
:1  %i_cast = sext i9 %i to i32

ST_8: tmp [1/1] 0.00ns
:2  %tmp = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %i, i32 8)

ST_8: empty_84 [1/1] 0.00ns
:3  %empty_84 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_8: stg_58 [1/1] 0.00ns
:4  br i1 %tmp, label %8, label %5

ST_8: tmp_s [1/1] 0.00ns
:0  %tmp_s = zext i32 %i_cast to i64

ST_8: tempA_addr_7 [1/1] 0.00ns
:1  %tempA_addr_7 = getelementptr inbounds [256 x i8]* %tempA, i64 0, i64 %tmp_s

ST_8: tempA_load [2/2] 2.39ns
:2  %tempA_load = load i8* %tempA_addr_7, align 1

ST_8: tempB_addr [1/1] 0.00ns
:3  %tempB_addr = getelementptr inbounds [256 x i8]* %tempB, i64 0, i64 %tmp_s

ST_8: tempB_load [2/2] 2.39ns
:4  %tempB_load = load i8* %tempB_addr, align 1

ST_8: a_addr [1/1] 0.00ns
:11  %a_addr = getelementptr [256 x i8]* %out_r, i64 0, i64 %tmp_s

ST_8: a_load [2/2] 2.39ns
:12  %a_load = load i8* %a_addr, align 1

ST_8: stg_66 [1/1] 0.00ns
:0  ret void


 <State 9>: 5.83ns
ST_9: tempA_load [1/2] 2.39ns
:2  %tempA_load = load i8* %tempA_addr_7, align 1

ST_9: tempB_load [1/2] 2.39ns
:4  %tempB_load = load i8* %tempB_addr, align 1

ST_9: sum [1/1] 1.72ns
:5  %sum = add i8 %tempA_load, %tempB_load

ST_9: tmp_115_cast [1/1] 0.00ns
:6  %tmp_115_cast = zext i8 %tempA_load to i9

ST_9: tmp_116_cast [1/1] 0.00ns
:7  %tmp_116_cast = zext i8 %tempB_load to i9

ST_9: tmp_93 [1/1] 1.72ns
:8  %tmp_93 = add i9 %tmp_115_cast, %tmp_116_cast

ST_9: tmp_22 [1/1] 0.00ns
:9  %tmp_22 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %tmp_93, i32 8)

ST_9: carry [1/1] 0.00ns
:10  %carry = zext i1 %tmp_22 to i8

ST_9: a_load [1/2] 2.39ns
:12  %a_load = load i8* %a_addr, align 1

ST_9: tmp_119_cast [1/1] 0.00ns
:13  %tmp_119_cast = zext i8 %a_load to i9

ST_9: tmp_120_cast [1/1] 0.00ns
:14  %tmp_120_cast = zext i8 %sum to i9

ST_9: tmp_94 [1/1] 1.72ns
:15  %tmp_94 = add i9 %tmp_120_cast, %tmp_119_cast

ST_9: tmp_23 [1/1] 0.00ns
:16  %tmp_23 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %tmp_94, i32 8)

ST_9: stg_80 [1/1] 0.00ns
:17  br i1 %tmp_23, label %6, label %._crit_edge

ST_9: tmp_95 [1/1] 1.84ns
:0  %tmp_95 = add i9 -1, %i

ST_9: tmp_96 [1/1] 0.00ns
:1  %tmp_96 = sext i9 %tmp_95 to i64

ST_9: a_addr_1 [1/1] 0.00ns
:2  %a_addr_1 = getelementptr [256 x i8]* %out_r, i64 0, i64 %tmp_96

ST_9: a_load_1 [2/2] 2.39ns
:3  %a_load_1 = load i8* %a_addr_1, align 1


 <State 10>: 6.50ns
ST_10: a_load_1 [1/2] 2.39ns
:3  %a_load_1 = load i8* %a_addr_1, align 1

ST_10: tmp_97 [1/1] 1.72ns
:4  %tmp_97 = add i8 1, %a_load_1

ST_10: stg_87 [1/1] 2.39ns
:5  store i8 %tmp_97, i8* %a_addr_1, align 1

ST_10: stg_88 [1/1] 0.00ns
:6  br label %._crit_edge

ST_10: tmp_98 [1/1] 1.72ns
._crit_edge:0  %tmp_98 = add i8 %sum, %a_load


 <State 11>: 2.39ns
ST_11: stg_90 [1/1] 2.39ns
._crit_edge:1  store i8 %tmp_98, i8* %a_addr, align 1


 <State 12>: 4.23ns
ST_12: i_14 [1/1] 1.84ns
._crit_edge:2  %i_14 = add i9 %i, -1

ST_12: tmp_99 [1/1] 0.00ns
._crit_edge:3  %tmp_99 = sext i9 %i_14 to i64

ST_12: a_addr_2 [1/1] 0.00ns
._crit_edge:4  %a_addr_2 = getelementptr [256 x i8]* %out_r, i64 0, i64 %tmp_99

ST_12: a_load_2 [2/2] 2.39ns
._crit_edge:5  %a_load_2 = load i8* %a_addr_2, align 1


 <State 13>: 4.23ns
ST_13: a_load_2 [1/2] 2.39ns
._crit_edge:5  %a_load_2 = load i8* %a_addr_2, align 1

ST_13: tmp_130_cast [1/1] 0.00ns
._crit_edge:6  %tmp_130_cast = zext i8 %a_load_2 to i9

ST_13: tmp_131_cast [1/1] 0.00ns
._crit_edge:7  %tmp_131_cast = zext i1 %tmp_22 to i9

ST_13: tmp_100 [1/1] 1.72ns
._crit_edge:8  %tmp_100 = add i9 %tmp_131_cast, %tmp_130_cast

ST_13: tmp_24 [1/1] 0.00ns
._crit_edge:9  %tmp_24 = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %tmp_100, i32 8)

ST_13: stg_100 [1/1] 0.00ns
._crit_edge:10  br i1 %tmp_24, label %7, label %._crit_edge1

ST_13: tmp_101 [1/1] 1.84ns
:0  %tmp_101 = add i9 -2, %i

ST_13: tmp_102 [1/1] 0.00ns
:1  %tmp_102 = sext i9 %tmp_101 to i64

ST_13: a_addr_3 [1/1] 0.00ns
:2  %a_addr_3 = getelementptr [256 x i8]* %out_r, i64 0, i64 %tmp_102

ST_13: a_load_3 [2/2] 2.39ns
:3  %a_load_3 = load i8* %a_addr_3, align 1


 <State 14>: 6.50ns
ST_14: a_load_3 [1/2] 2.39ns
:3  %a_load_3 = load i8* %a_addr_3, align 1

ST_14: tmp_103 [1/1] 1.72ns
:4  %tmp_103 = add i8 1, %a_load_3

ST_14: stg_107 [1/1] 2.39ns
:5  store i8 %tmp_103, i8* %a_addr_3, align 1

ST_14: stg_108 [1/1] 0.00ns
:6  br label %._crit_edge1

ST_14: tmp_104 [1/1] 1.72ns
._crit_edge1:0  %tmp_104 = add i8 %a_load_2, %carry


 <State 15>: 2.39ns
ST_15: stg_110 [1/1] 2.39ns
._crit_edge1:1  store i8 %tmp_104, i8* %a_addr_2, align 1

ST_15: stg_111 [1/1] 0.00ns
._crit_edge1:2  br label %4



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 50ns, clock uncertainty: 6.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
