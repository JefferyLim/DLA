// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "bigint_math.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic bigint_math::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic bigint_math::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> bigint_math::ap_ST_st1_fsm_0 = "1";
const sc_lv<12> bigint_math::ap_ST_st2_fsm_1 = "10";
const sc_lv<12> bigint_math::ap_ST_st3_fsm_2 = "100";
const sc_lv<12> bigint_math::ap_ST_st4_fsm_3 = "1000";
const sc_lv<12> bigint_math::ap_ST_st5_fsm_4 = "10000";
const sc_lv<12> bigint_math::ap_ST_st6_fsm_5 = "100000";
const sc_lv<12> bigint_math::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<12> bigint_math::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<12> bigint_math::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<12> bigint_math::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<12> bigint_math::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<12> bigint_math::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<32> bigint_math::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> bigint_math::ap_const_lv1_1 = "1";
const int bigint_math::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> bigint_math::ap_const_lv32_5 = "101";
const sc_lv<32> bigint_math::ap_const_lv32_8 = "1000";
const sc_lv<32> bigint_math::ap_const_lv32_1 = "1";
const sc_lv<1> bigint_math::ap_const_lv1_0 = "0";
const sc_lv<32> bigint_math::ap_const_lv32_2 = "10";
const sc_lv<32> bigint_math::ap_const_lv32_3 = "11";
const sc_lv<32> bigint_math::ap_const_lv32_4 = "100";
const sc_lv<32> bigint_math::ap_const_lv32_7 = "111";
const sc_lv<32> bigint_math::ap_const_lv32_A = "1010";
const sc_lv<32> bigint_math::ap_const_lv32_B = "1011";
const sc_lv<8> bigint_math::ap_const_lv8_0 = "00000000";
const sc_lv<32> bigint_math::ap_const_lv32_9 = "1001";
const sc_lv<2048> bigint_math::ap_const_lv2048_lc
const sc_lv<32> bigint_math::ap_const_lv32_FF = "11111111";
const sc_lv<32> bigint_math::ap_const_lv32_6 = "110";
const sc_lv<8> bigint_math::ap_const_lv8_80 = "10000000";
const sc_lv<8> bigint_math::ap_const_lv8_1 = "1";
const sc_lv<8> bigint_math::ap_const_lv8_7F = "1111111";
const sc_lv<8> bigint_math::ap_const_lv8_FF = "11111111";
const sc_lv<32> bigint_math::ap_const_lv32_F = "1111";
const sc_lv<9> bigint_math::ap_const_lv9_1FE = "111111110";
const sc_lv<32> bigint_math::ap_const_lv32_80000000 = "10000000000000000000000000000000";

bigint_math::bigint_math(sc_module_name name) : sc_module(name), mVcdFile(0) {
    bigint_math_PERIPH_BUS_s_axi_U = new bigint_math_PERIPH_BUS_s_axi<C_S_AXI_PERIPH_BUS_ADDR_WIDTH,C_S_AXI_PERIPH_BUS_DATA_WIDTH>("bigint_math_PERIPH_BUS_s_axi_U");
    bigint_math_PERIPH_BUS_s_axi_U->AWVALID(s_axi_PERIPH_BUS_AWVALID);
    bigint_math_PERIPH_BUS_s_axi_U->AWREADY(s_axi_PERIPH_BUS_AWREADY);
    bigint_math_PERIPH_BUS_s_axi_U->AWADDR(s_axi_PERIPH_BUS_AWADDR);
    bigint_math_PERIPH_BUS_s_axi_U->WVALID(s_axi_PERIPH_BUS_WVALID);
    bigint_math_PERIPH_BUS_s_axi_U->WREADY(s_axi_PERIPH_BUS_WREADY);
    bigint_math_PERIPH_BUS_s_axi_U->WDATA(s_axi_PERIPH_BUS_WDATA);
    bigint_math_PERIPH_BUS_s_axi_U->WSTRB(s_axi_PERIPH_BUS_WSTRB);
    bigint_math_PERIPH_BUS_s_axi_U->ARVALID(s_axi_PERIPH_BUS_ARVALID);
    bigint_math_PERIPH_BUS_s_axi_U->ARREADY(s_axi_PERIPH_BUS_ARREADY);
    bigint_math_PERIPH_BUS_s_axi_U->ARADDR(s_axi_PERIPH_BUS_ARADDR);
    bigint_math_PERIPH_BUS_s_axi_U->RVALID(s_axi_PERIPH_BUS_RVALID);
    bigint_math_PERIPH_BUS_s_axi_U->RREADY(s_axi_PERIPH_BUS_RREADY);
    bigint_math_PERIPH_BUS_s_axi_U->RDATA(s_axi_PERIPH_BUS_RDATA);
    bigint_math_PERIPH_BUS_s_axi_U->RRESP(s_axi_PERIPH_BUS_RRESP);
    bigint_math_PERIPH_BUS_s_axi_U->BVALID(s_axi_PERIPH_BUS_BVALID);
    bigint_math_PERIPH_BUS_s_axi_U->BREADY(s_axi_PERIPH_BUS_BREADY);
    bigint_math_PERIPH_BUS_s_axi_U->BRESP(s_axi_PERIPH_BUS_BRESP);
    bigint_math_PERIPH_BUS_s_axi_U->ACLK(ap_clk);
    bigint_math_PERIPH_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    bigint_math_PERIPH_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    bigint_math_PERIPH_BUS_s_axi_U->ap_start(ap_start);
    bigint_math_PERIPH_BUS_s_axi_U->interrupt(interrupt);
    bigint_math_PERIPH_BUS_s_axi_U->ap_ready(ap_ready);
    bigint_math_PERIPH_BUS_s_axi_U->ap_done(ap_done);
    bigint_math_PERIPH_BUS_s_axi_U->ap_idle(ap_idle);
    bigint_math_PERIPH_BUS_s_axi_U->a_address0(a_address0);
    bigint_math_PERIPH_BUS_s_axi_U->a_ce0(a_ce0);
    bigint_math_PERIPH_BUS_s_axi_U->a_q0(a_q0);
    bigint_math_PERIPH_BUS_s_axi_U->b_address0(b_address0);
    bigint_math_PERIPH_BUS_s_axi_U->b_ce0(b_ce0);
    bigint_math_PERIPH_BUS_s_axi_U->b_q0(b_q0);
    bigint_math_PERIPH_BUS_s_axi_U->output_V(p_Repl2_1_reg_184);
    bigint_math_PERIPH_BUS_s_axi_U->output_V_ap_vld(output_V_ap_vld);
    c_U = new bigint_math_c("c_U");
    c_U->clk(ap_clk);
    c_U->reset(ap_rst_n_inv);
    c_U->address0(c_address0);
    c_U->ce0(c_ce0);
    c_U->we0(c_we0);
    c_U->d0(c_d0);
    c_U->q0(c_q0);
    c_U->address1(c_address1);
    c_U->ce1(c_ce1);
    c_U->we1(c_we1);
    c_U->d1(c_d1);
    c_U->q1(c_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_7_fu_263_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( exitcond_fu_401_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( exitcond_fu_401_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_108);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_148);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_170);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_188);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_204);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_234);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_261);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_91);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_99);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st10_fsm_9);
    sensitive << ( ap_sig_234 );

    SC_METHOD(thread_ap_sig_cseq_ST_st11_fsm_10);
    sensitive << ( ap_sig_188 );

    SC_METHOD(thread_ap_sig_cseq_ST_st12_fsm_11);
    sensitive << ( ap_sig_204 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_29 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_108 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_123 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_135 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_4);
    sensitive << ( ap_sig_148 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_5);
    sensitive << ( ap_sig_91 );

    SC_METHOD(thread_ap_sig_cseq_ST_st7_fsm_6);
    sensitive << ( ap_sig_261 );

    SC_METHOD(thread_ap_sig_cseq_ST_st8_fsm_7);
    sensitive << ( ap_sig_170 );

    SC_METHOD(thread_ap_sig_cseq_ST_st9_fsm_8);
    sensitive << ( ap_sig_99 );

    SC_METHOD(thread_b_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_1_fu_230_p1 );

    SC_METHOD(thread_b_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_c_address0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( c_addr_2_reg_497 );
    sensitive << ( c_addr_4_reg_516 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( tmp_5_fu_268_p1 );
    sensitive << ( tmp_10_fu_323_p1 );
    sensitive << ( tmp_3_fu_407_p1 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_c_address1);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( c_addr_1_reg_476 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( c_addr_3_reg_507 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( tmp_13_fu_347_p1 );
    sensitive << ( tmp_17_fu_383_p1 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_c_ce0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( ap_sig_cseq_ST_st5_fsm_4 );
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_c_ce1);
    sensitive << ( ap_sig_cseq_ST_st9_fsm_8 );
    sensitive << ( ap_sig_cseq_ST_st8_fsm_7 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_c_d0);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_11_fu_328_p2 );
    sensitive << ( tmp_18_fu_388_p2 );

    SC_METHOD(thread_c_d1);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );
    sensitive << ( tmp_12_fu_335_p2 );
    sensitive << ( tmp_19_fu_395_p2 );

    SC_METHOD(thread_c_we0);
    sensitive << ( tmp_9_reg_493 );
    sensitive << ( tmp_15_reg_512 );
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_c_we1);
    sensitive << ( ap_sig_cseq_ST_st10_fsm_9 );
    sensitive << ( ap_sig_cseq_ST_st7_fsm_6 );

    SC_METHOD(thread_exitcond1_fu_212_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i_reg_151 );

    SC_METHOD(thread_exitcond2_fu_245_p2);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( j_reg_163 );

    SC_METHOD(thread_exitcond_fu_401_p2);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( i1_reg_196 );

    SC_METHOD(thread_i_1_fu_416_p2);
    sensitive << ( i1_reg_196 );

    SC_METHOD(thread_i_2_fu_218_p2);
    sensitive << ( i_reg_151 );

    SC_METHOD(thread_j_1_fu_251_p2);
    sensitive << ( j_reg_163 );

    SC_METHOD(thread_k1_cast_fu_373_p1);
    sensitive << ( k1_reg_174 );

    SC_METHOD(thread_k_1_fu_341_p2);
    sensitive << ( k1_reg_174 );

    SC_METHOD(thread_k_fu_235_p2);
    sensitive << ( i_reg_151 );

    SC_METHOD(thread_output_V_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st11_fsm_10 );
    sensitive << ( exitcond_fu_401_p2 );

    SC_METHOD(thread_prod_fu_273_p2);
    sensitive << ( b_load_reg_447 );
    sensitive << ( a_load_reg_470 );

    SC_METHOD(thread_temp1_V_fu_422_p3);
    sensitive << ( c_q0 );
    sensitive << ( tmp_2_reg_530 );

    SC_METHOD(thread_tmp_10_cast_fu_299_p1);
    sensitive << ( prod_fu_273_p2 );

    SC_METHOD(thread_tmp_10_fu_323_p1);
    sensitive << ( tmp_4_fu_317_p2 );

    SC_METHOD(thread_tmp_11_fu_328_p2);
    sensitive << ( c_q0 );

    SC_METHOD(thread_tmp_12_fu_335_p2);
    sensitive << ( reg_207 );
    sensitive << ( prod_reg_482 );

    SC_METHOD(thread_tmp_13_fu_347_p1);
    sensitive << ( k_1_fu_341_p2 );

    SC_METHOD(thread_tmp_14_fu_359_p2);
    sensitive << ( tmp_21_cast_fu_356_p1 );
    sensitive << ( tmp_20_cast_fu_352_p1 );

    SC_METHOD(thread_tmp_15_fu_365_p3);
    sensitive << ( tmp_14_fu_359_p2 );

    SC_METHOD(thread_tmp_16_fu_377_p2);
    sensitive << ( k1_cast_fu_373_p1 );

    SC_METHOD(thread_tmp_17_fu_383_p1);
    sensitive << ( tmp_16_fu_377_p2 );

    SC_METHOD(thread_tmp_18_fu_388_p2);
    sensitive << ( c_q1 );

    SC_METHOD(thread_tmp_19_fu_395_p2);
    sensitive << ( reg_207 );
    sensitive << ( carry_reg_487 );

    SC_METHOD(thread_tmp_1_fu_230_p1);
    sensitive << ( tmp_fu_224_p2 );

    SC_METHOD(thread_tmp_20_cast_fu_352_p1);
    sensitive << ( c_q1 );

    SC_METHOD(thread_tmp_21_cast_fu_356_p1);
    sensitive << ( carry_reg_487 );

    SC_METHOD(thread_tmp_2_cast_fu_241_p0);
    sensitive << ( b_q0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_tmp_2_cast_fu_241_p1);
    sensitive << ( tmp_2_cast_fu_241_p0 );

    SC_METHOD(thread_tmp_2_fu_412_p1);
    sensitive << ( p_Repl2_1_reg_184 );

    SC_METHOD(thread_tmp_3_fu_407_p1);
    sensitive << ( i1_reg_196 );

    SC_METHOD(thread_tmp_4_fu_317_p2);
    sensitive << ( k1_reg_174 );

    SC_METHOD(thread_tmp_5_fu_268_p1);
    sensitive << ( k1_reg_174 );

    SC_METHOD(thread_tmp_6_fu_257_p2);
    sensitive << ( j_reg_163 );

    SC_METHOD(thread_tmp_7_fu_263_p1);
    sensitive << ( tmp_6_fu_257_p2 );

    SC_METHOD(thread_tmp_8_cast_fu_295_p1);
    sensitive << ( c_q0 );

    SC_METHOD(thread_tmp_8_fu_303_p2);
    sensitive << ( tmp_10_cast_fu_299_p1 );
    sensitive << ( tmp_8_cast_fu_295_p1 );

    SC_METHOD(thread_tmp_9_fu_309_p3);
    sensitive << ( tmp_8_fu_303_p2 );

    SC_METHOD(thread_tmp_fu_224_p2);
    sensitive << ( i_reg_151 );

    SC_METHOD(thread_tmp_s_fu_280_p0);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_2_cast_reg_452 );

    SC_METHOD(thread_tmp_s_fu_280_p1);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_5 );
    sensitive << ( tmp_s_fu_280_p10 );

    SC_METHOD(thread_tmp_s_fu_280_p10);
    sensitive << ( a_load_reg_470 );

    SC_METHOD(thread_tmp_s_fu_280_p2);
    sensitive << ( tmp_s_fu_280_p0 );
    sensitive << ( tmp_s_fu_280_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond1_fu_212_p2 );
    sensitive << ( exitcond2_fu_245_p2 );
    sensitive << ( exitcond_fu_401_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "bigint_math_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_AWVALID, "(port)s_axi_PERIPH_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_AWREADY, "(port)s_axi_PERIPH_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_AWADDR, "(port)s_axi_PERIPH_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_WVALID, "(port)s_axi_PERIPH_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_WREADY, "(port)s_axi_PERIPH_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_WDATA, "(port)s_axi_PERIPH_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_WSTRB, "(port)s_axi_PERIPH_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_ARVALID, "(port)s_axi_PERIPH_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_ARREADY, "(port)s_axi_PERIPH_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_ARADDR, "(port)s_axi_PERIPH_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_RVALID, "(port)s_axi_PERIPH_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_RREADY, "(port)s_axi_PERIPH_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_RDATA, "(port)s_axi_PERIPH_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_RRESP, "(port)s_axi_PERIPH_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_BVALID, "(port)s_axi_PERIPH_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_BREADY, "(port)s_axi_PERIPH_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_PERIPH_BUS_BRESP, "(port)s_axi_PERIPH_BUS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_29, "ap_sig_29");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, a_address0, "a_address0");
    sc_trace(mVcdFile, a_ce0, "a_ce0");
    sc_trace(mVcdFile, a_q0, "a_q0");
    sc_trace(mVcdFile, b_address0, "b_address0");
    sc_trace(mVcdFile, b_ce0, "b_ce0");
    sc_trace(mVcdFile, b_q0, "b_q0");
    sc_trace(mVcdFile, output_V_ap_vld, "output_V_ap_vld");
    sc_trace(mVcdFile, c_q0, "c_q0");
    sc_trace(mVcdFile, reg_207, "reg_207");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_5, "ap_sig_cseq_ST_st6_fsm_5");
    sc_trace(mVcdFile, ap_sig_91, "ap_sig_91");
    sc_trace(mVcdFile, c_q1, "c_q1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st9_fsm_8, "ap_sig_cseq_ST_st9_fsm_8");
    sc_trace(mVcdFile, ap_sig_99, "ap_sig_99");
    sc_trace(mVcdFile, i_2_fu_218_p2, "i_2_fu_218_p2");
    sc_trace(mVcdFile, i_2_reg_432, "i_2_reg_432");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_108, "ap_sig_108");
    sc_trace(mVcdFile, exitcond1_fu_212_p2, "exitcond1_fu_212_p2");
    sc_trace(mVcdFile, k_fu_235_p2, "k_fu_235_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_123, "ap_sig_123");
    sc_trace(mVcdFile, b_load_reg_447, "b_load_reg_447");
    sc_trace(mVcdFile, tmp_2_cast_fu_241_p1, "tmp_2_cast_fu_241_p1");
    sc_trace(mVcdFile, tmp_2_cast_reg_452, "tmp_2_cast_reg_452");
    sc_trace(mVcdFile, j_1_fu_251_p2, "j_1_fu_251_p2");
    sc_trace(mVcdFile, j_1_reg_460, "j_1_reg_460");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_135, "ap_sig_135");
    sc_trace(mVcdFile, exitcond2_fu_245_p2, "exitcond2_fu_245_p2");
    sc_trace(mVcdFile, a_load_reg_470, "a_load_reg_470");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_4, "ap_sig_cseq_ST_st5_fsm_4");
    sc_trace(mVcdFile, ap_sig_148, "ap_sig_148");
    sc_trace(mVcdFile, c_addr_1_reg_476, "c_addr_1_reg_476");
    sc_trace(mVcdFile, prod_fu_273_p2, "prod_fu_273_p2");
    sc_trace(mVcdFile, prod_reg_482, "prod_reg_482");
    sc_trace(mVcdFile, carry_reg_487, "carry_reg_487");
    sc_trace(mVcdFile, tmp_9_fu_309_p3, "tmp_9_fu_309_p3");
    sc_trace(mVcdFile, tmp_9_reg_493, "tmp_9_reg_493");
    sc_trace(mVcdFile, c_addr_2_reg_497, "c_addr_2_reg_497");
    sc_trace(mVcdFile, k_1_fu_341_p2, "k_1_fu_341_p2");
    sc_trace(mVcdFile, k_1_reg_502, "k_1_reg_502");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st8_fsm_7, "ap_sig_cseq_ST_st8_fsm_7");
    sc_trace(mVcdFile, ap_sig_170, "ap_sig_170");
    sc_trace(mVcdFile, c_addr_3_reg_507, "c_addr_3_reg_507");
    sc_trace(mVcdFile, tmp_15_fu_365_p3, "tmp_15_fu_365_p3");
    sc_trace(mVcdFile, tmp_15_reg_512, "tmp_15_reg_512");
    sc_trace(mVcdFile, c_addr_4_reg_516, "c_addr_4_reg_516");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st11_fsm_10, "ap_sig_cseq_ST_st11_fsm_10");
    sc_trace(mVcdFile, ap_sig_188, "ap_sig_188");
    sc_trace(mVcdFile, exitcond_fu_401_p2, "exitcond_fu_401_p2");
    sc_trace(mVcdFile, tmp_2_fu_412_p1, "tmp_2_fu_412_p1");
    sc_trace(mVcdFile, tmp_2_reg_530, "tmp_2_reg_530");
    sc_trace(mVcdFile, i_1_fu_416_p2, "i_1_fu_416_p2");
    sc_trace(mVcdFile, i_1_reg_535, "i_1_reg_535");
    sc_trace(mVcdFile, temp1_V_fu_422_p3, "temp1_V_fu_422_p3");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st12_fsm_11, "ap_sig_cseq_ST_st12_fsm_11");
    sc_trace(mVcdFile, ap_sig_204, "ap_sig_204");
    sc_trace(mVcdFile, c_address0, "c_address0");
    sc_trace(mVcdFile, c_ce0, "c_ce0");
    sc_trace(mVcdFile, c_we0, "c_we0");
    sc_trace(mVcdFile, c_d0, "c_d0");
    sc_trace(mVcdFile, c_address1, "c_address1");
    sc_trace(mVcdFile, c_ce1, "c_ce1");
    sc_trace(mVcdFile, c_we1, "c_we1");
    sc_trace(mVcdFile, c_d1, "c_d1");
    sc_trace(mVcdFile, i_reg_151, "i_reg_151");
    sc_trace(mVcdFile, j_reg_163, "j_reg_163");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st10_fsm_9, "ap_sig_cseq_ST_st10_fsm_9");
    sc_trace(mVcdFile, ap_sig_234, "ap_sig_234");
    sc_trace(mVcdFile, k1_reg_174, "k1_reg_174");
    sc_trace(mVcdFile, p_Repl2_1_reg_184, "p_Repl2_1_reg_184");
    sc_trace(mVcdFile, i1_reg_196, "i1_reg_196");
    sc_trace(mVcdFile, tmp_1_fu_230_p1, "tmp_1_fu_230_p1");
    sc_trace(mVcdFile, tmp_7_fu_263_p1, "tmp_7_fu_263_p1");
    sc_trace(mVcdFile, tmp_5_fu_268_p1, "tmp_5_fu_268_p1");
    sc_trace(mVcdFile, tmp_10_fu_323_p1, "tmp_10_fu_323_p1");
    sc_trace(mVcdFile, tmp_13_fu_347_p1, "tmp_13_fu_347_p1");
    sc_trace(mVcdFile, tmp_17_fu_383_p1, "tmp_17_fu_383_p1");
    sc_trace(mVcdFile, tmp_3_fu_407_p1, "tmp_3_fu_407_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st7_fsm_6, "ap_sig_cseq_ST_st7_fsm_6");
    sc_trace(mVcdFile, ap_sig_261, "ap_sig_261");
    sc_trace(mVcdFile, tmp_11_fu_328_p2, "tmp_11_fu_328_p2");
    sc_trace(mVcdFile, tmp_18_fu_388_p2, "tmp_18_fu_388_p2");
    sc_trace(mVcdFile, tmp_12_fu_335_p2, "tmp_12_fu_335_p2");
    sc_trace(mVcdFile, tmp_19_fu_395_p2, "tmp_19_fu_395_p2");
    sc_trace(mVcdFile, tmp_fu_224_p2, "tmp_fu_224_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_241_p0, "tmp_2_cast_fu_241_p0");
    sc_trace(mVcdFile, tmp_6_fu_257_p2, "tmp_6_fu_257_p2");
    sc_trace(mVcdFile, tmp_s_fu_280_p0, "tmp_s_fu_280_p0");
    sc_trace(mVcdFile, tmp_s_fu_280_p1, "tmp_s_fu_280_p1");
    sc_trace(mVcdFile, tmp_s_fu_280_p2, "tmp_s_fu_280_p2");
    sc_trace(mVcdFile, tmp_10_cast_fu_299_p1, "tmp_10_cast_fu_299_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_295_p1, "tmp_8_cast_fu_295_p1");
    sc_trace(mVcdFile, tmp_8_fu_303_p2, "tmp_8_fu_303_p2");
    sc_trace(mVcdFile, tmp_4_fu_317_p2, "tmp_4_fu_317_p2");
    sc_trace(mVcdFile, tmp_21_cast_fu_356_p1, "tmp_21_cast_fu_356_p1");
    sc_trace(mVcdFile, tmp_20_cast_fu_352_p1, "tmp_20_cast_fu_352_p1");
    sc_trace(mVcdFile, tmp_14_fu_359_p2, "tmp_14_fu_359_p2");
    sc_trace(mVcdFile, k1_cast_fu_373_p1, "k1_cast_fu_373_p1");
    sc_trace(mVcdFile, tmp_16_fu_377_p2, "tmp_16_fu_377_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, tmp_s_fu_280_p10, "tmp_s_fu_280_p10");
#endif

    }
    mHdltvinHandle.open("bigint_math.hdltvin.dat");
    mHdltvoutHandle.open("bigint_math.hdltvout.dat");
}

bigint_math::~bigint_math() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete bigint_math_PERIPH_BUS_s_axi_U;
    delete c_U;
}

void bigint_math::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void bigint_math::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_212_p2.read(), ap_const_lv1_0))) {
        i1_reg_196 = ap_const_lv32_FF;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        i1_reg_196 = i_1_reg_535.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_245_p2.read()))) {
        i_reg_151 = i_2_reg_432.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_151 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        j_reg_163 = j_1_reg_460.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        j_reg_163 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        k1_reg_174 = k_1_reg_502.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        k1_reg_174 = k_fu_235_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond1_fu_212_p2.read(), ap_const_lv1_0))) {
        p_Repl2_1_reg_184 = ap_const_lv2048_lc_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st12_fsm_11.read())) {
        p_Repl2_1_reg_184 = temp1_V_fu_422_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        reg_207 = c_q1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        reg_207 = c_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        a_load_reg_470 = a_q0.read();
        c_addr_1_reg_476 =  (sc_lv<8>) (tmp_5_fu_268_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        b_load_reg_447 = b_q0.read();
        tmp_2_cast_reg_452 = tmp_2_cast_fu_241_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_fu_309_p3.read()))) {
        c_addr_2_reg_497 =  (sc_lv<8>) (tmp_10_fu_323_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        c_addr_3_reg_507 =  (sc_lv<8>) (tmp_13_fu_347_p1.read());
        k_1_reg_502 = k_1_fu_341_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_fu_365_p3.read()))) {
        c_addr_4_reg_516 =  (sc_lv<8>) (tmp_17_fu_383_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        carry_reg_487 = tmp_s_fu_280_p2.read().range(15, 8);
        prod_reg_482 = prod_fu_273_p2.read();
        tmp_9_reg_493 = tmp_8_fu_303_p2.read().range(8, 8);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_401_p2.read()))) {
        i_1_reg_535 = i_1_fu_416_p2.read();
        tmp_2_reg_530 = tmp_2_fu_412_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        i_2_reg_432 = i_2_fu_218_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        j_1_reg_460 = j_1_fu_251_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        tmp_15_reg_512 = tmp_14_fu_359_p2.read().range(8, 8);
    }
}

void bigint_math::thread_a_address0() {
    a_address0 =  (sc_lv<7>) (tmp_7_fu_263_p1.read());
}

void bigint_math::thread_a_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read())) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_401_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_401_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void bigint_math::thread_ap_sig_108() {
    ap_sig_108 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void bigint_math::thread_ap_sig_123() {
    ap_sig_123 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void bigint_math::thread_ap_sig_135() {
    ap_sig_135 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void bigint_math::thread_ap_sig_148() {
    ap_sig_148 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void bigint_math::thread_ap_sig_170() {
    ap_sig_170 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(7, 7));
}

void bigint_math::thread_ap_sig_188() {
    ap_sig_188 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(10, 10));
}

void bigint_math::thread_ap_sig_204() {
    ap_sig_204 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(11, 11));
}

void bigint_math::thread_ap_sig_234() {
    ap_sig_234 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(9, 9));
}

void bigint_math::thread_ap_sig_261() {
    ap_sig_261 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(6, 6));
}

void bigint_math::thread_ap_sig_29() {
    ap_sig_29 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void bigint_math::thread_ap_sig_91() {
    ap_sig_91 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(5, 5));
}

void bigint_math::thread_ap_sig_99() {
    ap_sig_99 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(8, 8));
}

void bigint_math::thread_ap_sig_cseq_ST_st10_fsm_9() {
    if (ap_sig_234.read()) {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st11_fsm_10() {
    if (ap_sig_188.read()) {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st12_fsm_11() {
    if (ap_sig_204.read()) {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_29.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_108.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_123.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_135.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st5_fsm_4() {
    if (ap_sig_148.read()) {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st6_fsm_5() {
    if (ap_sig_91.read()) {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st7_fsm_6() {
    if (ap_sig_261.read()) {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st8_fsm_7() {
    if (ap_sig_170.read()) {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    }
}

void bigint_math::thread_ap_sig_cseq_ST_st9_fsm_8() {
    if (ap_sig_99.read()) {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    }
}

void bigint_math::thread_b_address0() {
    b_address0 =  (sc_lv<7>) (tmp_1_fu_230_p1.read());
}

void bigint_math::thread_b_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        b_ce0 = ap_const_logic_1;
    } else {
        b_ce0 = ap_const_logic_0;
    }
}

void bigint_math::thread_c_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        c_address0 = c_addr_4_reg_516.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        c_address0 = c_addr_2_reg_497.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read())) {
        c_address0 =  (sc_lv<8>) (tmp_3_fu_407_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read())) {
        c_address0 =  (sc_lv<8>) (tmp_10_fu_323_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read())) {
        c_address0 =  (sc_lv<8>) (tmp_5_fu_268_p1.read());
    } else {
        c_address0 = "XXXXXXXX";
    }
}

void bigint_math::thread_c_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        c_address1 = c_addr_3_reg_507.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        c_address1 = c_addr_1_reg_476.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read())) {
        c_address1 =  (sc_lv<8>) (tmp_17_fu_383_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read())) {
        c_address1 =  (sc_lv<8>) (tmp_13_fu_347_p1.read());
    } else {
        c_address1 = "XXXXXXXX";
    }
}

void bigint_math::thread_c_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        c_ce0 = ap_const_logic_1;
    } else {
        c_ce0 = ap_const_logic_0;
    }
}

void bigint_math::thread_c_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st9_fsm_8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st8_fsm_7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        c_ce1 = ap_const_logic_1;
    } else {
        c_ce1 = ap_const_logic_0;
    }
}

void bigint_math::thread_c_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        c_d0 = tmp_18_fu_388_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        c_d0 = tmp_11_fu_328_p2.read();
    } else {
        c_d0 = "XXXXXXXX";
    }
}

void bigint_math::thread_c_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read())) {
        c_d1 = tmp_19_fu_395_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read())) {
        c_d1 = tmp_12_fu_335_p2.read();
    } else {
        c_d1 = "XXXXXXXX";
    }
}

void bigint_math::thread_c_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_9_reg_493.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_512.read())))) {
        c_we0 = ap_const_logic_1;
    } else {
        c_we0 = ap_const_logic_0;
    }
}

void bigint_math::thread_c_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st10_fsm_9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st7_fsm_6.read()))) {
        c_we1 = ap_const_logic_1;
    } else {
        c_we1 = ap_const_logic_0;
    }
}

void bigint_math::thread_exitcond1_fu_212_p2() {
    exitcond1_fu_212_p2 = (!i_reg_151.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_151.read() == ap_const_lv8_80);
}

void bigint_math::thread_exitcond2_fu_245_p2() {
    exitcond2_fu_245_p2 = (!j_reg_163.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_163.read() == ap_const_lv8_80);
}

void bigint_math::thread_exitcond_fu_401_p2() {
    exitcond_fu_401_p2 = (!i1_reg_196.read().is_01() || !ap_const_lv32_80000000.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_196.read() == ap_const_lv32_80000000);
}

void bigint_math::thread_i_1_fu_416_p2() {
    i_1_fu_416_p2 = (!ap_const_lv32_1.is_01() || !i1_reg_196.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(i1_reg_196.read()));
}

void bigint_math::thread_i_2_fu_218_p2() {
    i_2_fu_218_p2 = (!i_reg_151.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_151.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void bigint_math::thread_j_1_fu_251_p2() {
    j_1_fu_251_p2 = (!j_reg_163.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(j_reg_163.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void bigint_math::thread_k1_cast_fu_373_p1() {
    k1_cast_fu_373_p1 = esl_zext<9,8>(k1_reg_174.read());
}

void bigint_math::thread_k_1_fu_341_p2() {
    k_1_fu_341_p2 = (!k1_reg_174.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<8>(): (sc_biguint<8>(k1_reg_174.read()) + sc_bigint<8>(ap_const_lv8_FF));
}

void bigint_math::thread_k_fu_235_p2() {
    k_fu_235_p2 = (i_reg_151.read() ^ ap_const_lv8_FF);
}

void bigint_math::thread_output_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st11_fsm_10.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_401_p2.read()))) {
        output_V_ap_vld = ap_const_logic_1;
    } else {
        output_V_ap_vld = ap_const_logic_0;
    }
}

void bigint_math::thread_prod_fu_273_p2() {
    prod_fu_273_p2 = (!b_load_reg_447.read().is_01() || !a_load_reg_470.read().is_01())? sc_lv<8>(): sc_bigint<8>(b_load_reg_447.read()) * sc_bigint<8>(a_load_reg_470.read());
}

void bigint_math::thread_temp1_V_fu_422_p3() {
    temp1_V_fu_422_p3 = esl_concat<2040,8>(tmp_2_reg_530.read(), c_q0.read());
}

void bigint_math::thread_tmp_10_cast_fu_299_p1() {
    tmp_10_cast_fu_299_p1 = esl_zext<9,8>(prod_fu_273_p2.read());
}

void bigint_math::thread_tmp_10_fu_323_p1() {
    tmp_10_fu_323_p1 = esl_zext<64,8>(tmp_4_fu_317_p2.read());
}

void bigint_math::thread_tmp_11_fu_328_p2() {
    tmp_11_fu_328_p2 = (!ap_const_lv8_1.is_01() || !c_q0.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(c_q0.read()));
}

void bigint_math::thread_tmp_12_fu_335_p2() {
    tmp_12_fu_335_p2 = (!reg_207.read().is_01() || !prod_reg_482.read().is_01())? sc_lv<8>(): (sc_biguint<8>(reg_207.read()) + sc_biguint<8>(prod_reg_482.read()));
}

void bigint_math::thread_tmp_13_fu_347_p1() {
    tmp_13_fu_347_p1 = esl_zext<64,8>(k_1_fu_341_p2.read());
}

void bigint_math::thread_tmp_14_fu_359_p2() {
    tmp_14_fu_359_p2 = (!tmp_21_cast_fu_356_p1.read().is_01() || !tmp_20_cast_fu_352_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_21_cast_fu_356_p1.read()) + sc_biguint<9>(tmp_20_cast_fu_352_p1.read()));
}

void bigint_math::thread_tmp_15_fu_365_p3() {
    tmp_15_fu_365_p3 = tmp_14_fu_359_p2.read().range(8, 8);
}

void bigint_math::thread_tmp_16_fu_377_p2() {
    tmp_16_fu_377_p2 = (!ap_const_lv9_1FE.is_01() || !k1_cast_fu_373_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_1FE) + sc_biguint<9>(k1_cast_fu_373_p1.read()));
}

void bigint_math::thread_tmp_17_fu_383_p1() {
    tmp_17_fu_383_p1 = esl_sext<64,9>(tmp_16_fu_377_p2.read());
}

void bigint_math::thread_tmp_18_fu_388_p2() {
    tmp_18_fu_388_p2 = (!ap_const_lv8_1.is_01() || !c_q1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(c_q1.read()));
}

void bigint_math::thread_tmp_19_fu_395_p2() {
    tmp_19_fu_395_p2 = (!reg_207.read().is_01() || !carry_reg_487.read().is_01())? sc_lv<8>(): (sc_biguint<8>(reg_207.read()) + sc_biguint<8>(carry_reg_487.read()));
}

void bigint_math::thread_tmp_1_fu_230_p1() {
    tmp_1_fu_230_p1 = esl_zext<64,8>(tmp_fu_224_p2.read());
}

void bigint_math::thread_tmp_20_cast_fu_352_p1() {
    tmp_20_cast_fu_352_p1 = esl_zext<9,8>(c_q1.read());
}

void bigint_math::thread_tmp_21_cast_fu_356_p1() {
    tmp_21_cast_fu_356_p1 = esl_zext<9,8>(carry_reg_487.read());
}

void bigint_math::thread_tmp_2_cast_fu_241_p0() {
    tmp_2_cast_fu_241_p0 = b_q0.read();
}

void bigint_math::thread_tmp_2_cast_fu_241_p1() {
    tmp_2_cast_fu_241_p1 = esl_zext<16,8>(tmp_2_cast_fu_241_p0.read());
}

void bigint_math::thread_tmp_2_fu_412_p1() {
    tmp_2_fu_412_p1 = p_Repl2_1_reg_184.read().range(2040-1, 0);
}

void bigint_math::thread_tmp_3_fu_407_p1() {
    tmp_3_fu_407_p1 = esl_zext<64,32>(i1_reg_196.read());
}

void bigint_math::thread_tmp_4_fu_317_p2() {
    tmp_4_fu_317_p2 = (!ap_const_lv8_FF.is_01() || !k1_reg_174.read().is_01())? sc_lv<8>(): (sc_bigint<8>(ap_const_lv8_FF) + sc_biguint<8>(k1_reg_174.read()));
}

void bigint_math::thread_tmp_5_fu_268_p1() {
    tmp_5_fu_268_p1 = esl_zext<64,8>(k1_reg_174.read());
}

void bigint_math::thread_tmp_6_fu_257_p2() {
    tmp_6_fu_257_p2 = (!ap_const_lv8_7F.is_01() || !j_reg_163.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(j_reg_163.read()));
}

void bigint_math::thread_tmp_7_fu_263_p1() {
    tmp_7_fu_263_p1 = esl_zext<64,8>(tmp_6_fu_257_p2.read());
}

void bigint_math::thread_tmp_8_cast_fu_295_p1() {
    tmp_8_cast_fu_295_p1 = esl_zext<9,8>(c_q0.read());
}

void bigint_math::thread_tmp_8_fu_303_p2() {
    tmp_8_fu_303_p2 = (!tmp_10_cast_fu_299_p1.read().is_01() || !tmp_8_cast_fu_295_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_10_cast_fu_299_p1.read()) + sc_biguint<9>(tmp_8_cast_fu_295_p1.read()));
}

void bigint_math::thread_tmp_9_fu_309_p3() {
    tmp_9_fu_309_p3 = tmp_8_fu_303_p2.read().range(8, 8);
}

void bigint_math::thread_tmp_fu_224_p2() {
    tmp_fu_224_p2 = (!ap_const_lv8_7F.is_01() || !i_reg_151.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(i_reg_151.read()));
}

void bigint_math::thread_tmp_s_fu_280_p0() {
    tmp_s_fu_280_p0 =  (sc_lv<8>) (tmp_2_cast_reg_452.read());
}

void bigint_math::thread_tmp_s_fu_280_p1() {
    tmp_s_fu_280_p1 =  (sc_lv<8>) (tmp_s_fu_280_p10.read());
}

void bigint_math::thread_tmp_s_fu_280_p10() {
    tmp_s_fu_280_p10 = esl_zext<16,8>(a_load_reg_470.read());
}

void bigint_math::thread_tmp_s_fu_280_p2() {
    tmp_s_fu_280_p2 = (!tmp_s_fu_280_p0.read().is_01() || !tmp_s_fu_280_p1.read().is_01())? sc_lv<16>(): sc_biguint<8>(tmp_s_fu_280_p0.read()) * sc_biguint<8>(tmp_s_fu_280_p1.read());
}

void bigint_math::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond1_fu_212_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st11_fsm_10;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_245_p2.read())) {
                ap_NS_fsm = ap_ST_st5_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 1024 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_401_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st12_fsm_11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

void bigint_math::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_AWVALID\" :  \"" << s_axi_PERIPH_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_PERIPH_BUS_AWREADY\" :  \"" << s_axi_PERIPH_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_AWADDR\" :  \"" << s_axi_PERIPH_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_WVALID\" :  \"" << s_axi_PERIPH_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_PERIPH_BUS_WREADY\" :  \"" << s_axi_PERIPH_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_WDATA\" :  \"" << s_axi_PERIPH_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_WSTRB\" :  \"" << s_axi_PERIPH_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_ARVALID\" :  \"" << s_axi_PERIPH_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_PERIPH_BUS_ARREADY\" :  \"" << s_axi_PERIPH_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_ARADDR\" :  \"" << s_axi_PERIPH_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_PERIPH_BUS_RVALID\" :  \"" << s_axi_PERIPH_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_RREADY\" :  \"" << s_axi_PERIPH_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_PERIPH_BUS_RDATA\" :  \"" << s_axi_PERIPH_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_PERIPH_BUS_RRESP\" :  \"" << s_axi_PERIPH_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_PERIPH_BUS_BVALID\" :  \"" << s_axi_PERIPH_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_PERIPH_BUS_BREADY\" :  \"" << s_axi_PERIPH_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_PERIPH_BUS_BRESP\" :  \"" << s_axi_PERIPH_BUS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

