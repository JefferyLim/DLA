-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bigint_math_bigint_mul_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of bigint_math_bigint_mul_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_3FE : STD_LOGIC_VECTOR (9 downto 0) := "1111111110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_38 : BOOLEAN;
    signal sum_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_237 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_62 : BOOLEAN;
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_69 : BOOLEAN;
    signal i_6_fu_247_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_6_reg_452 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_79 : BOOLEAN;
    signal tmp_i_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_reg_457 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_7_fu_264_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_7_reg_470 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_96 : BOOLEAN;
    signal tmp_i3_fu_270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i3_reg_475 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i2_fu_258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_281_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_4_reg_488 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_112 : BOOLEAN;
    signal k_fu_287_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_reg_493 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1_fu_275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tempB_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_load_reg_503 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_128 : BOOLEAN;
    signal tmp_cast_fu_298_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_cast_reg_508 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_5_fu_308_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_5_reg_516 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_139 : BOOLEAN;
    signal exitcond_fu_302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal prod_fu_325_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal prod_reg_526 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_153 : BOOLEAN;
    signal carry_fu_339_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_reg_532 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_538 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_addr_reg_542 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_379_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_reg_547 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_addr_1_reg_551 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_398_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_reg_556 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_177 : BOOLEAN;
    signal sum_addr_2_reg_561 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_186 : BOOLEAN;
    signal tmp_8_fu_421_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_566 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_addr_3_reg_570 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_444_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_reg_575 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_202 : BOOLEAN;
    signal grp_fu_231_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_211 : BOOLEAN;
    signal sum_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_ce0 : STD_LOGIC;
    signal sum_we0 : STD_LOGIC;
    signal sum_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_ce0 : STD_LOGIC;
    signal tempA_we0 : STD_LOGIC;
    signal tempA_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_ce0 : STD_LOGIC;
    signal tempB_we0 : STD_LOGIC;
    signal tempB_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_204_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_204_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_204_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_204_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_204_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_204_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_204_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_204_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_204_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_204_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_211_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_211_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_211_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_211_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_211_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_211_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_211_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_211_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_217_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_217_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_150 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_277 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_289 : BOOLEAN;
    signal i_i1_reg_161 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_298 : BOOLEAN;
    signal i_reg_172 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_309 : BOOLEAN;
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_317 : BOOLEAN;
    signal j_reg_183 : STD_LOGIC_VECTOR (8 downto 0);
    signal k5_reg_194 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_grp_bigint_math_bigint_add_1_fu_204_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_334 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_zero_fu_211_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_349 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start : STD_LOGIC := '0';
    signal tmp_fu_293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_23_fu_320_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_30_fu_393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_fu_403_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_37_fu_439_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_377 : BOOLEAN;
    signal tmp_cast_fu_298_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_314_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal prod_fu_325_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_cast_fu_330_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_334_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_334_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_334_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_349_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_cast_fu_366_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_38_cast_fu_370_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_28_fu_373_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_fu_387_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_49_cast_fu_408_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_50_cast_fu_412_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_35_fu_415_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal k5_cast_fu_429_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_36_fu_433_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_24_fu_334_p10 : STD_LOGIC_VECTOR (15 downto 0);

    component bigint_math_bigint_add_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_zero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_we0 : OUT STD_LOGIC;
        in_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add_tempA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    sum_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_address0,
        ce0 => sum_ce0,
        we0 => sum_we0,
        d0 => sum_d0,
        q0 => sum_q0);

    tempA_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempA_address0,
        ce0 => tempA_ce0,
        we0 => tempA_we0,
        d0 => tempA_d0,
        q0 => tempA_q0);

    tempB_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempB_address0,
        ce0 => tempB_ce0,
        we0 => tempB_we0,
        d0 => tempB_d0,
        q0 => tempB_q0);

    grp_bigint_math_bigint_add_1_fu_204 : component bigint_math_bigint_add_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_add_1_fu_204_ap_start,
        ap_done => grp_bigint_math_bigint_add_1_fu_204_ap_done,
        ap_idle => grp_bigint_math_bigint_add_1_fu_204_ap_idle,
        ap_ready => grp_bigint_math_bigint_add_1_fu_204_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_add_1_fu_204_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_add_1_fu_204_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_add_1_fu_204_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_add_1_fu_204_out_r_d0,
        out_r_q0 => out_r_q0,
        b_address0 => grp_bigint_math_bigint_add_1_fu_204_b_address0,
        b_ce0 => grp_bigint_math_bigint_add_1_fu_204_b_ce0,
        b_q0 => sum_q0);

    grp_bigint_math_bigint_zero_fu_211 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_211_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_211_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_211_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_211_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_211_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_211_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_211_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_211_in_r_d0);

    grp_bigint_math_bigint_zero_fu_217 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_217_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_217_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_217_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_217_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_217_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_217_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_217_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_217_in_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_add_1_fu_204_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_add_1_fu_204_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = exitcond_fu_302_p2)))) then 
                    ap_reg_grp_bigint_math_bigint_add_1_fu_204_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_add_1_fu_204_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_add_1_fu_204_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_211_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_211_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond_i2_fu_258_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_211_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_211_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_211_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond_i2_fu_258_p2))))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_217_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i1_reg_161_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((exitcond_i_fu_241_p2 = ap_const_lv1_0)))) then 
                i_i1_reg_161 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                i_i1_reg_161 <= i_7_reg_470;
            end if; 
        end if;
    end process;

    i_i_reg_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                i_i_reg_150 <= i_6_reg_452;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_211_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done))))) then 
                i_i_reg_150 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_211_ap_done)))) then 
                i_reg_172 <= i_4_reg_488;
            elsif ((not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_211_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done))) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
                i_reg_172 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                j_reg_183 <= j_5_reg_516;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                j_reg_183 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    k5_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                k5_reg_194 <= grp_fu_231_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                k5_reg_194 <= k_reg_493;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                carry_reg_532 <= tmp_24_fu_334_p2(15 downto 8);
                prod_reg_526 <= prod_fu_325_p2;
                tmp_26_reg_538 <= tmp_26_fu_355_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                i_4_reg_488 <= i_4_fu_281_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_6_reg_452 <= i_6_fu_247_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                i_7_reg_470 <= i_7_fu_264_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                j_5_reg_516 <= j_5_fu_308_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond1_fu_275_p2))) then
                k_reg_493 <= k_fu_287_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then
                reg_237 <= sum_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_7_fu_379_p3)))) then
                sum_addr_1_reg_551 <= tmp_30_fu_393_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                sum_addr_2_reg_561 <= tmp_34_fu_403_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and not((ap_const_lv1_0 = tmp_8_fu_421_p3)))) then
                sum_addr_3_reg_570 <= tmp_37_fu_439_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_26_fu_355_p2))) then
                sum_addr_reg_542 <= tmp_27_fu_361_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                tempB_load_reg_503 <= tempB_q0;
                    tmp_cast_reg_508(7 downto 0) <= tmp_cast_fu_298_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                tmp_32_reg_556 <= tmp_32_fu_398_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                tmp_39_reg_575 <= tmp_39_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                tmp_7_reg_547 <= tmp_28_fu_373_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                tmp_8_reg_566 <= tmp_35_fu_415_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond_i2_fu_258_p2))) then
                    tmp_i3_reg_475(8 downto 0) <= tmp_i3_fu_270_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond_i_fu_241_p2 = ap_const_lv1_0))) then
                    tmp_i_reg_457(8 downto 0) <= tmp_i_fu_253_p1(8 downto 0);
            end if;
        end if;
    end process;
    tmp_i_reg_457(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_i3_reg_475(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_cast_reg_508(15 downto 8) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_i_fu_241_p2, exitcond_i2_fu_258_p2, exitcond1_fu_275_p2, exitcond_fu_302_p2, tmp_26_fu_355_p2, grp_bigint_math_bigint_add_1_fu_204_ap_done, grp_bigint_math_bigint_zero_fu_211_ap_done, grp_bigint_math_bigint_zero_fu_217_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_211_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((exitcond_i_fu_241_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond_i2_fu_258_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st7_fsm_6 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_211_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_275_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_lv1_0 = exitcond_fu_302_p2))) then
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_lv1_0 = tmp_26_fu_355_p2))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st19_fsm_18 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_add_1_fu_204_ap_done))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                end if;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_211_ap_done))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    a_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, tmp_i_fu_253_p1, ap_sig_cseq_ST_st5_fsm_4, tmp_i3_fu_270_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            a_address0 <= tmp_i3_fu_270_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            a_address0 <= tmp_i_fu_253_p1(8 - 1 downto 0);
        else 
            a_address0 <= "XXXXXXXX";
        end if; 
    end process;


    a_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st8_fsm_7, exitcond1_fu_275_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond1_fu_275_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, exitcond1_fu_275_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond1_fu_275_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_112_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_112 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_128_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_128 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_139_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_139 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_153_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_153 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_177_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_177 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_186_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_186 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_202_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_202 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_211_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_211 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_277_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_277 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_289_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_289 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_298_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_298 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_309_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_309 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_317_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_317 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_334_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_334 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_349_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_349 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_377_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_377 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_38_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_38 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_62_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_62 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_69_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_69 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_79_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_79 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_96_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_96 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_139)
    begin
        if (ap_sig_139) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_153)
    begin
        if (ap_sig_153) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_62)
    begin
        if (ap_sig_62) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_177)
    begin
        if (ap_sig_177) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_377)
    begin
        if (ap_sig_377) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_186)
    begin
        if (ap_sig_186) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_69)
    begin
        if (ap_sig_69) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_202)
    begin
        if (ap_sig_202) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_211)
    begin
        if (ap_sig_211) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_334)
    begin
        if (ap_sig_334) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_38)
    begin
        if (ap_sig_38) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_349)
    begin
        if (ap_sig_349) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_317)
    begin
        if (ap_sig_317) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_277)
    begin
        if (ap_sig_277) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_79)
    begin
        if (ap_sig_79) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_289)
    begin
        if (ap_sig_289) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_96)
    begin
        if (ap_sig_96) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_298)
    begin
        if (ap_sig_298) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_309)
    begin
        if (ap_sig_309) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_112)
    begin
        if (ap_sig_112) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_128)
    begin
        if (ap_sig_128) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    carry_fu_339_p4 <= tmp_24_fu_334_p2(15 downto 8);
    exitcond1_fu_275_p2 <= "1" when (i_reg_172 = ap_const_lv9_100) else "0";
    exitcond_fu_302_p2 <= "1" when (j_reg_183 = ap_const_lv9_100) else "0";
    exitcond_i2_fu_258_p2 <= "1" when (i_i1_reg_161 = ap_const_lv9_100) else "0";
    exitcond_i_fu_241_p2 <= "1" when (i_i_reg_150 = ap_const_lv9_100) else "0";
    grp_bigint_math_bigint_add_1_fu_204_ap_start <= ap_reg_grp_bigint_math_bigint_add_1_fu_204_ap_start;
    grp_bigint_math_bigint_zero_fu_211_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_211_ap_start;
    grp_bigint_math_bigint_zero_fu_217_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start;
    grp_fu_224_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(sum_q0));
    grp_fu_231_p2 <= std_logic_vector(unsigned(k5_reg_194) + unsigned(ap_const_lv9_1FF));
    i_4_fu_281_p2 <= std_logic_vector(unsigned(i_reg_172) + unsigned(ap_const_lv9_1));
    i_6_fu_247_p2 <= std_logic_vector(unsigned(i_i_reg_150) + unsigned(ap_const_lv9_1));
    i_7_fu_264_p2 <= std_logic_vector(unsigned(i_i1_reg_161) + unsigned(ap_const_lv9_1));
    j_5_fu_308_p2 <= std_logic_vector(unsigned(j_reg_183) + unsigned(ap_const_lv9_1));
        k5_cast_fu_429_p1 <= std_logic_vector(resize(signed(k5_reg_194),10));

    k_fu_287_p2 <= std_logic_vector(unsigned(ap_const_lv9_FF) - unsigned(i_reg_172));

    out_r_address0_assign_proc : process(grp_bigint_math_bigint_add_1_fu_204_out_r_address0, grp_bigint_math_bigint_zero_fu_211_in_r_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_address0 <= grp_bigint_math_bigint_zero_fu_211_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            out_r_address0 <= grp_bigint_math_bigint_add_1_fu_204_out_r_address0;
        else 
            out_r_address0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(grp_bigint_math_bigint_add_1_fu_204_out_r_ce0, grp_bigint_math_bigint_zero_fu_211_in_r_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_ce0 <= grp_bigint_math_bigint_zero_fu_211_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            out_r_ce0 <= grp_bigint_math_bigint_add_1_fu_204_out_r_ce0;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(grp_bigint_math_bigint_add_1_fu_204_out_r_d0, grp_bigint_math_bigint_zero_fu_211_in_r_d0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_d0 <= grp_bigint_math_bigint_zero_fu_211_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            out_r_d0 <= grp_bigint_math_bigint_add_1_fu_204_out_r_d0;
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(grp_bigint_math_bigint_add_1_fu_204_out_r_we0, grp_bigint_math_bigint_zero_fu_211_in_r_we0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_we0 <= grp_bigint_math_bigint_zero_fu_211_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            out_r_we0 <= grp_bigint_math_bigint_add_1_fu_204_out_r_we0;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    prod_fu_325_p1 <= tempA_q0;
    prod_fu_325_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tempB_load_reg_503) * signed(prod_fu_325_p1))), 8));

    sum_address0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st11_fsm_10, sum_addr_reg_542, sum_addr_1_reg_551, ap_sig_cseq_ST_st13_fsm_12, sum_addr_2_reg_561, ap_sig_cseq_ST_st15_fsm_14, sum_addr_3_reg_570, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, grp_bigint_math_bigint_add_1_fu_204_b_address0, grp_bigint_math_bigint_zero_fu_211_in_r_address0, grp_bigint_math_bigint_zero_fu_217_in_r_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st19_fsm_18, tmp_27_fu_361_p1, tmp_30_fu_393_p1, tmp_34_fu_403_p1, tmp_37_fu_439_p1, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            sum_address0 <= sum_addr_2_reg_561;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            sum_address0 <= sum_addr_3_reg_570;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            sum_address0 <= sum_addr_reg_542;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            sum_address0 <= sum_addr_1_reg_551;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            sum_address0 <= tmp_37_fu_439_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            sum_address0 <= tmp_34_fu_403_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            sum_address0 <= tmp_30_fu_393_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            sum_address0 <= tmp_27_fu_361_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            sum_address0 <= grp_bigint_math_bigint_zero_fu_217_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sum_address0 <= grp_bigint_math_bigint_zero_fu_211_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            sum_address0 <= grp_bigint_math_bigint_add_1_fu_204_b_address0;
        else 
            sum_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sum_ce0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, grp_bigint_math_bigint_add_1_fu_204_b_ce0, grp_bigint_math_bigint_zero_fu_211_in_r_ce0, grp_bigint_math_bigint_zero_fu_217_in_r_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
            sum_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            sum_ce0 <= grp_bigint_math_bigint_zero_fu_217_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sum_ce0 <= grp_bigint_math_bigint_zero_fu_211_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            sum_ce0 <= grp_bigint_math_bigint_add_1_fu_204_b_ce0;
        else 
            sum_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_d0_assign_proc : process(tmp_32_reg_556, ap_sig_cseq_ST_st13_fsm_12, tmp_39_reg_575, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, grp_bigint_math_bigint_zero_fu_211_in_r_d0, grp_bigint_math_bigint_zero_fu_217_in_r_d0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st21_fsm_20, grp_fu_224_p2, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            sum_d0 <= tmp_39_reg_575;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            sum_d0 <= tmp_32_reg_556;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            sum_d0 <= grp_fu_224_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            sum_d0 <= grp_bigint_math_bigint_zero_fu_217_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sum_d0 <= grp_bigint_math_bigint_zero_fu_211_in_r_d0;
        else 
            sum_d0 <= "XXXXXXXX";
        end if; 
    end process;


    sum_we0_assign_proc : process(tmp_26_reg_538, tmp_7_reg_547, ap_sig_cseq_ST_st13_fsm_12, tmp_8_reg_566, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, grp_bigint_math_bigint_zero_fu_211_in_r_we0, grp_bigint_math_bigint_zero_fu_217_in_r_we0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = tmp_7_reg_547))) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = tmp_8_reg_566))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = tmp_26_reg_538)))) then 
            sum_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            sum_we0 <= grp_bigint_math_bigint_zero_fu_217_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sum_we0 <= grp_bigint_math_bigint_zero_fu_211_in_r_we0;
        else 
            sum_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempA_address0_assign_proc : process(tmp_i_reg_457, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_zero_fu_211_in_r_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, tmp_23_fu_320_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_address0 <= tmp_i_reg_457(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            tempA_address0 <= tmp_23_fu_320_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_address0 <= grp_bigint_math_bigint_zero_fu_211_in_r_address0;
        else 
            tempA_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempA_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_zero_fu_211_in_r_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            tempA_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_ce0 <= grp_bigint_math_bigint_zero_fu_211_in_r_ce0;
        else 
            tempA_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempA_d0_assign_proc : process(a_q0, grp_bigint_math_bigint_zero_fu_211_in_r_d0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_d0 <= a_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_d0 <= grp_bigint_math_bigint_zero_fu_211_in_r_d0;
        else 
            tempA_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempA_we0_assign_proc : process(grp_bigint_math_bigint_zero_fu_211_in_r_we0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            tempA_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_we0 <= grp_bigint_math_bigint_zero_fu_211_in_r_we0;
        else 
            tempA_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_address0_assign_proc : process(tmp_i3_reg_475, ap_sig_cseq_ST_st8_fsm_7, grp_bigint_math_bigint_zero_fu_217_in_r_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, tmp_fu_293_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            tempB_address0 <= tmp_i3_reg_475(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            tempB_address0 <= tmp_fu_293_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_address0 <= grp_bigint_math_bigint_zero_fu_217_in_r_address0;
        else 
            tempB_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, grp_bigint_math_bigint_zero_fu_217_in_r_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            tempB_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_ce0 <= grp_bigint_math_bigint_zero_fu_217_in_r_ce0;
        else 
            tempB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_d0_assign_proc : process(a_q0, grp_bigint_math_bigint_zero_fu_217_in_r_d0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            tempB_d0 <= a_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_d0 <= grp_bigint_math_bigint_zero_fu_217_in_r_d0;
        else 
            tempB_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_we0_assign_proc : process(grp_bigint_math_bigint_zero_fu_217_in_r_we0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            tempB_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_we0 <= grp_bigint_math_bigint_zero_fu_217_in_r_we0;
        else 
            tempB_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_23_fu_320_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_314_p2),64));
    tmp_24_fu_334_p0 <= tmp_cast_reg_508(8 - 1 downto 0);
    tmp_24_fu_334_p1 <= tmp_24_fu_334_p10(8 - 1 downto 0);
    tmp_24_fu_334_p10 <= std_logic_vector(resize(unsigned(tmp_31_cast_fu_330_p0),16));
    tmp_24_fu_334_p2 <= std_logic_vector(resize(unsigned(tmp_24_fu_334_p0) * unsigned(tmp_24_fu_334_p1), 16));
    tmp_25_fu_349_p2 <= (carry_fu_339_p4 or prod_fu_325_p2);
    tmp_26_fu_355_p2 <= "1" when (tmp_25_fu_349_p2 = ap_const_lv8_0) else "0";
        tmp_27_fu_361_p1 <= std_logic_vector(resize(signed(k5_reg_194),64));

    tmp_28_fu_373_p2 <= std_logic_vector(unsigned(tmp_37_cast_fu_366_p1) + unsigned(tmp_38_cast_fu_370_p1));
    tmp_29_fu_387_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(k5_reg_194));
        tmp_30_fu_393_p1 <= std_logic_vector(resize(signed(tmp_29_fu_387_p2),64));

    tmp_31_cast_fu_330_p0 <= tempA_q0;
    tmp_32_fu_398_p2 <= std_logic_vector(unsigned(reg_237) + unsigned(prod_reg_526));
        tmp_34_fu_403_p1 <= std_logic_vector(resize(signed(grp_fu_231_p2),64));

    tmp_35_fu_415_p2 <= std_logic_vector(unsigned(tmp_49_cast_fu_408_p1) + unsigned(tmp_50_cast_fu_412_p1));
    tmp_36_fu_433_p2 <= std_logic_vector(signed(ap_const_lv10_3FE) + signed(k5_cast_fu_429_p1));
    tmp_37_cast_fu_366_p1 <= std_logic_vector(resize(unsigned(sum_q0),9));
        tmp_37_fu_439_p1 <= std_logic_vector(resize(signed(tmp_36_fu_433_p2),64));

    tmp_38_cast_fu_370_p1 <= std_logic_vector(resize(unsigned(prod_reg_526),9));
    tmp_39_fu_444_p2 <= std_logic_vector(unsigned(reg_237) + unsigned(carry_reg_532));
    tmp_49_cast_fu_408_p1 <= std_logic_vector(resize(unsigned(sum_q0),9));
    tmp_50_cast_fu_412_p1 <= std_logic_vector(resize(unsigned(carry_reg_532),9));
    tmp_7_fu_379_p3 <= tmp_28_fu_373_p2(8 downto 8);
    tmp_8_fu_421_p3 <= tmp_35_fu_415_p2(8 downto 8);
    tmp_cast_fu_298_p0 <= tempB_q0;
    tmp_cast_fu_298_p1 <= std_logic_vector(resize(unsigned(tmp_cast_fu_298_p0),16));
    tmp_fu_293_p1 <= std_logic_vector(resize(unsigned(k_fu_287_p2),64));
    tmp_i3_fu_270_p1 <= std_logic_vector(resize(unsigned(i_i1_reg_161),64));
    tmp_i_fu_253_p1 <= std_logic_vector(resize(unsigned(i_i_reg_150),64));
    tmp_s_fu_314_p2 <= std_logic_vector(unsigned(ap_const_lv9_FF) - unsigned(j_reg_183));
end behav;
