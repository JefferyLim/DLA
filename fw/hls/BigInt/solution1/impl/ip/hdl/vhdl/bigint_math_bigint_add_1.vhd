-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bigint_math_bigint_add_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of bigint_math_bigint_add_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (13 downto 0) := "00000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (13 downto 0) := "00000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (13 downto 0) := "00000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (13 downto 0) := "00001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (13 downto 0) := "00010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (13 downto 0) := "00100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (13 downto 0) := "01000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (13 downto 0) := "10000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_1FE : STD_LOGIC_VECTOR (8 downto 0) := "111111110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_31 : BOOLEAN;
    signal tempA9_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA9_ce0 : STD_LOGIC;
    signal tempA9_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_167 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_56 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_63 : BOOLEAN;
    signal i_12_fu_177_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_73 : BOOLEAN;
    signal i_13_fu_189_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_13_reg_352 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_82 : BOOLEAN;
    signal tmp_i3_fu_195_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i3_reg_357 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i2_fu_183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_99 : BOOLEAN;
    signal tmp_fu_204_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_addr_reg_380 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_fu_223_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_reg_385 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_243_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_fu_251_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_reg_395 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_38_fu_269_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_400 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_addr_1_reg_404 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_288_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_reg_409 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_128 : BOOLEAN;
    signal i_8_fu_293_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_8_reg_414 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_137 : BOOLEAN;
    signal b_addr_2_reg_419 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_fu_317_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_424 : STD_LOGIC_VECTOR (0 downto 0);
    signal b_addr_3_reg_428 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_336_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_reg_433 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_155 : BOOLEAN;
    signal tempB_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_ce0 : STD_LOGIC;
    signal tempB_we0 : STD_LOGIC;
    signal tempB_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_153_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_153_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_153_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_153_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_153_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_153_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_153_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_153_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_119 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_184 : BOOLEAN;
    signal exitcond_i_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_i1_reg_130 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_199 : BOOLEAN;
    signal i_reg_141 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_211 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_219 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start : STD_LOGIC := '0';
    signal tmp_s_fu_212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_fu_283_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_56_fu_299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_59_fu_331_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_160_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_245 : BOOLEAN;
    signal i_cast_fu_200_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempA_load_cast_fu_219_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_57_cast_fu_233_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_56_cast_fu_229_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_50_fu_237_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_60_cast_fu_255_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_61_cast_fu_259_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_fu_263_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_52_fu_277_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_72_cast_fu_308_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_71_cast_fu_304_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_57_fu_311_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_58_fu_325_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (13 downto 0);

    component bigint_math_bigint_zero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_we0 : OUT STD_LOGIC;
        in_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add_1_tempA9 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component bigint_math_bigint_add_1_tempB IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    tempA9_U : component bigint_math_bigint_add_1_tempA9
    generic map (
        DataWidth => 1,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempA9_address0,
        ce0 => tempA9_ce0,
        q0 => tempA9_q0);

    tempB_U : component bigint_math_bigint_add_1_tempB
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempB_address0,
        ce0 => tempB_ce0,
        we0 => tempB_we0,
        d0 => tempB_d0,
        q0 => tempB_q0);

    grp_bigint_math_bigint_zero_fu_153 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_153_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_153_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_153_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_153_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_153_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_153_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_153_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_153_in_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((exitcond_i2_fu_183_p2 = ap_const_lv1_0))))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_153_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i1_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = exitcond_i_fu_171_p2)))) then 
                i_i1_reg_130 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                i_i1_reg_130 <= i_13_reg_352;
            end if; 
        end if;
    end process;

    i_i_reg_119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = exitcond_i_fu_171_p2))) then 
                i_i_reg_119 <= i_12_fu_177_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_153_ap_done)))) then 
                i_i_reg_119 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_reg_141_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
                i_reg_141 <= i_8_reg_414;
            elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_153_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
                i_reg_141 <= ap_const_lv9_FF;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = tmp_38_fu_269_p3)))) then
                b_addr_1_reg_404 <= tmp_53_fu_283_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                b_addr_2_reg_419 <= tmp_56_fu_299_p1(8 - 1 downto 0);
                i_8_reg_414 <= i_8_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_39_fu_317_p3)))) then
                b_addr_3_reg_428 <= tmp_59_fu_331_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and (ap_const_lv1_0 = tmp_fu_204_p3))) then
                b_addr_reg_380 <= tmp_s_fu_212_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                    carry_reg_395(0) <= carry_fu_251_p1(0);
                sum_reg_385 <= sum_fu_223_p2;
                tmp_37_reg_390 <= tmp_50_fu_237_p2(8 downto 8);
                tmp_38_reg_400 <= tmp_51_fu_263_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                i_13_reg_352 <= i_13_fu_189_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then
                reg_167 <= out_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                tmp_39_reg_424 <= tmp_57_fu_311_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                tmp_55_reg_409 <= tmp_55_fu_288_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                tmp_61_reg_433 <= tmp_61_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond_i2_fu_183_p2 = ap_const_lv1_0))) then
                    tmp_i3_reg_357(8 downto 0) <= tmp_i3_fu_195_p1(8 downto 0);
            end if;
        end if;
    end process;
    tmp_i3_reg_357(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    carry_reg_395(7 downto 1) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_i2_fu_183_p2, tmp_fu_204_p3, grp_bigint_math_bigint_zero_fu_153_ap_done, exitcond_i_fu_171_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_153_ap_done))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_lv1_0 = exitcond_i_fu_171_p2))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((exitcond_i2_fu_183_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_153_ap_done))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = tmp_fu_204_p3))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st8_fsm_7 => 
                ap_NS_fsm <= ap_ST_st9_fsm_8;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                ap_NS_fsm <= ap_ST_st11_fsm_10;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st7_fsm_6;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st7_fsm_6, tmp_fu_204_p3)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_fu_204_p3))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, tmp_fu_204_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_fu_204_p3)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_128_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_128 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_137_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_137 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_155_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_155 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_184_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_184 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_199_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_199 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_211_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_211 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_219_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_219 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_245_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_245 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_31_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_31 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_56_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_56 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_63_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_63 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_73_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_73 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_82_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_82 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_99_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_99 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_245)
    begin
        if (ap_sig_245) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_137)
    begin
        if (ap_sig_137) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_63)
    begin
        if (ap_sig_63) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_155)
    begin
        if (ap_sig_155) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_219)
    begin
        if (ap_sig_219) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_31)
    begin
        if (ap_sig_31) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_184)
    begin
        if (ap_sig_184) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_73)
    begin
        if (ap_sig_73) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_82)
    begin
        if (ap_sig_82) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_199)
    begin
        if (ap_sig_199) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_211)
    begin
        if (ap_sig_211) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_99)
    begin
        if (ap_sig_99) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_56)
    begin
        if (ap_sig_56) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_128)
    begin
        if (ap_sig_128) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    carry_fu_251_p1 <= std_logic_vector(resize(unsigned(tmp_37_fu_243_p3),8));
    exitcond_i2_fu_183_p2 <= "1" when (i_i1_reg_130 = ap_const_lv9_100) else "0";
    exitcond_i_fu_171_p2 <= "1" when (i_i_reg_119 = ap_const_lv9_100) else "0";
    grp_bigint_math_bigint_zero_fu_153_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_153_ap_start;
    grp_fu_160_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(out_r_q0));
    i_12_fu_177_p2 <= std_logic_vector(unsigned(i_i_reg_119) + unsigned(ap_const_lv9_1));
    i_13_fu_189_p2 <= std_logic_vector(unsigned(i_i1_reg_130) + unsigned(ap_const_lv9_1));
    i_8_fu_293_p2 <= std_logic_vector(unsigned(i_reg_141) + unsigned(ap_const_lv9_1FF));
        i_cast_fu_200_p1 <= std_logic_vector(resize(signed(i_reg_141),32));


    out_r_address0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3, tmp_i3_fu_195_p1, exitcond_i2_fu_183_p2, ap_sig_cseq_ST_st7_fsm_6, b_addr_reg_380, b_addr_1_reg_404, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, b_addr_2_reg_419, b_addr_3_reg_428, ap_sig_cseq_ST_st13_fsm_12, grp_bigint_math_bigint_zero_fu_153_in_r_address0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13, tmp_s_fu_212_p1, tmp_53_fu_283_p1, tmp_56_fu_299_p1, tmp_59_fu_331_p1, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            out_r_address0 <= b_addr_2_reg_419;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            out_r_address0 <= b_addr_3_reg_428;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out_r_address0 <= b_addr_reg_380;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            out_r_address0 <= b_addr_1_reg_404;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            out_r_address0 <= tmp_59_fu_331_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            out_r_address0 <= tmp_56_fu_299_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            out_r_address0 <= tmp_53_fu_283_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_address0 <= tmp_s_fu_212_p1(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond_i2_fu_183_p2 = ap_const_lv1_0))) then 
            out_r_address0 <= tmp_i3_fu_195_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_r_address0 <= grp_bigint_math_bigint_zero_fu_153_in_r_address0;
        else 
            out_r_address0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st4_fsm_3, exitcond_i2_fu_183_p2, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st13_fsm_12, grp_bigint_math_bigint_zero_fu_153_in_r_ce0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond_i2_fu_183_p2 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            out_r_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_r_ce0 <= grp_bigint_math_bigint_zero_fu_153_in_r_ce0;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(tmp_55_reg_409, ap_sig_cseq_ST_st9_fsm_8, tmp_61_reg_433, ap_sig_cseq_ST_st13_fsm_12, grp_bigint_math_bigint_zero_fu_153_in_r_d0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13, grp_fu_160_p2, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            out_r_d0 <= tmp_61_reg_433;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out_r_d0 <= tmp_55_reg_409;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            out_r_d0 <= grp_fu_160_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_r_d0 <= grp_bigint_math_bigint_zero_fu_153_in_r_d0;
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(tmp_38_reg_400, ap_sig_cseq_ST_st9_fsm_8, tmp_39_reg_424, ap_sig_cseq_ST_st13_fsm_12, grp_bigint_math_bigint_zero_fu_153_in_r_we0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = tmp_38_reg_400))) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = tmp_39_reg_424))))) then 
            out_r_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            out_r_we0 <= grp_bigint_math_bigint_zero_fu_153_in_r_we0;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sum_fu_223_p2 <= std_logic_vector(unsigned(tempB_q0) + unsigned(tempA_load_cast_fu_219_p1));
    tempA9_address0 <= tmp_s_fu_212_p1(8 - 1 downto 0);

    tempA9_ce0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            tempA9_ce0 <= ap_const_logic_1;
        else 
            tempA9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tempA_load_cast_fu_219_p1 <= std_logic_vector(resize(unsigned(tempA9_q0),8));

    tempB_address0_assign_proc : process(tmp_i3_reg_357, ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_153_in_r_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st5_fsm_4, tmp_s_fu_212_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            tempB_address0 <= tmp_i3_reg_357(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            tempB_address0 <= tmp_s_fu_212_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_address0 <= grp_bigint_math_bigint_zero_fu_153_in_r_address0;
        else 
            tempB_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_ce0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_153_in_r_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then 
            tempB_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_ce0 <= grp_bigint_math_bigint_zero_fu_153_in_r_ce0;
        else 
            tempB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_d0_assign_proc : process(out_r_q0, grp_bigint_math_bigint_zero_fu_153_in_r_d0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            tempB_d0 <= out_r_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_d0 <= grp_bigint_math_bigint_zero_fu_153_in_r_d0;
        else 
            tempB_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_we0_assign_proc : process(grp_bigint_math_bigint_zero_fu_153_in_r_we0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st5_fsm_4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then 
            tempB_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_we0 <= grp_bigint_math_bigint_zero_fu_153_in_r_we0;
        else 
            tempB_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_37_fu_243_p3 <= tmp_50_fu_237_p2(8 downto 8);
    tmp_38_fu_269_p3 <= tmp_51_fu_263_p2(8 downto 8);
    tmp_39_fu_317_p3 <= tmp_57_fu_311_p2(8 downto 8);
    tmp_50_fu_237_p2 <= std_logic_vector(unsigned(tmp_57_cast_fu_233_p1) + unsigned(tmp_56_cast_fu_229_p1));
    tmp_51_fu_263_p2 <= std_logic_vector(unsigned(tmp_60_cast_fu_255_p1) + unsigned(tmp_61_cast_fu_259_p1));
    tmp_52_fu_277_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(i_reg_141));
        tmp_53_fu_283_p1 <= std_logic_vector(resize(signed(tmp_52_fu_277_p2),64));

    tmp_55_fu_288_p2 <= std_logic_vector(unsigned(sum_reg_385) + unsigned(reg_167));
    tmp_56_cast_fu_229_p1 <= std_logic_vector(resize(unsigned(tempA9_q0),9));
        tmp_56_fu_299_p1 <= std_logic_vector(resize(signed(i_8_fu_293_p2),64));

    tmp_57_cast_fu_233_p1 <= std_logic_vector(resize(unsigned(tempB_q0),9));
    tmp_57_fu_311_p2 <= std_logic_vector(unsigned(tmp_72_cast_fu_308_p1) + unsigned(tmp_71_cast_fu_304_p1));
    tmp_58_fu_325_p2 <= std_logic_vector(signed(ap_const_lv9_1FE) + signed(i_reg_141));
        tmp_59_fu_331_p1 <= std_logic_vector(resize(signed(tmp_58_fu_325_p2),64));

    tmp_60_cast_fu_255_p1 <= std_logic_vector(resize(unsigned(out_r_q0),9));
    tmp_61_cast_fu_259_p1 <= std_logic_vector(resize(unsigned(sum_fu_223_p2),9));
    tmp_61_fu_336_p2 <= std_logic_vector(unsigned(reg_167) + unsigned(carry_reg_395));
    tmp_71_cast_fu_304_p1 <= std_logic_vector(resize(unsigned(out_r_q0),9));
    tmp_72_cast_fu_308_p1 <= std_logic_vector(resize(unsigned(tmp_37_reg_390),9));
    tmp_fu_204_p3 <= i_reg_141(8 downto 8);
    tmp_i3_fu_195_p1 <= std_logic_vector(resize(unsigned(i_i1_reg_130),64));
    tmp_s_fu_212_p1 <= std_logic_vector(resize(unsigned(i_cast_fu_200_p1),64));
end behav;
