// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _bigint_math_bigint_compare_HH_
#define _bigint_math_bigint_compare_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "bigint_math_bigint_compare_state.h"

namespace ap_rtl {

struct bigint_math_bigint_compare : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<8> > a_q0;
    sc_out< sc_lv<8> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<8> > b_q0;
    sc_out< sc_lv<2> > ap_return;


    // Module declarations
    bigint_math_bigint_compare(sc_module_name name);
    SC_HAS_PROCESS(bigint_math_bigint_compare);

    ~bigint_math_bigint_compare();

    sc_trace_file* mVcdFile;

    bigint_math_bigint_compare_state* state_U;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_23;
    sc_signal< sc_lv<9> > i_12_fu_178_p2;
    sc_signal< sc_lv<9> > i_12_reg_268;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_46;
    sc_signal< sc_lv<64> > tmp_s_fu_184_p1;
    sc_signal< sc_lv<64> > tmp_s_reg_273;
    sc_signal< sc_lv<1> > exitcond_fu_172_p2;
    sc_signal< sc_lv<2> > state_q0;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_69;
    sc_signal< sc_lv<1> > grp_fu_166_p2;
    sc_signal< sc_lv<1> > tmp_reg_309;
    sc_signal< sc_lv<1> > tmp_21_fu_208_p3;
    sc_signal< sc_lv<1> > tmp_21_reg_313;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_80;
    sc_signal< sc_lv<9> > i_2_fu_216_p2;
    sc_signal< sc_lv<9> > i_2_reg_317;
    sc_signal< sc_lv<32> > p_flag_fu_227_p3;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_95;
    sc_signal< sc_lv<8> > state_address0;
    sc_signal< sc_logic > state_ce0;
    sc_signal< sc_logic > state_we0;
    sc_signal< sc_lv<2> > state_d0;
    sc_signal< sc_lv<9> > i_reg_115;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_122;
    sc_signal< sc_lv<9> > i_1_reg_126;
    sc_signal< sc_lv<1> > or_cond1_fu_259_p2;
    sc_signal< sc_lv<1> > or_cond_fu_247_p2;
    sc_signal< sc_lv<32> > flag_reg_137;
    sc_signal< sc_lv<2> > p_0_phi_fu_153_p8;
    sc_signal< sc_lv<2> > p_0_reg_149;
    sc_signal< sc_lv<1> > tmp_85_fu_190_p2;
    sc_signal< sc_lv<1> > tmp_86_fu_196_p2;
    sc_signal< sc_lv<1> > tmp_91_fu_202_p2;
    sc_signal< sc_lv<8> > state_addr_2_gep_fu_92_p3;
    sc_signal< sc_lv<8> > state_addr_1_gep_fu_100_p3;
    sc_signal< sc_lv<64> > tmp_87_fu_222_p1;
    sc_signal< sc_lv<1> > tmp_89_fu_235_p2;
    sc_signal< sc_lv<1> > tmp_90_fu_241_p2;
    sc_signal< sc_lv<1> > tmp_92_fu_253_p2;
    sc_signal< sc_lv<2> > ap_return_preg;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_sig_272;
    sc_signal< bool > ap_sig_102;
    sc_signal< bool > ap_sig_167;
    sc_signal< bool > ap_sig_171;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_st5_fsm_4;
    static const sc_lv<6> ap_ST_st6_fsm_5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<9> ap_const_lv9_100;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_102();
    void thread_ap_sig_122();
    void thread_ap_sig_167();
    void thread_ap_sig_171();
    void thread_ap_sig_23();
    void thread_ap_sig_272();
    void thread_ap_sig_46();
    void thread_ap_sig_69();
    void thread_ap_sig_80();
    void thread_ap_sig_95();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_exitcond_fu_172_p2();
    void thread_grp_fu_166_p2();
    void thread_i_12_fu_178_p2();
    void thread_i_2_fu_216_p2();
    void thread_or_cond1_fu_259_p2();
    void thread_or_cond_fu_247_p2();
    void thread_p_0_phi_fu_153_p8();
    void thread_p_flag_fu_227_p3();
    void thread_state_addr_1_gep_fu_100_p3();
    void thread_state_addr_2_gep_fu_92_p3();
    void thread_state_address0();
    void thread_state_ce0();
    void thread_state_d0();
    void thread_state_we0();
    void thread_tmp_21_fu_208_p3();
    void thread_tmp_85_fu_190_p2();
    void thread_tmp_86_fu_196_p2();
    void thread_tmp_87_fu_222_p1();
    void thread_tmp_89_fu_235_p2();
    void thread_tmp_90_fu_241_p2();
    void thread_tmp_91_fu_202_p2();
    void thread_tmp_92_fu_253_p2();
    void thread_tmp_s_fu_184_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
