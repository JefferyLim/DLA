-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bigint_math_bigint_modexp is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    base_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    base_r_ce0 : OUT STD_LOGIC;
    base_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    exp_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    exp_ce0 : OUT STD_LOGIC;
    exp_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    mod_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    mod_r_ce0 : OUT STD_LOGIC;
    mod_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of bigint_math_bigint_modexp is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000100000000000000000000";
    constant ap_ST_st22_fsm_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001000000000000000000000";
    constant ap_ST_st23_fsm_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_ST_st24_fsm_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_ST_st25_fsm_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000001000000000000000000000000";
    constant ap_ST_st26_fsm_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000010000000000000000000000000";
    constant ap_ST_st27_fsm_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000100000000000000000000000000";
    constant ap_ST_st28_fsm_27 : STD_LOGIC_VECTOR (31 downto 0) := "00001000000000000000000000000000";
    constant ap_ST_st29_fsm_28 : STD_LOGIC_VECTOR (31 downto 0) := "00010000000000000000000000000000";
    constant ap_ST_st30_fsm_29 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_ST_st31_fsm_30 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_ST_st32_fsm_31 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv64_FF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_49 : BOOLEAN;
    signal one_addr_reg_251 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_82 : BOOLEAN;
    signal grp_bigint_math_bigint_zero_fu_220_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_198_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_205_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_212_ap_done : STD_LOGIC;
    signal grp_fu_239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_256 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_104 : BOOLEAN;
    signal grp_bigint_math_bigint_zero_fu_226_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_191_ap_done : STD_LOGIC;
    signal two_addr_reg_260 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_121 : BOOLEAN;
    signal tmp_52_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_131 : BOOLEAN;
    signal zero_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zero_1_ce0 : STD_LOGIC;
    signal zero_1_we0 : STD_LOGIC;
    signal zero_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal zero_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal one_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal one_1_ce0 : STD_LOGIC;
    signal one_1_we0 : STD_LOGIC;
    signal one_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal one_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal two_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal two_ce0 : STD_LOGIC;
    signal two_we0 : STD_LOGIC;
    signal two_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal two_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_ce0 : STD_LOGIC;
    signal temp_we0 : STD_LOGIC;
    signal temp_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp1_ce0 : STD_LOGIC;
    signal temp1_we0 : STD_LOGIC;
    signal temp1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp2_ce0 : STD_LOGIC;
    signal temp2_we0 : STD_LOGIC;
    signal temp2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempBase_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempBase_ce0 : STD_LOGIC;
    signal tempBase_we0 : STD_LOGIC;
    signal tempBase_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempBase_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempExp_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempExp_ce0 : STD_LOGIC;
    signal tempExp_we0 : STD_LOGIC;
    signal tempExp_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempExp_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempMod_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempMod_ce0 : STD_LOGIC;
    signal tempMod_we0 : STD_LOGIC;
    signal tempMod_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempMod_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_ce0 : STD_LOGIC;
    signal result_we0 : STD_LOGIC;
    signal result_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal result_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_out_r_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_out1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_out1_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_out1_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_out1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_longdiv_fu_160_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_longdiv_fu_160_b_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_172_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_172_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_172_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_172_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_172_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_172_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_172_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_172_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_172_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_172_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_fu_172_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_fu_172_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_179_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_179_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_179_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_179_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_179_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_1_fu_179_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_179_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_mul_1_fu_179_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_1_fu_179_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_mul_1_fu_179_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_185_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_185_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_185_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_185_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_185_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_rightshift_fu_185_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_185_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_rightshift_fu_185_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_rightshift_fu_185_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_rightshift_fu_185_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_191_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_191_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_191_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_191_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_191_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_191_a_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_191_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_191_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_191_b_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_191_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_bigint_math_bigint_copy_fu_198_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_198_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_198_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_198_to_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_198_to_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_198_to_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_198_to_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_198_from_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_198_from_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_198_from_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_205_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_205_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_205_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_205_to_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_205_to_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_205_to_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_205_to_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_205_from_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_205_from_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_212_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_212_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_212_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_212_to_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_212_to_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_212_to_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_copy_fu_212_to_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_212_from_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_copy_fu_212_from_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_220_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_220_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_220_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_220_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_220_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_220_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_220_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_226_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_226_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_226_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_226_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_226_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_226_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_226_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_232_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_232_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_232_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_232_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_232_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_232_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_232_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_232_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_grp_bigint_math_bigint_longdiv_fu_160_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_364 : BOOLEAN;
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_372 : BOOLEAN;
    signal ap_sig_cseq_ST_st30_fsm_29 : STD_LOGIC;
    signal ap_sig_380 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_388 : BOOLEAN;
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_395 : BOOLEAN;
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_403 : BOOLEAN;
    signal ap_sig_cseq_ST_st31_fsm_30 : STD_LOGIC;
    signal ap_sig_413 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_mul_fu_172_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_443 : BOOLEAN;
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_450 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_mul_1_fu_179_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st28_fsm_27 : STD_LOGIC;
    signal ap_sig_459 : BOOLEAN;
    signal ap_sig_cseq_ST_st29_fsm_28 : STD_LOGIC;
    signal ap_sig_466 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_rightshift_fu_185_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st22_fsm_21 : STD_LOGIC;
    signal ap_sig_475 : BOOLEAN;
    signal ap_sig_cseq_ST_st23_fsm_22 : STD_LOGIC;
    signal ap_sig_482 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_compare_fu_191_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_491 : BOOLEAN;
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_500 : BOOLEAN;
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_508 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_516 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_copy_fu_198_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_526 : BOOLEAN;
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_534 : BOOLEAN;
    signal tmp_51_fu_245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st24_fsm_23 : STD_LOGIC;
    signal ap_sig_547 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_555 : BOOLEAN;
    signal ap_sig_cseq_ST_st32_fsm_31 : STD_LOGIC;
    signal ap_sig_563 : BOOLEAN;
    signal ap_sig_cseq_ST_st25_fsm_24 : STD_LOGIC;
    signal ap_sig_571 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_copy_fu_205_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_copy_fu_212_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_zero_fu_220_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_587 : BOOLEAN;
    signal ap_sig_cseq_ST_st26_fsm_25 : STD_LOGIC;
    signal ap_sig_609 : BOOLEAN;
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_617 : BOOLEAN;
    signal ap_sig_cseq_ST_st27_fsm_26 : STD_LOGIC;
    signal ap_sig_626 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_zero_fu_226_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_zero_fu_232_ap_start : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (31 downto 0);

    component bigint_math_bigint_longdiv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        out1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out1_ce0 : OUT STD_LOGIC;
        out1_we0 : OUT STD_LOGIC;
        out1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_mul_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_rightshift IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_compare IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component bigint_math_bigint_copy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        to_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        to_r_ce0 : OUT STD_LOGIC;
        to_r_we0 : OUT STD_LOGIC;
        to_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        from_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        from_ce0 : OUT STD_LOGIC;
        from_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_zero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_we0 : OUT STD_LOGIC;
        in_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add_tempA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_modexp_temp2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    zero_1_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => zero_1_address0,
        ce0 => zero_1_ce0,
        we0 => zero_1_we0,
        d0 => zero_1_d0,
        q0 => zero_1_q0);

    one_1_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => one_1_address0,
        ce0 => one_1_ce0,
        we0 => one_1_we0,
        d0 => one_1_d0,
        q0 => one_1_q0);

    two_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => two_address0,
        ce0 => two_ce0,
        we0 => two_we0,
        d0 => two_d0,
        q0 => two_q0);

    temp_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp_address0,
        ce0 => temp_ce0,
        we0 => temp_we0,
        d0 => temp_d0,
        q0 => temp_q0);

    temp1_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp1_address0,
        ce0 => temp1_ce0,
        we0 => temp1_we0,
        d0 => temp1_d0,
        q0 => temp1_q0);

    temp2_U : component bigint_math_bigint_modexp_temp2
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => temp2_address0,
        ce0 => temp2_ce0,
        we0 => temp2_we0,
        d0 => temp2_d0);

    tempBase_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempBase_address0,
        ce0 => tempBase_ce0,
        we0 => tempBase_we0,
        d0 => tempBase_d0,
        q0 => tempBase_q0);

    tempExp_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempExp_address0,
        ce0 => tempExp_ce0,
        we0 => tempExp_we0,
        d0 => tempExp_d0,
        q0 => tempExp_q0);

    tempMod_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempMod_address0,
        ce0 => tempMod_ce0,
        we0 => tempMod_we0,
        d0 => tempMod_d0,
        q0 => tempMod_q0);

    result_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => result_address0,
        ce0 => result_ce0,
        we0 => result_we0,
        d0 => result_d0,
        q0 => result_q0);

    grp_bigint_math_bigint_longdiv_fu_160 : component bigint_math_bigint_longdiv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_longdiv_fu_160_ap_start,
        ap_done => grp_bigint_math_bigint_longdiv_fu_160_ap_done,
        ap_idle => grp_bigint_math_bigint_longdiv_fu_160_ap_idle,
        ap_ready => grp_bigint_math_bigint_longdiv_fu_160_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_longdiv_fu_160_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_longdiv_fu_160_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_longdiv_fu_160_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_longdiv_fu_160_out_r_d0,
        out_r_q0 => grp_bigint_math_bigint_longdiv_fu_160_out_r_q0,
        out1_address0 => grp_bigint_math_bigint_longdiv_fu_160_out1_address0,
        out1_ce0 => grp_bigint_math_bigint_longdiv_fu_160_out1_ce0,
        out1_we0 => grp_bigint_math_bigint_longdiv_fu_160_out1_we0,
        out1_d0 => grp_bigint_math_bigint_longdiv_fu_160_out1_d0,
        a_address0 => grp_bigint_math_bigint_longdiv_fu_160_a_address0,
        a_ce0 => grp_bigint_math_bigint_longdiv_fu_160_a_ce0,
        a_q0 => grp_bigint_math_bigint_longdiv_fu_160_a_q0,
        b_address0 => grp_bigint_math_bigint_longdiv_fu_160_b_address0,
        b_ce0 => grp_bigint_math_bigint_longdiv_fu_160_b_ce0,
        b_q0 => grp_bigint_math_bigint_longdiv_fu_160_b_q0);

    grp_bigint_math_bigint_mul_fu_172 : component bigint_math_bigint_mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_mul_fu_172_ap_start,
        ap_done => grp_bigint_math_bigint_mul_fu_172_ap_done,
        ap_idle => grp_bigint_math_bigint_mul_fu_172_ap_idle,
        ap_ready => grp_bigint_math_bigint_mul_fu_172_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_mul_fu_172_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_mul_fu_172_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_mul_fu_172_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_mul_fu_172_out_r_d0,
        out_r_q0 => temp_q0,
        a_address0 => grp_bigint_math_bigint_mul_fu_172_a_address0,
        a_ce0 => grp_bigint_math_bigint_mul_fu_172_a_ce0,
        a_q0 => result_q0,
        b_address0 => grp_bigint_math_bigint_mul_fu_172_b_address0,
        b_ce0 => grp_bigint_math_bigint_mul_fu_172_b_ce0,
        b_q0 => tempBase_q0);

    grp_bigint_math_bigint_mul_1_fu_179 : component bigint_math_bigint_mul_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_mul_1_fu_179_ap_start,
        ap_done => grp_bigint_math_bigint_mul_1_fu_179_ap_done,
        ap_idle => grp_bigint_math_bigint_mul_1_fu_179_ap_idle,
        ap_ready => grp_bigint_math_bigint_mul_1_fu_179_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_mul_1_fu_179_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_mul_1_fu_179_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_mul_1_fu_179_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_mul_1_fu_179_out_r_d0,
        out_r_q0 => temp_q0,
        a_address0 => grp_bigint_math_bigint_mul_1_fu_179_a_address0,
        a_ce0 => grp_bigint_math_bigint_mul_1_fu_179_a_ce0,
        a_q0 => tempBase_q0);

    grp_bigint_math_bigint_rightshift_fu_185 : component bigint_math_bigint_rightshift
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_rightshift_fu_185_ap_start,
        ap_done => grp_bigint_math_bigint_rightshift_fu_185_ap_done,
        ap_idle => grp_bigint_math_bigint_rightshift_fu_185_ap_idle,
        ap_ready => grp_bigint_math_bigint_rightshift_fu_185_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_rightshift_fu_185_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_rightshift_fu_185_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_rightshift_fu_185_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_rightshift_fu_185_out_r_d0,
        out_r_q0 => temp_q0,
        a_address0 => grp_bigint_math_bigint_rightshift_fu_185_a_address0,
        a_ce0 => grp_bigint_math_bigint_rightshift_fu_185_a_ce0,
        a_q0 => tempExp_q0);

    grp_bigint_math_bigint_compare_fu_191 : component bigint_math_bigint_compare
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_compare_fu_191_ap_start,
        ap_done => grp_bigint_math_bigint_compare_fu_191_ap_done,
        ap_idle => grp_bigint_math_bigint_compare_fu_191_ap_idle,
        ap_ready => grp_bigint_math_bigint_compare_fu_191_ap_ready,
        a_address0 => grp_bigint_math_bigint_compare_fu_191_a_address0,
        a_ce0 => grp_bigint_math_bigint_compare_fu_191_a_ce0,
        a_q0 => grp_bigint_math_bigint_compare_fu_191_a_q0,
        b_address0 => grp_bigint_math_bigint_compare_fu_191_b_address0,
        b_ce0 => grp_bigint_math_bigint_compare_fu_191_b_ce0,
        b_q0 => grp_bigint_math_bigint_compare_fu_191_b_q0,
        ap_return => grp_bigint_math_bigint_compare_fu_191_ap_return);

    grp_bigint_math_bigint_copy_fu_198 : component bigint_math_bigint_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_copy_fu_198_ap_start,
        ap_done => grp_bigint_math_bigint_copy_fu_198_ap_done,
        ap_idle => grp_bigint_math_bigint_copy_fu_198_ap_idle,
        ap_ready => grp_bigint_math_bigint_copy_fu_198_ap_ready,
        to_r_address0 => grp_bigint_math_bigint_copy_fu_198_to_r_address0,
        to_r_ce0 => grp_bigint_math_bigint_copy_fu_198_to_r_ce0,
        to_r_we0 => grp_bigint_math_bigint_copy_fu_198_to_r_we0,
        to_r_d0 => grp_bigint_math_bigint_copy_fu_198_to_r_d0,
        from_address0 => grp_bigint_math_bigint_copy_fu_198_from_address0,
        from_ce0 => grp_bigint_math_bigint_copy_fu_198_from_ce0,
        from_q0 => grp_bigint_math_bigint_copy_fu_198_from_q0);

    grp_bigint_math_bigint_copy_fu_205 : component bigint_math_bigint_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_copy_fu_205_ap_start,
        ap_done => grp_bigint_math_bigint_copy_fu_205_ap_done,
        ap_idle => grp_bigint_math_bigint_copy_fu_205_ap_idle,
        ap_ready => grp_bigint_math_bigint_copy_fu_205_ap_ready,
        to_r_address0 => grp_bigint_math_bigint_copy_fu_205_to_r_address0,
        to_r_ce0 => grp_bigint_math_bigint_copy_fu_205_to_r_ce0,
        to_r_we0 => grp_bigint_math_bigint_copy_fu_205_to_r_we0,
        to_r_d0 => grp_bigint_math_bigint_copy_fu_205_to_r_d0,
        from_address0 => grp_bigint_math_bigint_copy_fu_205_from_address0,
        from_ce0 => grp_bigint_math_bigint_copy_fu_205_from_ce0,
        from_q0 => exp_q0);

    grp_bigint_math_bigint_copy_fu_212 : component bigint_math_bigint_copy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_copy_fu_212_ap_start,
        ap_done => grp_bigint_math_bigint_copy_fu_212_ap_done,
        ap_idle => grp_bigint_math_bigint_copy_fu_212_ap_idle,
        ap_ready => grp_bigint_math_bigint_copy_fu_212_ap_ready,
        to_r_address0 => grp_bigint_math_bigint_copy_fu_212_to_r_address0,
        to_r_ce0 => grp_bigint_math_bigint_copy_fu_212_to_r_ce0,
        to_r_we0 => grp_bigint_math_bigint_copy_fu_212_to_r_we0,
        to_r_d0 => grp_bigint_math_bigint_copy_fu_212_to_r_d0,
        from_address0 => grp_bigint_math_bigint_copy_fu_212_from_address0,
        from_ce0 => grp_bigint_math_bigint_copy_fu_212_from_ce0,
        from_q0 => mod_r_q0);

    grp_bigint_math_bigint_zero_fu_220 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_220_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_220_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_220_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_220_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_220_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_220_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_220_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_220_in_r_d0);

    grp_bigint_math_bigint_zero_fu_226 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_226_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_226_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_226_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_226_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_226_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_226_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_226_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_226_in_r_d0);

    grp_bigint_math_bigint_zero_fu_232 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_232_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_232_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_232_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_232_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_232_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_232_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_232_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_232_in_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_compare_fu_191_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_compare_fu_191_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
                    ap_reg_grp_bigint_math_bigint_compare_fu_191_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_compare_fu_191_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_compare_fu_191_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_copy_fu_198_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_copy_fu_198_ap_start <= ap_const_logic_0;
            else
                if (((not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_lv1_0 = tmp_51_fu_245_p2)) or (ap_const_logic_1 = ap_sig_cseq_ST_st24_fsm_23))) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_198_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_copy_fu_198_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_198_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_copy_fu_205_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_copy_fu_205_ap_start <= ap_const_logic_0;
            else
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_205_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_copy_fu_205_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_205_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_copy_fu_212_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_copy_fu_212_ap_start <= ap_const_logic_0;
            else
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_212_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_copy_fu_212_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_copy_fu_212_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_longdiv_fu_160_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_longdiv_fu_160_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done))) and (tmp_s_reg_256 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) or (ap_const_logic_1 = ap_sig_cseq_ST_st30_fsm_29))) then 
                    ap_reg_grp_bigint_math_bigint_longdiv_fu_160_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_longdiv_fu_160_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_longdiv_fu_160_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_mul_1_fu_179_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_mul_1_fu_179_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st28_fsm_27)) then 
                    ap_reg_grp_bigint_math_bigint_mul_1_fu_179_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_mul_1_fu_179_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_mul_1_fu_179_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_mul_fu_172_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_mul_fu_172_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                    ap_reg_grp_bigint_math_bigint_mul_fu_172_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_mul_fu_172_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_mul_fu_172_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_rightshift_fu_185_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_rightshift_fu_185_ap_start <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21)) then 
                    ap_reg_grp_bigint_math_bigint_rightshift_fu_185_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_rightshift_fu_185_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_rightshift_fu_185_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_220_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_220_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_205_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_212_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done))) and (tmp_s_reg_256 = ap_const_lv1_0)) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done))) or (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_232_ap_done)))) or (not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_51_fu_245_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st26_fsm_25))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_220_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_220_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_220_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_226_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_226_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)))) or (ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or (not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)) and (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_51_fu_245_p2))))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_226_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_226_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_226_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_232_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_232_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st22_fsm_21) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_232_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_232_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_232_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)))) then
                tmp_52_reg_268 <= grp_fu_239_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done))))) then
                tmp_s_reg_256 <= grp_fu_239_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, grp_bigint_math_bigint_zero_fu_220_ap_done, grp_bigint_math_bigint_copy_fu_198_ap_done, grp_bigint_math_bigint_copy_fu_205_ap_done, grp_bigint_math_bigint_copy_fu_212_ap_done, grp_fu_239_p2, tmp_s_reg_256, grp_bigint_math_bigint_zero_fu_226_ap_done, grp_bigint_math_bigint_compare_fu_191_ap_done, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_ap_done, grp_bigint_math_bigint_mul_fu_172_ap_done, grp_bigint_math_bigint_mul_1_fu_179_ap_done, grp_bigint_math_bigint_rightshift_fu_185_ap_done, grp_bigint_math_bigint_zero_fu_232_ap_done, tmp_51_fu_245_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_232_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_205_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_212_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done))) then
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                end if;
            when ap_ST_st6_fsm_5 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st7_fsm_6 => 
                if ((not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done))) and not((tmp_s_reg_256 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st32_fsm_31;
                elsif ((not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done))) and (tmp_s_reg_256 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_longdiv_fu_160_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)) and (ap_const_lv1_0 = tmp_51_fu_245_p2))) then
                    ap_NS_fsm <= ap_ST_st32_fsm_31;
                elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)) and not((ap_const_lv1_0 = tmp_51_fu_245_p2)))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                end if;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_longdiv_fu_160_ap_done))) then
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                if ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)) and (grp_fu_239_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                elsif ((not((ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)) and not((grp_fu_239_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                end if;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st19_fsm_18;
            when ap_ST_st19_fsm_18 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_mul_fu_172_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                end if;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                if (not((not((tmp_52_reg_268 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_bigint_math_bigint_longdiv_fu_160_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st22_fsm_21;
                else
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                end if;
            when ap_ST_st22_fsm_21 => 
                ap_NS_fsm <= ap_ST_st23_fsm_22;
            when ap_ST_st23_fsm_22 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_232_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_rightshift_fu_185_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st24_fsm_23;
                else
                    ap_NS_fsm <= ap_ST_st23_fsm_22;
                end if;
            when ap_ST_st24_fsm_23 => 
                ap_NS_fsm <= ap_ST_st25_fsm_24;
            when ap_ST_st25_fsm_24 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done))) then
                    ap_NS_fsm <= ap_ST_st26_fsm_25;
                else
                    ap_NS_fsm <= ap_ST_st25_fsm_24;
                end if;
            when ap_ST_st26_fsm_25 => 
                ap_NS_fsm <= ap_ST_st27_fsm_26;
            when ap_ST_st27_fsm_26 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done))) then
                    ap_NS_fsm <= ap_ST_st28_fsm_27;
                else
                    ap_NS_fsm <= ap_ST_st27_fsm_26;
                end if;
            when ap_ST_st28_fsm_27 => 
                ap_NS_fsm <= ap_ST_st29_fsm_28;
            when ap_ST_st29_fsm_28 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_mul_1_fu_179_ap_done))) then
                    ap_NS_fsm <= ap_ST_st30_fsm_29;
                else
                    ap_NS_fsm <= ap_ST_st29_fsm_28;
                end if;
            when ap_ST_st30_fsm_29 => 
                ap_NS_fsm <= ap_ST_st31_fsm_30;
            when ap_ST_st31_fsm_30 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_longdiv_fu_160_ap_done))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st31_fsm_30;
                end if;
            when ap_ST_st32_fsm_31 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done) and (tmp_s_reg_256 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st32_fsm_31;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, grp_bigint_math_bigint_copy_fu_198_ap_done, tmp_s_reg_256, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) and not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done) and (tmp_s_reg_256 = ap_const_lv1_0)))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_bigint_math_bigint_copy_fu_198_ap_done, tmp_s_reg_256, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31) and not(((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done) and (tmp_s_reg_256 = ap_const_lv1_0))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_104_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_104 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_121_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_121 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_131_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_131 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_364_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_364 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_372_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_372 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_380_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_380 <= (ap_const_lv1_1 = ap_CS_fsm(29 downto 29));
    end process;


    ap_sig_388_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_388 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_395_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_395 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_403_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_403 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_413_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_413 <= (ap_const_lv1_1 = ap_CS_fsm(30 downto 30));
    end process;


    ap_sig_443_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_443 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_450_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_450 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_459_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_459 <= (ap_const_lv1_1 = ap_CS_fsm(27 downto 27));
    end process;


    ap_sig_466_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_466 <= (ap_const_lv1_1 = ap_CS_fsm(28 downto 28));
    end process;


    ap_sig_475_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_475 <= (ap_const_lv1_1 = ap_CS_fsm(21 downto 21));
    end process;


    ap_sig_482_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_482 <= (ap_const_lv1_1 = ap_CS_fsm(22 downto 22));
    end process;


    ap_sig_49_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_49 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_491_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_491 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_500_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_500 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_508_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_508 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_516_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_516 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_526_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_526 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_534_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_534 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_547_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_547 <= (ap_const_lv1_1 = ap_CS_fsm(23 downto 23));
    end process;


    ap_sig_555_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_555 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_563_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_563 <= (ap_const_lv1_1 = ap_CS_fsm(31 downto 31));
    end process;


    ap_sig_571_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_571 <= (ap_const_lv1_1 = ap_CS_fsm(24 downto 24));
    end process;


    ap_sig_587_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_587 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_609_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_609 <= (ap_const_lv1_1 = ap_CS_fsm(25 downto 25));
    end process;


    ap_sig_617_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_617 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_626_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_626 <= (ap_const_lv1_1 = ap_CS_fsm(26 downto 26));
    end process;


    ap_sig_82_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_82 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_555)
    begin
        if (ap_sig_555) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_500)
    begin
        if (ap_sig_500) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_516)
    begin
        if (ap_sig_516) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_617)
    begin
        if (ap_sig_617) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_364)
    begin
        if (ap_sig_364) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_395)
    begin
        if (ap_sig_395) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_508)
    begin
        if (ap_sig_508) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_131)
    begin
        if (ap_sig_131) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_443)
    begin
        if (ap_sig_443) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_450)
    begin
        if (ap_sig_450) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_49)
    begin
        if (ap_sig_49) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_372)
    begin
        if (ap_sig_372) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_403)
    begin
        if (ap_sig_403) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st22_fsm_21_assign_proc : process(ap_sig_475)
    begin
        if (ap_sig_475) then 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st22_fsm_21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st23_fsm_22_assign_proc : process(ap_sig_482)
    begin
        if (ap_sig_482) then 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st23_fsm_22 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st24_fsm_23_assign_proc : process(ap_sig_547)
    begin
        if (ap_sig_547) then 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st24_fsm_23 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st25_fsm_24_assign_proc : process(ap_sig_571)
    begin
        if (ap_sig_571) then 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st25_fsm_24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st26_fsm_25_assign_proc : process(ap_sig_609)
    begin
        if (ap_sig_609) then 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st26_fsm_25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st27_fsm_26_assign_proc : process(ap_sig_626)
    begin
        if (ap_sig_626) then 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st27_fsm_26 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st28_fsm_27_assign_proc : process(ap_sig_459)
    begin
        if (ap_sig_459) then 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st28_fsm_27 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st29_fsm_28_assign_proc : process(ap_sig_466)
    begin
        if (ap_sig_466) then 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st29_fsm_28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_587)
    begin
        if (ap_sig_587) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st30_fsm_29_assign_proc : process(ap_sig_380)
    begin
        if (ap_sig_380) then 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st30_fsm_29 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st31_fsm_30_assign_proc : process(ap_sig_413)
    begin
        if (ap_sig_413) then 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st31_fsm_30 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st32_fsm_31_assign_proc : process(ap_sig_563)
    begin
        if (ap_sig_563) then 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st32_fsm_31 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_526)
    begin
        if (ap_sig_526) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_82)
    begin
        if (ap_sig_82) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_491)
    begin
        if (ap_sig_491) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_104)
    begin
        if (ap_sig_104) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_121)
    begin
        if (ap_sig_121) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_388)
    begin
        if (ap_sig_388) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_534)
    begin
        if (ap_sig_534) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    base_r_address0 <= grp_bigint_math_bigint_copy_fu_198_from_address0;
    base_r_ce0 <= grp_bigint_math_bigint_copy_fu_198_from_ce0;
    exp_address0 <= grp_bigint_math_bigint_copy_fu_205_from_address0;
    exp_ce0 <= grp_bigint_math_bigint_copy_fu_205_from_ce0;

    grp_bigint_math_bigint_compare_fu_191_a_q0_assign_proc : process(mod_r_q0, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st17_fsm_16, temp1_q0, tempExp_q0, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            grp_bigint_math_bigint_compare_fu_191_a_q0 <= temp1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_bigint_math_bigint_compare_fu_191_a_q0 <= tempExp_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            grp_bigint_math_bigint_compare_fu_191_a_q0 <= mod_r_q0;
        else 
            grp_bigint_math_bigint_compare_fu_191_a_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_compare_fu_191_ap_start <= ap_reg_grp_bigint_math_bigint_compare_fu_191_ap_start;

    grp_bigint_math_bigint_compare_fu_191_b_q0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st17_fsm_16, zero_1_q0, one_1_q0, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_bigint_math_bigint_compare_fu_191_b_q0 <= zero_1_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            grp_bigint_math_bigint_compare_fu_191_b_q0 <= one_1_q0;
        else 
            grp_bigint_math_bigint_compare_fu_191_b_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_copy_fu_198_ap_start <= ap_reg_grp_bigint_math_bigint_copy_fu_198_ap_start;

    grp_bigint_math_bigint_copy_fu_198_from_q0_assign_proc : process(base_r_q0, ap_sig_cseq_ST_st4_fsm_3, tmp_s_reg_256, temp_q0, temp1_q0, result_q0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st32_fsm_31, ap_sig_cseq_ST_st25_fsm_24)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            grp_bigint_math_bigint_copy_fu_198_from_q0 <= temp_q0;
        elsif (((tmp_s_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31))) then 
            grp_bigint_math_bigint_copy_fu_198_from_q0 <= result_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_bigint_math_bigint_copy_fu_198_from_q0 <= temp1_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            grp_bigint_math_bigint_copy_fu_198_from_q0 <= base_r_q0;
        else 
            grp_bigint_math_bigint_copy_fu_198_from_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_copy_fu_205_ap_start <= ap_reg_grp_bigint_math_bigint_copy_fu_205_ap_start;
    grp_bigint_math_bigint_copy_fu_212_ap_start <= ap_reg_grp_bigint_math_bigint_copy_fu_212_ap_start;

    grp_bigint_math_bigint_longdiv_fu_160_a_q0_assign_proc : process(tmp_52_reg_268, temp_q0, tempBase_q0, tempExp_q0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            grp_bigint_math_bigint_longdiv_fu_160_a_q0 <= temp_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            grp_bigint_math_bigint_longdiv_fu_160_a_q0 <= tempExp_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_bigint_math_bigint_longdiv_fu_160_a_q0 <= tempBase_q0;
        else 
            grp_bigint_math_bigint_longdiv_fu_160_a_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_longdiv_fu_160_ap_start <= ap_reg_grp_bigint_math_bigint_longdiv_fu_160_ap_start;

    grp_bigint_math_bigint_longdiv_fu_160_b_q0_assign_proc : process(tmp_52_reg_268, two_q0, tempMod_q0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            grp_bigint_math_bigint_longdiv_fu_160_b_q0 <= two_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            grp_bigint_math_bigint_longdiv_fu_160_b_q0 <= tempMod_q0;
        else 
            grp_bigint_math_bigint_longdiv_fu_160_b_q0 <= "XXXXXXXX";
        end if; 
    end process;


    grp_bigint_math_bigint_longdiv_fu_160_out_r_q0_assign_proc : process(tmp_52_reg_268, temp_q0, temp1_q0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            grp_bigint_math_bigint_longdiv_fu_160_out_r_q0 <= temp1_q0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            grp_bigint_math_bigint_longdiv_fu_160_out_r_q0 <= temp_q0;
        else 
            grp_bigint_math_bigint_longdiv_fu_160_out_r_q0 <= "XXXXXXXX";
        end if; 
    end process;

    grp_bigint_math_bigint_mul_1_fu_179_ap_start <= ap_reg_grp_bigint_math_bigint_mul_1_fu_179_ap_start;
    grp_bigint_math_bigint_mul_fu_172_ap_start <= ap_reg_grp_bigint_math_bigint_mul_fu_172_ap_start;
    grp_bigint_math_bigint_rightshift_fu_185_ap_start <= ap_reg_grp_bigint_math_bigint_rightshift_fu_185_ap_start;
    grp_bigint_math_bigint_zero_fu_220_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_220_ap_start;
    grp_bigint_math_bigint_zero_fu_226_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_226_ap_start;
    grp_bigint_math_bigint_zero_fu_232_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_232_ap_start;
    grp_fu_239_p2 <= "1" when (grp_bigint_math_bigint_compare_fu_191_ap_return = ap_const_lv2_0) else "0";

    mod_r_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_compare_fu_191_a_address0, grp_bigint_math_bigint_copy_fu_212_from_address0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mod_r_address0 <= grp_bigint_math_bigint_copy_fu_212_from_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mod_r_address0 <= grp_bigint_math_bigint_compare_fu_191_a_address0;
        else 
            mod_r_address0 <= "XXXXXXXX";
        end if; 
    end process;


    mod_r_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_compare_fu_191_a_ce0, grp_bigint_math_bigint_copy_fu_212_from_ce0)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            mod_r_ce0 <= grp_bigint_math_bigint_copy_fu_212_from_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            mod_r_ce0 <= grp_bigint_math_bigint_compare_fu_191_a_ce0;
        else 
            mod_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    one_1_address0_assign_proc : process(one_addr_reg_251, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st17_fsm_16, grp_bigint_math_bigint_compare_fu_191_b_address0, grp_bigint_math_bigint_zero_fu_220_in_r_address0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            one_1_address0 <= one_addr_reg_251;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            one_1_address0 <= ap_const_lv64_FF(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            one_1_address0 <= grp_bigint_math_bigint_zero_fu_220_in_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            one_1_address0 <= grp_bigint_math_bigint_compare_fu_191_b_address0;
        else 
            one_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    one_1_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_zero_fu_220_ap_done, grp_bigint_math_bigint_copy_fu_198_ap_done, grp_bigint_math_bigint_copy_fu_205_ap_done, grp_bigint_math_bigint_copy_fu_212_ap_done, ap_sig_cseq_ST_st6_fsm_5, tmp_52_reg_268, ap_sig_cseq_ST_st17_fsm_16, grp_bigint_math_bigint_longdiv_fu_160_ap_done, grp_bigint_math_bigint_compare_fu_191_b_ce0, grp_bigint_math_bigint_zero_fu_220_in_r_ce0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_205_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_212_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((not((tmp_52_reg_268 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_bigint_math_bigint_longdiv_fu_160_ap_done)))))) then 
            one_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            one_1_ce0 <= grp_bigint_math_bigint_zero_fu_220_in_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            one_1_ce0 <= grp_bigint_math_bigint_compare_fu_191_b_ce0;
        else 
            one_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    one_1_d0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_zero_fu_220_in_r_d0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            one_1_d0 <= ap_const_lv8_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            one_1_d0 <= grp_bigint_math_bigint_zero_fu_220_in_r_d0;
        else 
            one_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    one_1_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_zero_fu_220_ap_done, grp_bigint_math_bigint_copy_fu_198_ap_done, grp_bigint_math_bigint_copy_fu_205_ap_done, grp_bigint_math_bigint_copy_fu_212_ap_done, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_ap_done, grp_bigint_math_bigint_zero_fu_220_in_r_we0, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_205_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_212_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((not((tmp_52_reg_268 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_bigint_math_bigint_longdiv_fu_160_ap_done)))))) then 
            one_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            one_1_we0 <= grp_bigint_math_bigint_zero_fu_220_in_r_we0;
        else 
            one_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    one_addr_reg_251 <= ap_const_lv64_FF(8 - 1 downto 0);

    out_r_address0_assign_proc : process(tmp_s_reg_256, ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_copy_fu_198_to_r_address0, grp_bigint_math_bigint_zero_fu_226_in_r_address0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out_r_address0 <= ap_const_lv64_FF(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_address0 <= grp_bigint_math_bigint_zero_fu_226_in_r_address0;
        elsif (((tmp_s_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31))) then 
            out_r_address0 <= grp_bigint_math_bigint_copy_fu_198_to_r_address0;
        else 
            out_r_address0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(grp_bigint_math_bigint_copy_fu_198_ap_done, tmp_s_reg_256, ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_copy_fu_198_to_r_ce0, grp_bigint_math_bigint_zero_fu_226_in_r_ce0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done)))) then 
            out_r_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_ce0 <= grp_bigint_math_bigint_zero_fu_226_in_r_ce0;
        elsif (((tmp_s_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31))) then 
            out_r_ce0 <= grp_bigint_math_bigint_copy_fu_198_to_r_ce0;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(tmp_s_reg_256, ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_copy_fu_198_to_r_d0, grp_bigint_math_bigint_zero_fu_226_in_r_d0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            out_r_d0 <= ap_const_lv8_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_d0 <= grp_bigint_math_bigint_zero_fu_226_in_r_d0;
        elsif (((tmp_s_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31))) then 
            out_r_d0 <= grp_bigint_math_bigint_copy_fu_198_to_r_d0;
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(grp_bigint_math_bigint_copy_fu_198_ap_done, tmp_s_reg_256, ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_copy_fu_198_to_r_we0, grp_bigint_math_bigint_zero_fu_226_in_r_we0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done))))) then 
            out_r_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_we0 <= grp_bigint_math_bigint_zero_fu_226_in_r_we0;
        elsif (((tmp_s_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31))) then 
            out_r_we0 <= grp_bigint_math_bigint_copy_fu_198_to_r_we0;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    result_address0_assign_proc : process(tmp_s_reg_256, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_out1_address0, grp_bigint_math_bigint_mul_fu_172_a_address0, grp_bigint_math_bigint_copy_fu_198_from_address0, grp_bigint_math_bigint_zero_fu_220_in_r_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            result_address0 <= ap_const_lv64_FF(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            result_address0 <= grp_bigint_math_bigint_zero_fu_220_in_r_address0;
        elsif (((tmp_s_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31))) then 
            result_address0 <= grp_bigint_math_bigint_copy_fu_198_from_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            result_address0 <= grp_bigint_math_bigint_mul_fu_172_a_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0)))) then 
            result_address0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_address0;
        else 
            result_address0 <= "XXXXXXXX";
        end if; 
    end process;


    result_ce0_assign_proc : process(grp_bigint_math_bigint_copy_fu_198_ap_done, tmp_s_reg_256, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_out1_ce0, grp_bigint_math_bigint_mul_fu_172_a_ce0, grp_bigint_math_bigint_copy_fu_198_from_ce0, grp_bigint_math_bigint_zero_fu_220_in_r_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st32_fsm_31)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done)))) then 
            result_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            result_ce0 <= grp_bigint_math_bigint_zero_fu_220_in_r_ce0;
        elsif (((tmp_s_reg_256 = ap_const_lv1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st32_fsm_31))) then 
            result_ce0 <= grp_bigint_math_bigint_copy_fu_198_from_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            result_ce0 <= grp_bigint_math_bigint_mul_fu_172_a_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0)))) then 
            result_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_ce0;
        else 
            result_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    result_d0_assign_proc : process(tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_out1_d0, grp_bigint_math_bigint_zero_fu_220_in_r_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            result_d0 <= ap_const_lv8_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            result_d0 <= grp_bigint_math_bigint_zero_fu_220_in_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0)))) then 
            result_d0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_d0;
        else 
            result_d0 <= "XXXXXXXX";
        end if; 
    end process;


    result_we0_assign_proc : process(grp_bigint_math_bigint_copy_fu_198_ap_done, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_out1_we0, grp_bigint_math_bigint_zero_fu_220_in_r_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_logic_0 = grp_bigint_math_bigint_copy_fu_198_ap_done))))) then 
            result_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            result_we0 <= grp_bigint_math_bigint_zero_fu_220_in_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0)))) then 
            result_we0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_we0;
        else 
            result_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp1_address0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, tmp_52_reg_268, ap_sig_cseq_ST_st17_fsm_16, grp_bigint_math_bigint_longdiv_fu_160_out_r_address0, grp_bigint_math_bigint_longdiv_fu_160_out1_address0, grp_bigint_math_bigint_compare_fu_191_a_address0, grp_bigint_math_bigint_copy_fu_198_from_address0, grp_bigint_math_bigint_zero_fu_220_in_r_address0, grp_bigint_math_bigint_zero_fu_226_in_r_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp1_address0 <= grp_bigint_math_bigint_zero_fu_226_in_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then 
            temp1_address0 <= grp_bigint_math_bigint_zero_fu_220_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            temp1_address0 <= grp_bigint_math_bigint_copy_fu_198_from_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            temp1_address0 <= grp_bigint_math_bigint_compare_fu_191_a_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            temp1_address0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_address0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            temp1_address0 <= grp_bigint_math_bigint_longdiv_fu_160_out_r_address0;
        else 
            temp1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    temp1_ce0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, tmp_52_reg_268, ap_sig_cseq_ST_st17_fsm_16, grp_bigint_math_bigint_longdiv_fu_160_out_r_ce0, grp_bigint_math_bigint_longdiv_fu_160_out1_ce0, grp_bigint_math_bigint_compare_fu_191_a_ce0, grp_bigint_math_bigint_copy_fu_198_from_ce0, grp_bigint_math_bigint_zero_fu_220_in_r_ce0, grp_bigint_math_bigint_zero_fu_226_in_r_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp1_ce0 <= grp_bigint_math_bigint_zero_fu_226_in_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then 
            temp1_ce0 <= grp_bigint_math_bigint_zero_fu_220_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            temp1_ce0 <= grp_bigint_math_bigint_copy_fu_198_from_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            temp1_ce0 <= grp_bigint_math_bigint_compare_fu_191_a_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            temp1_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_ce0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            temp1_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_out_r_ce0;
        else 
            temp1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp1_d0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_out_r_d0, grp_bigint_math_bigint_longdiv_fu_160_out1_d0, grp_bigint_math_bigint_zero_fu_220_in_r_d0, grp_bigint_math_bigint_zero_fu_226_in_r_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp1_d0 <= grp_bigint_math_bigint_zero_fu_226_in_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then 
            temp1_d0 <= grp_bigint_math_bigint_zero_fu_220_in_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            temp1_d0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_d0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            temp1_d0 <= grp_bigint_math_bigint_longdiv_fu_160_out_r_d0;
        else 
            temp1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp1_we0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_out_r_we0, grp_bigint_math_bigint_longdiv_fu_160_out1_we0, grp_bigint_math_bigint_zero_fu_220_in_r_we0, grp_bigint_math_bigint_zero_fu_226_in_r_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            temp1_we0 <= grp_bigint_math_bigint_zero_fu_226_in_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) or (ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22))) then 
            temp1_we0 <= grp_bigint_math_bigint_zero_fu_220_in_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            temp1_we0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_we0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            temp1_we0 <= grp_bigint_math_bigint_longdiv_fu_160_out_r_we0;
        else 
            temp1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp2_address0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_220_in_r_address0, grp_bigint_math_bigint_zero_fu_226_in_r_address0, ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            temp2_address0 <= grp_bigint_math_bigint_zero_fu_226_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            temp2_address0 <= grp_bigint_math_bigint_zero_fu_220_in_r_address0;
        else 
            temp2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    temp2_ce0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_220_in_r_ce0, grp_bigint_math_bigint_zero_fu_226_in_r_ce0, ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            temp2_ce0 <= grp_bigint_math_bigint_zero_fu_226_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            temp2_ce0 <= grp_bigint_math_bigint_zero_fu_220_in_r_ce0;
        else 
            temp2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp2_d0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_220_in_r_d0, grp_bigint_math_bigint_zero_fu_226_in_r_d0, ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            temp2_d0 <= grp_bigint_math_bigint_zero_fu_226_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            temp2_d0 <= grp_bigint_math_bigint_zero_fu_220_in_r_d0;
        else 
            temp2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp2_we0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_220_in_r_we0, grp_bigint_math_bigint_zero_fu_226_in_r_we0, ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            temp2_we0 <= grp_bigint_math_bigint_zero_fu_226_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            temp2_we0 <= grp_bigint_math_bigint_zero_fu_220_in_r_we0;
        else 
            temp2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempBase_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_longdiv_fu_160_out1_address0, grp_bigint_math_bigint_longdiv_fu_160_a_address0, grp_bigint_math_bigint_mul_fu_172_b_address0, grp_bigint_math_bigint_mul_1_fu_179_a_address0, grp_bigint_math_bigint_copy_fu_198_to_r_address0, grp_bigint_math_bigint_zero_fu_220_in_r_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st29_fsm_28, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempBase_address0 <= grp_bigint_math_bigint_zero_fu_220_in_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            tempBase_address0 <= grp_bigint_math_bigint_copy_fu_198_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then 
            tempBase_address0 <= grp_bigint_math_bigint_mul_1_fu_179_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            tempBase_address0 <= grp_bigint_math_bigint_mul_fu_172_b_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            tempBase_address0 <= grp_bigint_math_bigint_longdiv_fu_160_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
            tempBase_address0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_address0;
        else 
            tempBase_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempBase_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_longdiv_fu_160_out1_ce0, grp_bigint_math_bigint_longdiv_fu_160_a_ce0, grp_bigint_math_bigint_mul_fu_172_b_ce0, grp_bigint_math_bigint_mul_1_fu_179_a_ce0, grp_bigint_math_bigint_copy_fu_198_to_r_ce0, grp_bigint_math_bigint_zero_fu_220_in_r_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st29_fsm_28, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempBase_ce0 <= grp_bigint_math_bigint_zero_fu_220_in_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            tempBase_ce0 <= grp_bigint_math_bigint_copy_fu_198_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then 
            tempBase_ce0 <= grp_bigint_math_bigint_mul_1_fu_179_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            tempBase_ce0 <= grp_bigint_math_bigint_mul_fu_172_b_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            tempBase_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
            tempBase_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_ce0;
        else 
            tempBase_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempBase_d0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_longdiv_fu_160_out1_d0, grp_bigint_math_bigint_copy_fu_198_to_r_d0, grp_bigint_math_bigint_zero_fu_220_in_r_d0, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempBase_d0 <= grp_bigint_math_bigint_zero_fu_220_in_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            tempBase_d0 <= grp_bigint_math_bigint_copy_fu_198_to_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
            tempBase_d0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_d0;
        else 
            tempBase_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempBase_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_longdiv_fu_160_out1_we0, grp_bigint_math_bigint_copy_fu_198_to_r_we0, grp_bigint_math_bigint_zero_fu_220_in_r_we0, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempBase_we0 <= grp_bigint_math_bigint_zero_fu_220_in_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9))) then 
            tempBase_we0 <= grp_bigint_math_bigint_copy_fu_198_to_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30)) then 
            tempBase_we0 <= grp_bigint_math_bigint_longdiv_fu_160_out1_we0;
        else 
            tempBase_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempExp_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_longdiv_fu_160_a_address0, grp_bigint_math_bigint_rightshift_fu_185_a_address0, grp_bigint_math_bigint_compare_fu_191_a_address0, grp_bigint_math_bigint_copy_fu_198_to_r_address0, grp_bigint_math_bigint_copy_fu_205_to_r_address0, grp_bigint_math_bigint_zero_fu_226_in_r_address0, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempExp_address0 <= grp_bigint_math_bigint_zero_fu_226_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempExp_address0 <= grp_bigint_math_bigint_copy_fu_205_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            tempExp_address0 <= grp_bigint_math_bigint_copy_fu_198_to_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            tempExp_address0 <= grp_bigint_math_bigint_compare_fu_191_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            tempExp_address0 <= grp_bigint_math_bigint_rightshift_fu_185_a_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            tempExp_address0 <= grp_bigint_math_bigint_longdiv_fu_160_a_address0;
        else 
            tempExp_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempExp_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_longdiv_fu_160_a_ce0, grp_bigint_math_bigint_rightshift_fu_185_a_ce0, grp_bigint_math_bigint_compare_fu_191_a_ce0, grp_bigint_math_bigint_copy_fu_198_to_r_ce0, grp_bigint_math_bigint_copy_fu_205_to_r_ce0, grp_bigint_math_bigint_zero_fu_226_in_r_ce0, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempExp_ce0 <= grp_bigint_math_bigint_zero_fu_226_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempExp_ce0 <= grp_bigint_math_bigint_copy_fu_205_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            tempExp_ce0 <= grp_bigint_math_bigint_copy_fu_198_to_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            tempExp_ce0 <= grp_bigint_math_bigint_compare_fu_191_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            tempExp_ce0 <= grp_bigint_math_bigint_rightshift_fu_185_a_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            tempExp_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_a_ce0;
        else 
            tempExp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempExp_d0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_copy_fu_198_to_r_d0, grp_bigint_math_bigint_copy_fu_205_to_r_d0, grp_bigint_math_bigint_zero_fu_226_in_r_d0, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempExp_d0 <= grp_bigint_math_bigint_zero_fu_226_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempExp_d0 <= grp_bigint_math_bigint_copy_fu_205_to_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            tempExp_d0 <= grp_bigint_math_bigint_copy_fu_198_to_r_d0;
        else 
            tempExp_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempExp_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_copy_fu_198_to_r_we0, grp_bigint_math_bigint_copy_fu_205_to_r_we0, grp_bigint_math_bigint_zero_fu_226_in_r_we0, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempExp_we0 <= grp_bigint_math_bigint_zero_fu_226_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempExp_we0 <= grp_bigint_math_bigint_copy_fu_205_to_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            tempExp_we0 <= grp_bigint_math_bigint_copy_fu_198_to_r_we0;
        else 
            tempExp_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempMod_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_b_address0, grp_bigint_math_bigint_copy_fu_212_to_r_address0, grp_bigint_math_bigint_zero_fu_232_in_r_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempMod_address0 <= grp_bigint_math_bigint_zero_fu_232_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempMod_address0 <= grp_bigint_math_bigint_copy_fu_212_to_r_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            tempMod_address0 <= grp_bigint_math_bigint_longdiv_fu_160_b_address0;
        else 
            tempMod_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempMod_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_b_ce0, grp_bigint_math_bigint_copy_fu_212_to_r_ce0, grp_bigint_math_bigint_zero_fu_232_in_r_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempMod_ce0 <= grp_bigint_math_bigint_zero_fu_232_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempMod_ce0 <= grp_bigint_math_bigint_copy_fu_212_to_r_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            tempMod_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_b_ce0;
        else 
            tempMod_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempMod_d0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_copy_fu_212_to_r_d0, grp_bigint_math_bigint_zero_fu_232_in_r_d0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempMod_d0 <= grp_bigint_math_bigint_zero_fu_232_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempMod_d0 <= grp_bigint_math_bigint_copy_fu_212_to_r_d0;
        else 
            tempMod_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempMod_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_copy_fu_212_to_r_we0, grp_bigint_math_bigint_zero_fu_232_in_r_we0, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempMod_we0 <= grp_bigint_math_bigint_zero_fu_232_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempMod_we0 <= grp_bigint_math_bigint_copy_fu_212_to_r_we0;
        else 
            tempMod_we0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_address0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_out_r_address0, grp_bigint_math_bigint_longdiv_fu_160_a_address0, grp_bigint_math_bigint_mul_fu_172_out_r_address0, grp_bigint_math_bigint_mul_1_fu_179_out_r_address0, grp_bigint_math_bigint_rightshift_fu_185_out_r_address0, grp_bigint_math_bigint_copy_fu_198_from_address0, grp_bigint_math_bigint_zero_fu_220_in_r_address0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st29_fsm_28, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st27_fsm_26)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            temp_address0 <= ap_const_lv64_FF(8 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26))) then 
            temp_address0 <= grp_bigint_math_bigint_zero_fu_220_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            temp_address0 <= grp_bigint_math_bigint_copy_fu_198_from_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            temp_address0 <= grp_bigint_math_bigint_rightshift_fu_185_out_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then 
            temp_address0 <= grp_bigint_math_bigint_mul_1_fu_179_out_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            temp_address0 <= grp_bigint_math_bigint_mul_fu_172_out_r_address0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            temp_address0 <= grp_bigint_math_bigint_longdiv_fu_160_a_address0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            temp_address0 <= grp_bigint_math_bigint_longdiv_fu_160_out_r_address0;
        else 
            temp_address0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_ce0_assign_proc : process(grp_bigint_math_bigint_zero_fu_220_ap_done, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_zero_fu_226_ap_done, grp_bigint_math_bigint_compare_fu_191_ap_done, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_out_r_ce0, grp_bigint_math_bigint_longdiv_fu_160_a_ce0, grp_bigint_math_bigint_mul_fu_172_out_r_ce0, grp_bigint_math_bigint_mul_1_fu_179_out_r_ce0, grp_bigint_math_bigint_rightshift_fu_185_out_r_ce0, grp_bigint_math_bigint_copy_fu_198_from_ce0, grp_bigint_math_bigint_zero_fu_220_in_r_ce0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st31_fsm_30, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st29_fsm_28, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st25_fsm_24, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st27_fsm_26)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done))))) then 
            temp_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26))) then 
            temp_ce0 <= grp_bigint_math_bigint_zero_fu_220_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st25_fsm_24)) then 
            temp_ce0 <= grp_bigint_math_bigint_copy_fu_198_from_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            temp_ce0 <= grp_bigint_math_bigint_rightshift_fu_185_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then 
            temp_ce0 <= grp_bigint_math_bigint_mul_1_fu_179_out_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            temp_ce0 <= grp_bigint_math_bigint_mul_fu_172_out_r_ce0;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((tmp_52_reg_268 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st31_fsm_30))) then 
            temp_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_a_ce0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            temp_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_out_r_ce0;
        else 
            temp_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    temp_d0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_longdiv_fu_160_out_r_d0, grp_bigint_math_bigint_mul_fu_172_out_r_d0, grp_bigint_math_bigint_mul_1_fu_179_out_r_d0, grp_bigint_math_bigint_rightshift_fu_185_out_r_d0, grp_bigint_math_bigint_zero_fu_220_in_r_d0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st29_fsm_28, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st27_fsm_26)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            temp_d0 <= ap_const_lv8_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26))) then 
            temp_d0 <= grp_bigint_math_bigint_zero_fu_220_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            temp_d0 <= grp_bigint_math_bigint_rightshift_fu_185_out_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then 
            temp_d0 <= grp_bigint_math_bigint_mul_1_fu_179_out_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            temp_d0 <= grp_bigint_math_bigint_mul_fu_172_out_r_d0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            temp_d0 <= grp_bigint_math_bigint_longdiv_fu_160_out_r_d0;
        else 
            temp_d0 <= "XXXXXXXX";
        end if; 
    end process;


    temp_we0_assign_proc : process(grp_bigint_math_bigint_zero_fu_220_ap_done, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_zero_fu_226_ap_done, grp_bigint_math_bigint_compare_fu_191_ap_done, grp_bigint_math_bigint_longdiv_fu_160_out_r_we0, grp_bigint_math_bigint_mul_fu_172_out_r_we0, grp_bigint_math_bigint_mul_1_fu_179_out_r_we0, grp_bigint_math_bigint_rightshift_fu_185_out_r_we0, grp_bigint_math_bigint_zero_fu_220_in_r_we0, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st29_fsm_28, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st5_fsm_4, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st27_fsm_26)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_191_ap_done)))))) then 
            temp_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st27_fsm_26))) then 
            temp_we0 <= grp_bigint_math_bigint_zero_fu_220_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            temp_we0 <= grp_bigint_math_bigint_rightshift_fu_185_out_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st29_fsm_28)) then 
            temp_we0 <= grp_bigint_math_bigint_mul_1_fu_179_out_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            temp_we0 <= grp_bigint_math_bigint_mul_fu_172_out_r_we0;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
            temp_we0 <= grp_bigint_math_bigint_longdiv_fu_160_out_r_we0;
        else 
            temp_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_51_fu_245_p2 <= "1" when (grp_bigint_math_bigint_compare_fu_191_ap_return = ap_const_lv2_1) else "0";
    two_addr_reg_260 <= ap_const_lv64_FF(8 - 1 downto 0);

    two_address0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, two_addr_reg_260, ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_longdiv_fu_160_b_address0, grp_bigint_math_bigint_zero_fu_220_in_r_address0, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            two_address0 <= two_addr_reg_260;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            two_address0 <= ap_const_lv64_FF(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            two_address0 <= grp_bigint_math_bigint_zero_fu_220_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            two_address0 <= grp_bigint_math_bigint_longdiv_fu_160_b_address0;
        else 
            two_address0 <= "XXXXXXXX";
        end if; 
    end process;


    two_ce0_assign_proc : process(grp_bigint_math_bigint_zero_fu_220_ap_done, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_zero_fu_226_ap_done, ap_sig_cseq_ST_st7_fsm_6, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_ap_done, grp_bigint_math_bigint_longdiv_fu_160_b_ce0, grp_bigint_math_bigint_zero_fu_220_in_r_ce0, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((not((tmp_52_reg_268 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_bigint_math_bigint_longdiv_fu_160_ap_done)))))) then 
            two_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            two_ce0 <= grp_bigint_math_bigint_zero_fu_220_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            two_ce0 <= grp_bigint_math_bigint_longdiv_fu_160_b_ce0;
        else 
            two_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    two_d0_assign_proc : process(ap_sig_cseq_ST_st6_fsm_5, ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_220_in_r_d0, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) or (ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20))) then 
            two_d0 <= ap_const_lv8_2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            two_d0 <= grp_bigint_math_bigint_zero_fu_220_in_r_d0;
        else 
            two_d0 <= "XXXXXXXX";
        end if; 
    end process;


    two_we0_assign_proc : process(grp_bigint_math_bigint_zero_fu_220_ap_done, ap_sig_cseq_ST_st6_fsm_5, grp_bigint_math_bigint_zero_fu_226_ap_done, ap_sig_cseq_ST_st7_fsm_6, tmp_52_reg_268, grp_bigint_math_bigint_longdiv_fu_160_ap_done, grp_bigint_math_bigint_zero_fu_220_in_r_we0, ap_sig_cseq_ST_st21_fsm_20)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_220_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_226_ap_done)))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((not((tmp_52_reg_268 = ap_const_lv1_0)) and (ap_const_logic_0 = grp_bigint_math_bigint_longdiv_fu_160_ap_done)))))) then 
            two_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            two_we0 <= grp_bigint_math_bigint_zero_fu_220_in_r_we0;
        else 
            two_we0 <= ap_const_logic_0;
        end if; 
    end process;


    zero_1_address0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_compare_fu_191_b_address0, grp_bigint_math_bigint_zero_fu_220_in_r_address0, grp_bigint_math_bigint_zero_fu_232_in_r_address0, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            zero_1_address0 <= grp_bigint_math_bigint_zero_fu_232_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            zero_1_address0 <= grp_bigint_math_bigint_zero_fu_220_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            zero_1_address0 <= grp_bigint_math_bigint_compare_fu_191_b_address0;
        else 
            zero_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    zero_1_ce0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_compare_fu_191_b_ce0, grp_bigint_math_bigint_zero_fu_220_in_r_ce0, grp_bigint_math_bigint_zero_fu_232_in_r_ce0, ap_sig_cseq_ST_st23_fsm_22, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            zero_1_ce0 <= grp_bigint_math_bigint_zero_fu_232_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            zero_1_ce0 <= grp_bigint_math_bigint_zero_fu_220_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            zero_1_ce0 <= grp_bigint_math_bigint_compare_fu_191_b_ce0;
        else 
            zero_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    zero_1_d0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_zero_fu_220_in_r_d0, grp_bigint_math_bigint_zero_fu_232_in_r_d0, ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            zero_1_d0 <= grp_bigint_math_bigint_zero_fu_232_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            zero_1_d0 <= grp_bigint_math_bigint_zero_fu_220_in_r_d0;
        else 
            zero_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    zero_1_we0_assign_proc : process(ap_sig_cseq_ST_st4_fsm_3, grp_bigint_math_bigint_zero_fu_220_in_r_we0, grp_bigint_math_bigint_zero_fu_232_in_r_we0, ap_sig_cseq_ST_st23_fsm_22)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st23_fsm_22)) then 
            zero_1_we0 <= grp_bigint_math_bigint_zero_fu_232_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            zero_1_we0 <= grp_bigint_math_bigint_zero_fu_220_in_r_we0;
        else 
            zero_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
