-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bigint_math_bigint_mul is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    a_ce0 : OUT STD_LOGIC;
    a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b_ce0 : OUT STD_LOGIC;
    b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of bigint_math_bigint_mul is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_st21_fsm_20 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_3FE : STD_LOGIC_VECTOR (9 downto 0) := "1111111110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_38 : BOOLEAN;
    signal sum_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_243 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_67 : BOOLEAN;
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_74 : BOOLEAN;
    signal i_8_fu_253_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_8_reg_458 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_84 : BOOLEAN;
    signal tmp_i_fu_259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_reg_463 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i_fu_247_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_9_fu_270_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_9_reg_476 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_101 : BOOLEAN;
    signal tmp_i5_fu_276_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i5_reg_481 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i4_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_287_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_4_reg_494 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_117 : BOOLEAN;
    signal k_fu_293_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal k_reg_499 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond1_fu_281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tempB_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_load_reg_509 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_133 : BOOLEAN;
    signal tmp_cast_fu_304_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_cast_reg_514 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_5_fu_314_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_5_reg_522 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_144 : BOOLEAN;
    signal exitcond_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal prod_fu_331_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal prod_reg_532 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_158 : BOOLEAN;
    signal carry_fu_345_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_reg_538 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_361_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_544 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_addr_1_reg_548 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_385_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_553 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_addr_2_reg_557 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_404_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_reg_562 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_182 : BOOLEAN;
    signal sum_addr_3_reg_567 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_191 : BOOLEAN;
    signal tmp_10_fu_427_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_reg_572 : STD_LOGIC_VECTOR (0 downto 0);
    signal sum_addr_reg_576 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_fu_450_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_reg_581 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_207 : BOOLEAN;
    signal grp_fu_237_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_216 : BOOLEAN;
    signal sum_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sum_ce0 : STD_LOGIC;
    signal sum_we0 : STD_LOGIC;
    signal sum_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_ce0 : STD_LOGIC;
    signal tempA_we0 : STD_LOGIC;
    signal tempA_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_ce0 : STD_LOGIC;
    signal tempB_we0 : STD_LOGIC;
    signal tempB_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_210_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_210_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_210_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_210_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_210_out_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_210_out_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_210_out_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_add_1_fu_210_out_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_210_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_add_1_fu_210_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_217_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_217_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_223_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_223_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_223_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_223_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_223_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_223_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_223_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_223_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_156 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_282 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_294 : BOOLEAN;
    signal i_i3_reg_167 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_303 : BOOLEAN;
    signal i_reg_178 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_314 : BOOLEAN;
    signal ap_sig_cseq_ST_st21_fsm_20 : STD_LOGIC;
    signal ap_sig_322 : BOOLEAN;
    signal j_reg_189 : STD_LOGIC_VECTOR (8 downto 0);
    signal k5_reg_200 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_reg_grp_bigint_math_bigint_add_1_fu_210_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_339 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_354 : BOOLEAN;
    signal ap_reg_grp_bigint_math_bigint_zero_fu_223_ap_start : STD_LOGIC := '0';
    signal tmp_fu_299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_fu_326_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_38_fu_367_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_230_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_381 : BOOLEAN;
    signal tmp_cast_fu_304_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_320_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal prod_fu_331_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_cast_fu_336_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_340_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_340_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_340_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_fu_355_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_cast_fu_372_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_cast_fu_376_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_fu_379_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_fu_393_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_51_cast_fu_414_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_52_cast_fu_418_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_46_fu_421_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal k5_cast_fu_435_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_47_fu_439_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_34_fu_340_p10 : STD_LOGIC_VECTOR (15 downto 0);

    component bigint_math_bigint_add_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_zero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_we0 : OUT STD_LOGIC;
        in_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add_tempA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    sum_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sum_address0,
        ce0 => sum_ce0,
        we0 => sum_we0,
        d0 => sum_d0,
        q0 => sum_q0);

    tempA_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempA_address0,
        ce0 => tempA_ce0,
        we0 => tempA_we0,
        d0 => tempA_d0,
        q0 => tempA_q0);

    tempB_U : component bigint_math_bigint_add_tempA
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempB_address0,
        ce0 => tempB_ce0,
        we0 => tempB_we0,
        d0 => tempB_d0,
        q0 => tempB_q0);

    grp_bigint_math_bigint_add_1_fu_210 : component bigint_math_bigint_add_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_add_1_fu_210_ap_start,
        ap_done => grp_bigint_math_bigint_add_1_fu_210_ap_done,
        ap_idle => grp_bigint_math_bigint_add_1_fu_210_ap_idle,
        ap_ready => grp_bigint_math_bigint_add_1_fu_210_ap_ready,
        out_r_address0 => grp_bigint_math_bigint_add_1_fu_210_out_r_address0,
        out_r_ce0 => grp_bigint_math_bigint_add_1_fu_210_out_r_ce0,
        out_r_we0 => grp_bigint_math_bigint_add_1_fu_210_out_r_we0,
        out_r_d0 => grp_bigint_math_bigint_add_1_fu_210_out_r_d0,
        out_r_q0 => out_r_q0,
        b_address0 => grp_bigint_math_bigint_add_1_fu_210_b_address0,
        b_ce0 => grp_bigint_math_bigint_add_1_fu_210_b_ce0,
        b_q0 => sum_q0);

    grp_bigint_math_bigint_zero_fu_217 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_217_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_217_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_217_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_217_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_217_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_217_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_217_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_217_in_r_d0);

    grp_bigint_math_bigint_zero_fu_223 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_223_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_223_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_223_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_223_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_223_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_223_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_223_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_223_in_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_add_1_fu_210_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_add_1_fu_210_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and not((ap_const_lv1_0 = exitcond_fu_308_p2)))) then 
                    ap_reg_grp_bigint_math_bigint_add_1_fu_210_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_add_1_fu_210_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_add_1_fu_210_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond_i4_fu_264_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_217_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_223_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_223_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond_i4_fu_264_p2))))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_223_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_223_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_223_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i3_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((exitcond_i_fu_247_p2 = ap_const_lv1_0)))) then 
                i_i3_reg_167 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                i_i3_reg_167 <= i_9_reg_476;
            end if; 
        end if;
    end process;

    i_i_reg_156_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                i_i_reg_156 <= i_8_reg_458;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_223_ap_done))))) then 
                i_i_reg_156 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_reg_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20) and not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done)))) then 
                i_reg_178 <= i_4_reg_494;
            elsif ((not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_223_ap_done))) and (ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6))) then 
                i_reg_178 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    j_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                j_reg_189 <= j_5_reg_522;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                j_reg_189 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    k5_reg_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
                k5_reg_200 <= grp_fu_237_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
                k5_reg_200 <= k_reg_499;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then
                carry_reg_538 <= tmp_34_fu_340_p2(15 downto 8);
                prod_reg_532 <= prod_fu_331_p2;
                tmp_37_reg_544 <= tmp_37_fu_361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then
                i_4_reg_494 <= i_4_fu_287_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_8_reg_458 <= i_8_fu_253_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                i_9_reg_476 <= i_9_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                j_5_reg_522 <= j_5_fu_314_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = exitcond1_fu_281_p2))) then
                k_reg_499 <= k_fu_293_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then
                reg_243 <= sum_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_lv1_0 = tmp_37_fu_361_p2))) then
                sum_addr_1_reg_548 <= tmp_38_fu_367_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and not((ap_const_lv1_0 = tmp_9_fu_385_p3)))) then
                sum_addr_2_reg_557 <= tmp_42_fu_399_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                sum_addr_3_reg_567 <= tmp_s_fu_409_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and not((ap_const_lv1_0 = tmp_10_fu_427_p3)))) then
                sum_addr_reg_576 <= tmp_48_fu_445_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                tempB_load_reg_509 <= tempB_q0;
                    tmp_cast_reg_514(7 downto 0) <= tmp_cast_fu_304_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then
                tmp_10_reg_572 <= tmp_46_fu_421_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then
                tmp_44_reg_562 <= tmp_44_fu_404_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then
                tmp_50_reg_581 <= tmp_50_fu_450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                tmp_9_reg_553 <= tmp_40_fu_379_p2(8 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond_i4_fu_264_p2))) then
                    tmp_i5_reg_481(8 downto 0) <= tmp_i5_fu_276_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond_i_fu_247_p2 = ap_const_lv1_0))) then
                    tmp_i_reg_463(8 downto 0) <= tmp_i_fu_259_p1(8 downto 0);
            end if;
        end if;
    end process;
    tmp_i_reg_463(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_i5_reg_481(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_cast_reg_514(15 downto 8) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_i_fu_247_p2, exitcond_i4_fu_264_p2, exitcond1_fu_281_p2, exitcond_fu_308_p2, tmp_37_fu_361_p2, grp_bigint_math_bigint_add_1_fu_210_ap_done, grp_bigint_math_bigint_zero_fu_217_ap_done, grp_bigint_math_bigint_zero_fu_223_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_223_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((exitcond_i_fu_247_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond_i4_fu_264_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st7_fsm_6 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_223_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_lv1_0 = exitcond1_fu_281_p2))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_lv1_0 = exitcond_fu_308_p2))) then
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st11_fsm_10 => 
                if (not((ap_const_lv1_0 = tmp_37_fu_361_p2))) then
                    ap_NS_fsm <= ap_ST_st18_fsm_17;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st17_fsm_16;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st19_fsm_18 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_add_1_fu_210_ap_done))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                end if;
            when ap_ST_st20_fsm_19 => 
                ap_NS_fsm <= ap_ST_st21_fsm_20;
            when ap_ST_st21_fsm_20 => 
                if (not((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_217_ap_done))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st21_fsm_20;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    a_address0 <= tmp_i_fu_259_p1(8 - 1 downto 0);

    a_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            a_ce0 <= ap_const_logic_1;
        else 
            a_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st8_fsm_7, exitcond1_fu_281_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond1_fu_281_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, exitcond1_fu_281_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and not((ap_const_lv1_0 = exitcond1_fu_281_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_101_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_101 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_117_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_117 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_133_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_133 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_144_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_144 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_158_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_158 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_182_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_182 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_191_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_191 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_207_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_207 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    ap_sig_216_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_216 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    ap_sig_282_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_282 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_294_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_294 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_303_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_303 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_314_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_314 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_322_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_322 <= (ap_const_lv1_1 = ap_CS_fsm(20 downto 20));
    end process;


    ap_sig_339_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_339 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    ap_sig_354_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_354 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    ap_sig_38_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_38 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_381_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_381 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_67_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_67 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_74_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_74 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_84_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_84 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_144)
    begin
        if (ap_sig_144) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_158)
    begin
        if (ap_sig_158) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_67)
    begin
        if (ap_sig_67) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_182)
    begin
        if (ap_sig_182) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_381)
    begin
        if (ap_sig_381) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_191)
    begin
        if (ap_sig_191) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_74)
    begin
        if (ap_sig_74) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_207)
    begin
        if (ap_sig_207) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_216)
    begin
        if (ap_sig_216) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_339)
    begin
        if (ap_sig_339) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_38)
    begin
        if (ap_sig_38) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_354)
    begin
        if (ap_sig_354) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st21_fsm_20_assign_proc : process(ap_sig_322)
    begin
        if (ap_sig_322) then 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st21_fsm_20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_282)
    begin
        if (ap_sig_282) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_84)
    begin
        if (ap_sig_84) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_294)
    begin
        if (ap_sig_294) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_101)
    begin
        if (ap_sig_101) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_303)
    begin
        if (ap_sig_303) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_314)
    begin
        if (ap_sig_314) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_117)
    begin
        if (ap_sig_117) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_133)
    begin
        if (ap_sig_133) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    b_address0 <= tmp_i5_fu_276_p1(8 - 1 downto 0);

    b_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            b_ce0 <= ap_const_logic_1;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    carry_fu_345_p4 <= tmp_34_fu_340_p2(15 downto 8);
    exitcond1_fu_281_p2 <= "1" when (i_reg_178 = ap_const_lv9_100) else "0";
    exitcond_fu_308_p2 <= "1" when (j_reg_189 = ap_const_lv9_100) else "0";
    exitcond_i4_fu_264_p2 <= "1" when (i_i3_reg_167 = ap_const_lv9_100) else "0";
    exitcond_i_fu_247_p2 <= "1" when (i_i_reg_156 = ap_const_lv9_100) else "0";
    grp_bigint_math_bigint_add_1_fu_210_ap_start <= ap_reg_grp_bigint_math_bigint_add_1_fu_210_ap_start;
    grp_bigint_math_bigint_zero_fu_217_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_217_ap_start;
    grp_bigint_math_bigint_zero_fu_223_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_223_ap_start;
    grp_fu_230_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(sum_q0));
    grp_fu_237_p2 <= std_logic_vector(unsigned(k5_reg_200) + unsigned(ap_const_lv9_1FF));
    i_4_fu_287_p2 <= std_logic_vector(unsigned(i_reg_178) + unsigned(ap_const_lv9_1));
    i_8_fu_253_p2 <= std_logic_vector(unsigned(i_i_reg_156) + unsigned(ap_const_lv9_1));
    i_9_fu_270_p2 <= std_logic_vector(unsigned(i_i3_reg_167) + unsigned(ap_const_lv9_1));
    j_5_fu_314_p2 <= std_logic_vector(unsigned(j_reg_189) + unsigned(ap_const_lv9_1));
        k5_cast_fu_435_p1 <= std_logic_vector(resize(signed(k5_reg_200),10));

    k_fu_293_p2 <= std_logic_vector(unsigned(ap_const_lv9_FF) - unsigned(i_reg_178));

    out_r_address0_assign_proc : process(grp_bigint_math_bigint_add_1_fu_210_out_r_address0, grp_bigint_math_bigint_zero_fu_217_in_r_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_address0 <= grp_bigint_math_bigint_zero_fu_217_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            out_r_address0 <= grp_bigint_math_bigint_add_1_fu_210_out_r_address0;
        else 
            out_r_address0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(grp_bigint_math_bigint_add_1_fu_210_out_r_ce0, grp_bigint_math_bigint_zero_fu_217_in_r_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_ce0 <= grp_bigint_math_bigint_zero_fu_217_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            out_r_ce0 <= grp_bigint_math_bigint_add_1_fu_210_out_r_ce0;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(grp_bigint_math_bigint_add_1_fu_210_out_r_d0, grp_bigint_math_bigint_zero_fu_217_in_r_d0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_d0 <= grp_bigint_math_bigint_zero_fu_217_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            out_r_d0 <= grp_bigint_math_bigint_add_1_fu_210_out_r_d0;
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(grp_bigint_math_bigint_add_1_fu_210_out_r_we0, grp_bigint_math_bigint_zero_fu_217_in_r_we0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st19_fsm_18)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_we0 <= grp_bigint_math_bigint_zero_fu_217_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            out_r_we0 <= grp_bigint_math_bigint_add_1_fu_210_out_r_we0;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    prod_fu_331_p1 <= tempA_q0;
    prod_fu_331_p2 <= std_logic_vector(resize(unsigned(std_logic_vector(signed(tempB_load_reg_509) * signed(prod_fu_331_p1))), 8));

    sum_address0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st11_fsm_10, sum_addr_1_reg_548, sum_addr_2_reg_557, ap_sig_cseq_ST_st13_fsm_12, sum_addr_3_reg_567, ap_sig_cseq_ST_st15_fsm_14, sum_addr_reg_576, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, grp_bigint_math_bigint_add_1_fu_210_b_address0, grp_bigint_math_bigint_zero_fu_217_in_r_address0, grp_bigint_math_bigint_zero_fu_223_in_r_address0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st19_fsm_18, tmp_38_fu_367_p1, tmp_42_fu_399_p1, tmp_s_fu_409_p1, tmp_48_fu_445_p1, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            sum_address0 <= sum_addr_3_reg_567;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            sum_address0 <= sum_addr_reg_576;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            sum_address0 <= sum_addr_1_reg_548;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            sum_address0 <= sum_addr_2_reg_557;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            sum_address0 <= tmp_48_fu_445_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            sum_address0 <= tmp_s_fu_409_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            sum_address0 <= tmp_42_fu_399_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            sum_address0 <= tmp_38_fu_367_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            sum_address0 <= grp_bigint_math_bigint_zero_fu_223_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sum_address0 <= grp_bigint_math_bigint_zero_fu_217_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            sum_address0 <= grp_bigint_math_bigint_add_1_fu_210_b_address0;
        else 
            sum_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sum_ce0_assign_proc : process(ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, grp_bigint_math_bigint_add_1_fu_210_b_ce0, grp_bigint_math_bigint_zero_fu_217_in_r_ce0, grp_bigint_math_bigint_zero_fu_223_in_r_ce0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st19_fsm_18, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) or (ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
            sum_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            sum_ce0 <= grp_bigint_math_bigint_zero_fu_223_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sum_ce0 <= grp_bigint_math_bigint_zero_fu_217_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18)) then 
            sum_ce0 <= grp_bigint_math_bigint_add_1_fu_210_b_ce0;
        else 
            sum_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    sum_d0_assign_proc : process(tmp_44_reg_562, ap_sig_cseq_ST_st13_fsm_12, tmp_50_reg_581, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, grp_bigint_math_bigint_zero_fu_217_in_r_d0, grp_bigint_math_bigint_zero_fu_223_in_r_d0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st21_fsm_20, grp_fu_230_p2, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then 
            sum_d0 <= tmp_50_reg_581;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            sum_d0 <= tmp_44_reg_562;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16))) then 
            sum_d0 <= grp_fu_230_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            sum_d0 <= grp_bigint_math_bigint_zero_fu_223_in_r_d0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sum_d0 <= grp_bigint_math_bigint_zero_fu_217_in_r_d0;
        else 
            sum_d0 <= "XXXXXXXX";
        end if; 
    end process;


    sum_we0_assign_proc : process(tmp_37_reg_544, tmp_9_reg_553, ap_sig_cseq_ST_st13_fsm_12, tmp_10_reg_572, ap_sig_cseq_ST_st17_fsm_16, ap_sig_cseq_ST_st18_fsm_17, grp_bigint_math_bigint_zero_fu_217_in_r_we0, grp_bigint_math_bigint_zero_fu_223_in_r_we0, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st21_fsm_20, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and not((ap_const_lv1_0 = tmp_9_reg_553))) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16) and not((ap_const_lv1_0 = tmp_10_reg_572))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and (ap_const_lv1_0 = tmp_37_reg_544)))) then 
            sum_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            sum_we0 <= grp_bigint_math_bigint_zero_fu_223_in_r_we0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st21_fsm_20)) then 
            sum_we0 <= grp_bigint_math_bigint_zero_fu_217_in_r_we0;
        else 
            sum_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempA_address0_assign_proc : process(tmp_i_reg_463, ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_zero_fu_217_in_r_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, tmp_32_fu_326_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_address0 <= tmp_i_reg_463(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            tempA_address0 <= tmp_32_fu_326_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_address0 <= grp_bigint_math_bigint_zero_fu_217_in_r_address0;
        else 
            tempA_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempA_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, grp_bigint_math_bigint_zero_fu_217_in_r_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            tempA_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_ce0 <= grp_bigint_math_bigint_zero_fu_217_in_r_ce0;
        else 
            tempA_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempA_d0_assign_proc : process(a_q0, grp_bigint_math_bigint_zero_fu_217_in_r_d0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_d0 <= a_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_d0 <= grp_bigint_math_bigint_zero_fu_217_in_r_d0;
        else 
            tempA_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempA_we0_assign_proc : process(grp_bigint_math_bigint_zero_fu_217_in_r_we0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3))) then 
            tempA_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_we0 <= grp_bigint_math_bigint_zero_fu_217_in_r_we0;
        else 
            tempA_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_address0_assign_proc : process(tmp_i5_reg_481, ap_sig_cseq_ST_st8_fsm_7, grp_bigint_math_bigint_zero_fu_223_in_r_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5, tmp_fu_299_p1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            tempB_address0 <= tmp_i5_reg_481(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            tempB_address0 <= tmp_fu_299_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_address0 <= grp_bigint_math_bigint_zero_fu_223_in_r_address0;
        else 
            tempB_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_ce0_assign_proc : process(ap_sig_cseq_ST_st8_fsm_7, grp_bigint_math_bigint_zero_fu_223_in_r_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            tempB_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_ce0 <= grp_bigint_math_bigint_zero_fu_223_in_r_ce0;
        else 
            tempB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_d0_assign_proc : process(b_q0, grp_bigint_math_bigint_zero_fu_223_in_r_d0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            tempB_d0 <= b_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_d0 <= grp_bigint_math_bigint_zero_fu_223_in_r_d0;
        else 
            tempB_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_we0_assign_proc : process(grp_bigint_math_bigint_zero_fu_223_in_r_we0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            tempB_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_we0 <= grp_bigint_math_bigint_zero_fu_223_in_r_we0;
        else 
            tempB_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_427_p3 <= tmp_46_fu_421_p2(8 downto 8);
    tmp_31_fu_320_p2 <= std_logic_vector(unsigned(ap_const_lv9_FF) - unsigned(j_reg_189));
    tmp_32_fu_326_p1 <= std_logic_vector(resize(unsigned(tmp_31_fu_320_p2),64));
    tmp_33_cast_fu_336_p0 <= tempA_q0;
    tmp_34_fu_340_p0 <= tmp_cast_reg_514(8 - 1 downto 0);
    tmp_34_fu_340_p1 <= tmp_34_fu_340_p10(8 - 1 downto 0);
    tmp_34_fu_340_p10 <= std_logic_vector(resize(unsigned(tmp_33_cast_fu_336_p0),16));
    tmp_34_fu_340_p2 <= std_logic_vector(resize(unsigned(tmp_34_fu_340_p0) * unsigned(tmp_34_fu_340_p1), 16));
    tmp_36_fu_355_p2 <= (carry_fu_345_p4 or prod_fu_331_p2);
    tmp_37_fu_361_p2 <= "1" when (tmp_36_fu_355_p2 = ap_const_lv8_0) else "0";
        tmp_38_fu_367_p1 <= std_logic_vector(resize(signed(k5_reg_200),64));

    tmp_39_cast_fu_372_p1 <= std_logic_vector(resize(unsigned(sum_q0),9));
    tmp_40_cast_fu_376_p1 <= std_logic_vector(resize(unsigned(prod_reg_532),9));
    tmp_40_fu_379_p2 <= std_logic_vector(unsigned(tmp_39_cast_fu_372_p1) + unsigned(tmp_40_cast_fu_376_p1));
    tmp_41_fu_393_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(k5_reg_200));
        tmp_42_fu_399_p1 <= std_logic_vector(resize(signed(tmp_41_fu_393_p2),64));

    tmp_44_fu_404_p2 <= std_logic_vector(unsigned(reg_243) + unsigned(prod_reg_532));
    tmp_46_fu_421_p2 <= std_logic_vector(unsigned(tmp_51_cast_fu_414_p1) + unsigned(tmp_52_cast_fu_418_p1));
    tmp_47_fu_439_p2 <= std_logic_vector(signed(ap_const_lv10_3FE) + signed(k5_cast_fu_435_p1));
        tmp_48_fu_445_p1 <= std_logic_vector(resize(signed(tmp_47_fu_439_p2),64));

    tmp_50_fu_450_p2 <= std_logic_vector(unsigned(reg_243) + unsigned(carry_reg_538));
    tmp_51_cast_fu_414_p1 <= std_logic_vector(resize(unsigned(sum_q0),9));
    tmp_52_cast_fu_418_p1 <= std_logic_vector(resize(unsigned(carry_reg_538),9));
    tmp_9_fu_385_p3 <= tmp_40_fu_379_p2(8 downto 8);
    tmp_cast_fu_304_p0 <= tempB_q0;
    tmp_cast_fu_304_p1 <= std_logic_vector(resize(unsigned(tmp_cast_fu_304_p0),16));
    tmp_fu_299_p1 <= std_logic_vector(resize(unsigned(k_fu_293_p2),64));
    tmp_i5_fu_276_p1 <= std_logic_vector(resize(unsigned(i_i3_reg_167),64));
    tmp_i_fu_259_p1 <= std_logic_vector(resize(unsigned(i_i_reg_156),64));
        tmp_s_fu_409_p1 <= std_logic_vector(resize(signed(grp_fu_237_p2),64));

end behav;
