-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.2
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bigint_math_bigint_sub_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    b_ce0 : OUT STD_LOGIC;
    b_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of bigint_math_bigint_sub_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv9_FE : STD_LOGIC_VECTOR (8 downto 0) := "011111110";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_33 : BOOLEAN;
    signal i_3_fu_295_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_3_reg_405 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_57 : BOOLEAN;
    signal tmp_i_fu_301_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_reg_410 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_312_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_4_reg_423 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_74 : BOOLEAN;
    signal tmp_i3_fu_318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i3_reg_428 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond_i2_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_438 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_90 : BOOLEAN;
    signal grp_bigint_math_bigint_zero_fu_244_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_238_ap_done : STD_LOGIC;
    signal i_cast_fu_329_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_cast_reg_442 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_106 : BOOLEAN;
    signal tmp_4_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_reg_450 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_333_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tempA_addr_1_reg_457 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_load_reg_467 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_127 : BOOLEAN;
    signal tmp_5_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_472 : STD_LOGIC_VECTOR (0 downto 0);
    signal tempA_addr_2_reg_476 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_143 : BOOLEAN;
    signal carry_addr_reg_485 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_fu_358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_490 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_156 : BOOLEAN;
    signal tempA_addr_3_reg_495 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_3_fu_384_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_167 : BOOLEAN;
    signal exitcond_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_addr_1_gep_fu_157_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_addr_1_reg_511 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_263_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_2_reg_516 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_183 : BOOLEAN;
    signal indvars_iv_next_fu_390_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal indvars_iv_next_reg_521 : STD_LOGIC_VECTOR (8 downto 0);
    signal tempA_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_ce0 : STD_LOGIC;
    signal tempA_we0 : STD_LOGIC;
    signal tempA_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempA_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempB_ce0 : STD_LOGIC;
    signal tempB_we0 : STD_LOGIC;
    signal tempB_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_ce0 : STD_LOGIC;
    signal carry_we0 : STD_LOGIC;
    signal carry_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal carry_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_238_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_238_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_238_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_238_a_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_238_a_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_238_b_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_compare_fu_238_b_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_compare_fu_238_ap_return : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_bigint_math_bigint_zero_fu_244_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_244_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_244_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_244_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_244_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_244_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_244_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_250_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_250_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_250_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_250_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_250_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_250_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_250_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_250_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_256_ap_start : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_256_ap_done : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_256_ap_idle : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_256_ap_ready : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_256_in_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_bigint_math_bigint_zero_fu_256_in_r_ce0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_256_in_r_we0 : STD_LOGIC;
    signal grp_bigint_math_bigint_zero_fu_256_in_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_reg_172 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_258 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_271 : BOOLEAN;
    signal i_i1_reg_183 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_280 : BOOLEAN;
    signal indvars_iv_reg_194 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_291 : BOOLEAN;
    signal i_reg_206 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_2_reg_218 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_306 : BOOLEAN;
    signal j_1_reg_228 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_grp_bigint_math_bigint_compare_fu_238_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_zero_fu_244_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_zero_fu_250_ap_start : STD_LOGIC := '0';
    signal ap_reg_grp_bigint_math_bigint_zero_fu_256_ap_start : STD_LOGIC := '0';
    signal tmp_7_fu_353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_364_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_13_fu_379_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_396_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_275_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_362 : BOOLEAN;
    signal grp_fu_282_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvars_iv_cast_fu_369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);

    component bigint_math_bigint_compare IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component bigint_math_bigint_zero IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_we0 : OUT STD_LOGIC;
        in_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bigint_math_bigint_add_1_tempB IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    tempA_U : component bigint_math_bigint_add_1_tempB
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempA_address0,
        ce0 => tempA_ce0,
        we0 => tempA_we0,
        d0 => tempA_d0,
        q0 => tempA_q0);

    tempB_U : component bigint_math_bigint_add_1_tempB
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => tempB_address0,
        ce0 => tempB_ce0,
        we0 => tempB_we0,
        d0 => tempB_d0,
        q0 => tempB_q0);

    carry_U : component bigint_math_bigint_add_1_tempB
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => carry_address0,
        ce0 => carry_ce0,
        we0 => carry_we0,
        d0 => carry_d0,
        q0 => carry_q0);

    grp_bigint_math_bigint_compare_fu_238 : component bigint_math_bigint_compare
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_compare_fu_238_ap_start,
        ap_done => grp_bigint_math_bigint_compare_fu_238_ap_done,
        ap_idle => grp_bigint_math_bigint_compare_fu_238_ap_idle,
        ap_ready => grp_bigint_math_bigint_compare_fu_238_ap_ready,
        a_address0 => grp_bigint_math_bigint_compare_fu_238_a_address0,
        a_ce0 => grp_bigint_math_bigint_compare_fu_238_a_ce0,
        a_q0 => tempA_q0,
        b_address0 => grp_bigint_math_bigint_compare_fu_238_b_address0,
        b_ce0 => grp_bigint_math_bigint_compare_fu_238_b_ce0,
        b_q0 => tempB_q0,
        ap_return => grp_bigint_math_bigint_compare_fu_238_ap_return);

    grp_bigint_math_bigint_zero_fu_244 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_244_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_244_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_244_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_244_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_244_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_244_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_244_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_244_in_r_d0);

    grp_bigint_math_bigint_zero_fu_250 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_250_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_250_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_250_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_250_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_250_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_250_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_250_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_250_in_r_d0);

    grp_bigint_math_bigint_zero_fu_256 : component bigint_math_bigint_zero
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_bigint_math_bigint_zero_fu_256_ap_start,
        ap_done => grp_bigint_math_bigint_zero_fu_256_ap_done,
        ap_idle => grp_bigint_math_bigint_zero_fu_256_ap_idle,
        ap_ready => grp_bigint_math_bigint_zero_fu_256_ap_ready,
        in_r_address0 => grp_bigint_math_bigint_zero_fu_256_in_r_address0,
        in_r_ce0 => grp_bigint_math_bigint_zero_fu_256_in_r_ce0,
        in_r_we0 => grp_bigint_math_bigint_zero_fu_256_in_r_we0,
        in_r_d0 => grp_bigint_math_bigint_zero_fu_256_in_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_compare_fu_238_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_compare_fu_238_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond_i2_fu_306_p2)))) then 
                    ap_reg_grp_bigint_math_bigint_compare_fu_238_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_compare_fu_238_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_compare_fu_238_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_244_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_244_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and not((ap_const_lv1_0 = exitcond_i2_fu_306_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0))))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_244_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_244_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_244_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_250_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_250_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_250_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_250_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_250_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_bigint_math_bigint_zero_fu_256_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_bigint_math_bigint_zero_fu_256_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_256_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_bigint_math_bigint_zero_fu_256_ap_ready)) then 
                    ap_reg_grp_bigint_math_bigint_zero_fu_256_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i1_reg_183_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((exitcond_i_fu_289_p2 = ap_const_lv1_0)))) then 
                i_i1_reg_183 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
                i_i1_reg_183 <= i_4_reg_423;
            end if; 
        end if;
    end process;

    i_i_reg_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
                i_i_reg_172 <= i_3_reg_405;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_244_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_250_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_256_ap_done))))) then 
                i_i_reg_172 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    i_reg_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_244_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_238_ap_done))) and (ap_const_lv1_0 = tmp_2_fu_323_p2))) then 
                i_reg_206 <= ap_const_lv9_FF;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                i_reg_206 <= i_2_reg_516;
            end if; 
        end if;
    end process;

    indvars_iv_reg_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_244_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_238_ap_done))) and (ap_const_lv1_0 = tmp_2_fu_323_p2))) then 
                indvars_iv_reg_194 <= ap_const_lv9_FE;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
                indvars_iv_reg_194 <= indvars_iv_next_reg_521;
            end if; 
        end if;
    end process;

    j_1_reg_228_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = exitcond_fu_373_p2))) then 
                j_1_reg_228 <= j_3_fu_384_p2;
            elsif (((ap_const_lv1_0 = grp_fu_269_p2) and (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
                j_1_reg_228 <= j_2_reg_218;
            end if; 
        end if;
    end process;

    j_2_reg_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not((ap_const_lv1_0 = grp_fu_269_p2))) then
                if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
                    j_2_reg_218 <= i_cast_reg_442;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
                    j_2_reg_218 <= j_reg_490;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = exitcond_fu_373_p2)))) then
                carry_addr_1_reg_511 <= tmp_4_reg_450(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = grp_fu_269_p2))) then
                carry_addr_reg_485 <= tmp_4_reg_450(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then
                i_2_reg_516 <= grp_fu_263_p2;
                indvars_iv_next_reg_521 <= indvars_iv_next_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_3_reg_405 <= i_3_fu_295_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                i_4_reg_423 <= i_4_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = tmp_2_reg_438))) then
                i_cast_reg_442 <= i_cast_fu_329_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then
                j_reg_490 <= j_fu_358_p2;
                tempA_addr_3_reg_495 <= tmp_1_fu_364_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_lv1_0 = tmp_2_reg_438) and (ap_const_lv1_0 = tmp_3_fu_333_p3))) then
                tempA_addr_1_reg_457 <= tmp_4_fu_341_p1(8 - 1 downto 0);
                    tmp_4_reg_450(31 downto 0) <= tmp_4_fu_341_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and not((ap_const_lv1_0 = tmp_5_fu_347_p2)))) then
                tempA_addr_2_reg_476 <= tmp_7_fu_353_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then
                tempB_load_reg_467 <= tempB_q0;
                tmp_5_reg_472 <= tmp_5_fu_347_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_244_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_238_ap_done))))) then
                tmp_2_reg_438 <= tmp_2_fu_323_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then
                tmp_8_reg_481 <= grp_fu_269_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4) and (ap_const_lv1_0 = exitcond_i2_fu_306_p2))) then
                    tmp_i3_reg_428(8 downto 0) <= tmp_i3_fu_318_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (exitcond_i_fu_289_p2 = ap_const_lv1_0))) then
                    tmp_i_reg_410(8 downto 0) <= tmp_i_fu_301_p1(8 downto 0);
            end if;
        end if;
    end process;
    tmp_i_reg_410(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_i3_reg_428(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    tmp_4_reg_450(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, exitcond_i_fu_289_p2, exitcond_i2_fu_306_p2, tmp_2_reg_438, grp_bigint_math_bigint_zero_fu_244_ap_done, grp_bigint_math_bigint_compare_fu_238_ap_done, tmp_3_fu_333_p3, tmp_5_fu_347_p2, grp_fu_269_p2, exitcond_fu_373_p2, grp_bigint_math_bigint_zero_fu_250_ap_done, grp_bigint_math_bigint_zero_fu_256_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_244_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_250_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_256_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((exitcond_i_fu_289_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st5_fsm_4 => 
                if (not((ap_const_lv1_0 = exitcond_i2_fu_306_p2))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st6_fsm_5;
                end if;
            when ap_ST_st6_fsm_5 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st7_fsm_6 => 
                if (not(((ap_const_logic_0 = grp_bigint_math_bigint_zero_fu_244_ap_done) or (ap_const_logic_0 = grp_bigint_math_bigint_compare_fu_238_ap_done)))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if ((not((ap_const_lv1_0 = tmp_2_reg_438)) or not((ap_const_lv1_0 = tmp_3_fu_333_p3)))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                end if;
            when ap_ST_st9_fsm_8 => 
                if ((ap_const_lv1_0 = tmp_5_fu_347_p2)) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_lv1_0 = grp_fu_269_p2))) then
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                else
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st15_fsm_14;
            when ap_ST_st12_fsm_11 => 
                ap_NS_fsm <= ap_ST_st13_fsm_12;
            when ap_ST_st13_fsm_12 => 
                if ((ap_const_lv1_0 = grp_fu_269_p2)) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st14_fsm_13 => 
                if ((ap_const_lv1_0 = exitcond_fu_373_p2)) then
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                else
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                ap_NS_fsm <= ap_ST_st8_fsm_7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;

    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, tmp_2_reg_438, ap_sig_cseq_ST_st8_fsm_7, tmp_3_fu_333_p3)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (not((ap_const_lv1_0 = tmp_2_reg_438)) or not((ap_const_lv1_0 = tmp_3_fu_333_p3)))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(tmp_2_reg_438, ap_sig_cseq_ST_st8_fsm_7, tmp_3_fu_333_p3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (not((ap_const_lv1_0 = tmp_2_reg_438)) or not((ap_const_lv1_0 = tmp_3_fu_333_p3))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_106_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_106 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    ap_sig_127_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_127 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    ap_sig_143_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_143 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    ap_sig_156_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_156 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    ap_sig_167_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_167 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    ap_sig_183_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_183 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    ap_sig_258_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_258 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    ap_sig_271_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_271 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    ap_sig_280_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_280 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    ap_sig_291_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_291 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    ap_sig_306_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_306 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    ap_sig_33_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_33 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    ap_sig_362_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_362 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    ap_sig_57_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_57 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_74_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_74 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    ap_sig_90_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_90 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_143)
    begin
        if (ap_sig_143) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_362)
    begin
        if (ap_sig_362) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_156)
    begin
        if (ap_sig_156) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_306)
    begin
        if (ap_sig_306) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_167)
    begin
        if (ap_sig_167) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_183)
    begin
        if (ap_sig_183) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_291)
    begin
        if (ap_sig_291) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_33)
    begin
        if (ap_sig_33) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_258)
    begin
        if (ap_sig_258) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_57)
    begin
        if (ap_sig_57) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_271)
    begin
        if (ap_sig_271) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_74)
    begin
        if (ap_sig_74) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_280)
    begin
        if (ap_sig_280) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_90)
    begin
        if (ap_sig_90) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_106)
    begin
        if (ap_sig_106) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_127)
    begin
        if (ap_sig_127) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    b_address0 <= tmp_i3_fu_318_p1(8 - 1 downto 0);

    b_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            b_ce0 <= ap_const_logic_1;
        else 
            b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    carry_addr_1_gep_fu_157_p3 <= tmp_4_reg_450(8 - 1 downto 0);

    carry_address0_assign_proc : process(tmp_4_reg_450, ap_sig_cseq_ST_st10_fsm_9, carry_addr_reg_485, ap_sig_cseq_ST_st14_fsm_13, carry_addr_1_gep_fu_157_p3, carry_addr_1_reg_511, ap_sig_cseq_ST_st15_fsm_14, grp_bigint_math_bigint_zero_fu_256_in_r_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            carry_address0 <= carry_addr_1_reg_511;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10)) then 
            carry_address0 <= carry_addr_reg_485;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            carry_address0 <= carry_addr_1_gep_fu_157_p3;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            carry_address0 <= tmp_4_reg_450(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            carry_address0 <= grp_bigint_math_bigint_zero_fu_256_in_r_address0;
        else 
            carry_address0 <= "XXXXXXXX";
        end if; 
    end process;


    carry_ce0_assign_proc : process(ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st14_fsm_13, ap_sig_cseq_ST_st15_fsm_14, grp_bigint_math_bigint_zero_fu_256_in_r_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            carry_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            carry_ce0 <= grp_bigint_math_bigint_zero_fu_256_in_r_ce0;
        else 
            carry_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    carry_d0_assign_proc : process(ap_sig_cseq_ST_st15_fsm_14, grp_bigint_math_bigint_zero_fu_256_in_r_d0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10, grp_fu_282_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10))) then 
            carry_d0 <= grp_fu_282_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            carry_d0 <= grp_bigint_math_bigint_zero_fu_256_in_r_d0;
        else 
            carry_d0 <= "XXXXXXXX";
        end if; 
    end process;


    carry_we0_assign_proc : process(tmp_5_reg_472, tmp_8_reg_481, ap_sig_cseq_ST_st15_fsm_14, grp_bigint_math_bigint_zero_fu_256_in_r_we0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st11_fsm_10)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and not((ap_const_lv1_0 = tmp_5_reg_472)) and not((ap_const_lv1_0 = tmp_8_reg_481))))) then 
            carry_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            carry_we0 <= grp_bigint_math_bigint_zero_fu_256_in_r_we0;
        else 
            carry_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_373_p2 <= "1" when (j_1_reg_228 = indvars_iv_cast_fu_369_p1) else "0";
    exitcond_i2_fu_306_p2 <= "1" when (i_i1_reg_183 = ap_const_lv9_100) else "0";
    exitcond_i_fu_289_p2 <= "1" when (i_i_reg_172 = ap_const_lv9_100) else "0";
    grp_bigint_math_bigint_compare_fu_238_ap_start <= ap_reg_grp_bigint_math_bigint_compare_fu_238_ap_start;
    grp_bigint_math_bigint_zero_fu_244_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_244_ap_start;
    grp_bigint_math_bigint_zero_fu_250_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_250_ap_start;
    grp_bigint_math_bigint_zero_fu_256_ap_start <= ap_reg_grp_bigint_math_bigint_zero_fu_256_ap_start;
    grp_fu_263_p2 <= std_logic_vector(unsigned(i_reg_206) + unsigned(ap_const_lv9_1FF));
    grp_fu_269_p2 <= "1" when (tempA_q0 = ap_const_lv8_0) else "0";
    grp_fu_275_p2 <= std_logic_vector(unsigned(tempA_q0) + unsigned(ap_const_lv8_FF));
    grp_fu_282_p2 <= std_logic_vector(unsigned(carry_q0) + unsigned(ap_const_lv8_1));
    i_3_fu_295_p2 <= std_logic_vector(unsigned(i_i_reg_172) + unsigned(ap_const_lv9_1));
    i_4_fu_312_p2 <= std_logic_vector(unsigned(i_i1_reg_183) + unsigned(ap_const_lv9_1));
        i_cast_fu_329_p1 <= std_logic_vector(resize(signed(i_reg_206),32));

        indvars_iv_cast_fu_369_p1 <= std_logic_vector(resize(signed(indvars_iv_reg_194),32));

    indvars_iv_next_fu_390_p2 <= std_logic_vector(unsigned(indvars_iv_reg_194) + unsigned(ap_const_lv9_1FF));
    j_3_fu_384_p2 <= std_logic_vector(unsigned(j_1_reg_228) + unsigned(ap_const_lv32_1));
    j_fu_358_p2 <= std_logic_vector(unsigned(j_2_reg_218) + unsigned(ap_const_lv32_FFFFFFFF));

    out_r_address0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, tmp_i_fu_301_p1, ap_sig_cseq_ST_st7_fsm_6, tmp_4_reg_450, grp_bigint_math_bigint_zero_fu_244_in_r_address0, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            out_r_address0 <= tmp_4_reg_450(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
            out_r_address0 <= tmp_i_fu_301_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_address0 <= grp_bigint_math_bigint_zero_fu_244_in_r_address0;
        else 
            out_r_address0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_244_in_r_ce0, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) or (ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            out_r_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_ce0 <= grp_bigint_math_bigint_zero_fu_244_in_r_ce0;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_244_in_r_d0, ap_sig_cseq_ST_st16_fsm_15, tmp_14_fu_396_p2)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            out_r_d0 <= tmp_14_fu_396_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_d0 <= grp_bigint_math_bigint_zero_fu_244_in_r_d0;
        else 
            out_r_d0 <= "XXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, grp_bigint_math_bigint_zero_fu_244_in_r_we0, ap_sig_cseq_ST_st16_fsm_15)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15))) then 
            out_r_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            out_r_we0 <= grp_bigint_math_bigint_zero_fu_244_in_r_we0;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempA_address0_assign_proc : process(tmp_i_reg_410, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, tmp_4_fu_341_p1, tempA_addr_1_reg_457, ap_sig_cseq_ST_st9_fsm_8, tempA_addr_2_reg_476, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, tempA_addr_3_reg_495, ap_sig_cseq_ST_st14_fsm_13, exitcond_fu_373_p2, ap_sig_cseq_ST_st15_fsm_14, grp_bigint_math_bigint_compare_fu_238_a_address0, grp_bigint_math_bigint_zero_fu_244_in_r_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, tmp_7_fu_353_p1, tmp_1_fu_364_p1, tmp_13_fu_379_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = exitcond_fu_373_p2))) then 
            tempA_address0 <= tmp_13_fu_379_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)) then 
            tempA_address0 <= tempA_addr_3_reg_495;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = exitcond_fu_373_p2))))) then 
            tempA_address0 <= tempA_addr_2_reg_476;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_address0 <= tmp_i_reg_410(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14)) then 
            tempA_address0 <= tempA_addr_1_reg_457;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            tempA_address0 <= tmp_1_fu_364_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8)) then 
            tempA_address0 <= tmp_7_fu_353_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            tempA_address0 <= tmp_4_fu_341_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_address0 <= grp_bigint_math_bigint_zero_fu_244_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            tempA_address0 <= grp_bigint_math_bigint_compare_fu_238_a_address0;
        else 
            tempA_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempA_ce0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st14_fsm_13, exitcond_fu_373_p2, ap_sig_cseq_ST_st15_fsm_14, grp_bigint_math_bigint_compare_fu_238_a_ce0, grp_bigint_math_bigint_zero_fu_244_in_r_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = exitcond_fu_373_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = exitcond_fu_373_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            tempA_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_ce0 <= grp_bigint_math_bigint_zero_fu_244_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            tempA_ce0 <= grp_bigint_math_bigint_compare_fu_238_a_ce0;
        else 
            tempA_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempA_d0_assign_proc : process(out_r_q0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st14_fsm_13, exitcond_fu_373_p2, grp_bigint_math_bigint_zero_fu_244_in_r_d0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12, grp_fu_275_p2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = exitcond_fu_373_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = exitcond_fu_373_p2))))) then 
            tempA_d0 <= ap_const_lv8_FF;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
            tempA_d0 <= grp_fu_275_p2;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then 
            tempA_d0 <= out_r_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_d0 <= grp_bigint_math_bigint_zero_fu_244_in_r_d0;
        else 
            tempA_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempA_we0_assign_proc : process(grp_fu_269_p2, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st14_fsm_13, exitcond_fu_373_p2, grp_bigint_math_bigint_zero_fu_244_in_r_we0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st4_fsm_3, ap_sig_cseq_ST_st13_fsm_12)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_lv1_0 = grp_fu_269_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_lv1_0 = exitcond_fu_373_p2)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and not((ap_const_lv1_0 = exitcond_fu_373_p2))) or (ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) or ((ap_const_lv1_0 = grp_fu_269_p2) and (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12)))) then 
            tempA_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempA_we0 <= grp_bigint_math_bigint_zero_fu_244_in_r_we0;
        else 
            tempA_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_address0_assign_proc : process(tmp_i3_reg_428, ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, tmp_4_fu_341_p1, grp_bigint_math_bigint_compare_fu_238_b_address0, grp_bigint_math_bigint_zero_fu_250_in_r_address0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            tempB_address0 <= tmp_i3_reg_428(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            tempB_address0 <= tmp_4_fu_341_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_address0 <= grp_bigint_math_bigint_zero_fu_250_in_r_address0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            tempB_address0 <= grp_bigint_math_bigint_compare_fu_238_b_address0;
        else 
            tempB_address0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_ce0_assign_proc : process(ap_sig_cseq_ST_st7_fsm_6, ap_sig_cseq_ST_st8_fsm_7, grp_bigint_math_bigint_compare_fu_238_b_ce0, grp_bigint_math_bigint_zero_fu_250_in_r_ce0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            tempB_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_ce0 <= grp_bigint_math_bigint_zero_fu_250_in_r_ce0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6)) then 
            tempB_ce0 <= grp_bigint_math_bigint_compare_fu_238_b_ce0;
        else 
            tempB_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tempB_d0_assign_proc : process(b_q0, grp_bigint_math_bigint_zero_fu_250_in_r_d0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then 
            tempB_d0 <= b_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_d0 <= grp_bigint_math_bigint_zero_fu_250_in_r_d0;
        else 
            tempB_d0 <= "XXXXXXXX";
        end if; 
    end process;


    tempB_we0_assign_proc : process(grp_bigint_math_bigint_zero_fu_250_in_r_we0, ap_sig_cseq_ST_st2_fsm_1, ap_sig_cseq_ST_st6_fsm_5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5))) then 
            tempB_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            tempB_we0 <= grp_bigint_math_bigint_zero_fu_250_in_r_we0;
        else 
            tempB_we0 <= ap_const_logic_0;
        end if; 
    end process;

        tmp_13_fu_379_p1 <= std_logic_vector(resize(signed(j_1_reg_228),64));

    tmp_14_fu_396_p2 <= std_logic_vector(unsigned(tempA_q0) - unsigned(tempB_load_reg_467));
        tmp_1_fu_364_p1 <= std_logic_vector(resize(signed(j_fu_358_p2),64));

    tmp_2_fu_323_p2 <= "1" when (grp_bigint_math_bigint_compare_fu_238_ap_return = ap_const_lv2_3) else "0";
    tmp_3_fu_333_p3 <= i_reg_206(8 downto 8);
    tmp_4_fu_341_p1 <= std_logic_vector(resize(unsigned(i_cast_fu_329_p1),64));
    tmp_5_fu_347_p2 <= "1" when (unsigned(tempA_q0) < unsigned(tempB_q0)) else "0";
        tmp_7_fu_353_p1 <= std_logic_vector(resize(signed(grp_fu_263_p2),64));

    tmp_i3_fu_318_p1 <= std_logic_vector(resize(unsigned(i_i1_reg_183),64));
    tmp_i_fu_301_p1 <= std_logic_vector(resize(unsigned(i_i_reg_172),64));
end behav;
