// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1ns/1ps
module bigint_math_PERIPH_BUS_s_axi
#(parameter
    C_S_AXI_ADDR_WIDTH = 10,
    C_S_AXI_DATA_WIDTH = 32
)(
    // axi4 lite slave signals
    input  wire                          ACLK,
    input  wire                          ARESET,
    input  wire                          ACLK_EN,
    input  wire [C_S_AXI_ADDR_WIDTH-1:0] AWADDR,
    input  wire                          AWVALID,
    output wire                          AWREADY,
    input  wire [C_S_AXI_DATA_WIDTH-1:0] WDATA,
    input  wire [C_S_AXI_DATA_WIDTH/8-1:0] WSTRB,
    input  wire                          WVALID,
    output wire                          WREADY,
    output wire [1:0]                    BRESP,
    output wire                          BVALID,
    input  wire                          BREADY,
    input  wire [C_S_AXI_ADDR_WIDTH-1:0] ARADDR,
    input  wire                          ARVALID,
    output wire                          ARREADY,
    output wire [C_S_AXI_DATA_WIDTH-1:0] RDATA,
    output wire [1:0]                    RRESP,
    output wire                          RVALID,
    input  wire                          RREADY,
    output wire                          interrupt,
    // user signals
    output wire                          ap_start,
    input  wire                          ap_done,
    input  wire                          ap_ready,
    input  wire                          ap_idle,
    output wire [2047:0]                 number1_V,
    output wire [2047:0]                 number2_V,
    input  wire [2047:0]                 output_V,
    input  wire                          output_V_ap_vld
);
//------------------------Address Info-------------------
// 0x000 : Control signals
//         bit 0  - ap_start (Read/Write/SC)
//         bit 1  - ap_done (Read/COR)
//         bit 2  - ap_idle (Read)
//         bit 3  - ap_ready (Read)
//         bit 7  - auto_restart (Read/Write)
//         others - reserved
// 0x004 : Global Interrupt Enable Register
//         bit 0  - Global Interrupt Enable (Read/Write)
//         others - reserved
// 0x008 : IP Interrupt Enable Register (Read/Write)
//         bit 0  - Channel 0 (ap_done)
//         others - reserved
// 0x00c : IP Interrupt Status Register (Read/TOW)
//         bit 0  - Channel 0 (ap_done)
//         others - reserved
// 0x010 : Data signal of number1_V
//         bit 31~0 - number1_V[31:0] (Read/Write)
// 0x014 : Data signal of number1_V
//         bit 31~0 - number1_V[63:32] (Read/Write)
// 0x018 : Data signal of number1_V
//         bit 31~0 - number1_V[95:64] (Read/Write)
// 0x01c : Data signal of number1_V
//         bit 31~0 - number1_V[127:96] (Read/Write)
// 0x020 : Data signal of number1_V
//         bit 31~0 - number1_V[159:128] (Read/Write)
// 0x024 : Data signal of number1_V
//         bit 31~0 - number1_V[191:160] (Read/Write)
// 0x028 : Data signal of number1_V
//         bit 31~0 - number1_V[223:192] (Read/Write)
// 0x02c : Data signal of number1_V
//         bit 31~0 - number1_V[255:224] (Read/Write)
// 0x030 : Data signal of number1_V
//         bit 31~0 - number1_V[287:256] (Read/Write)
// 0x034 : Data signal of number1_V
//         bit 31~0 - number1_V[319:288] (Read/Write)
// 0x038 : Data signal of number1_V
//         bit 31~0 - number1_V[351:320] (Read/Write)
// 0x03c : Data signal of number1_V
//         bit 31~0 - number1_V[383:352] (Read/Write)
// 0x040 : Data signal of number1_V
//         bit 31~0 - number1_V[415:384] (Read/Write)
// 0x044 : Data signal of number1_V
//         bit 31~0 - number1_V[447:416] (Read/Write)
// 0x048 : Data signal of number1_V
//         bit 31~0 - number1_V[479:448] (Read/Write)
// 0x04c : Data signal of number1_V
//         bit 31~0 - number1_V[511:480] (Read/Write)
// 0x050 : Data signal of number1_V
//         bit 31~0 - number1_V[543:512] (Read/Write)
// 0x054 : Data signal of number1_V
//         bit 31~0 - number1_V[575:544] (Read/Write)
// 0x058 : Data signal of number1_V
//         bit 31~0 - number1_V[607:576] (Read/Write)
// 0x05c : Data signal of number1_V
//         bit 31~0 - number1_V[639:608] (Read/Write)
// 0x060 : Data signal of number1_V
//         bit 31~0 - number1_V[671:640] (Read/Write)
// 0x064 : Data signal of number1_V
//         bit 31~0 - number1_V[703:672] (Read/Write)
// 0x068 : Data signal of number1_V
//         bit 31~0 - number1_V[735:704] (Read/Write)
// 0x06c : Data signal of number1_V
//         bit 31~0 - number1_V[767:736] (Read/Write)
// 0x070 : Data signal of number1_V
//         bit 31~0 - number1_V[799:768] (Read/Write)
// 0x074 : Data signal of number1_V
//         bit 31~0 - number1_V[831:800] (Read/Write)
// 0x078 : Data signal of number1_V
//         bit 31~0 - number1_V[863:832] (Read/Write)
// 0x07c : Data signal of number1_V
//         bit 31~0 - number1_V[895:864] (Read/Write)
// 0x080 : Data signal of number1_V
//         bit 31~0 - number1_V[927:896] (Read/Write)
// 0x084 : Data signal of number1_V
//         bit 31~0 - number1_V[959:928] (Read/Write)
// 0x088 : Data signal of number1_V
//         bit 31~0 - number1_V[991:960] (Read/Write)
// 0x08c : Data signal of number1_V
//         bit 31~0 - number1_V[1023:992] (Read/Write)
// 0x090 : Data signal of number1_V
//         bit 31~0 - number1_V[1055:1024] (Read/Write)
// 0x094 : Data signal of number1_V
//         bit 31~0 - number1_V[1087:1056] (Read/Write)
// 0x098 : Data signal of number1_V
//         bit 31~0 - number1_V[1119:1088] (Read/Write)
// 0x09c : Data signal of number1_V
//         bit 31~0 - number1_V[1151:1120] (Read/Write)
// 0x0a0 : Data signal of number1_V
//         bit 31~0 - number1_V[1183:1152] (Read/Write)
// 0x0a4 : Data signal of number1_V
//         bit 31~0 - number1_V[1215:1184] (Read/Write)
// 0x0a8 : Data signal of number1_V
//         bit 31~0 - number1_V[1247:1216] (Read/Write)
// 0x0ac : Data signal of number1_V
//         bit 31~0 - number1_V[1279:1248] (Read/Write)
// 0x0b0 : Data signal of number1_V
//         bit 31~0 - number1_V[1311:1280] (Read/Write)
// 0x0b4 : Data signal of number1_V
//         bit 31~0 - number1_V[1343:1312] (Read/Write)
// 0x0b8 : Data signal of number1_V
//         bit 31~0 - number1_V[1375:1344] (Read/Write)
// 0x0bc : Data signal of number1_V
//         bit 31~0 - number1_V[1407:1376] (Read/Write)
// 0x0c0 : Data signal of number1_V
//         bit 31~0 - number1_V[1439:1408] (Read/Write)
// 0x0c4 : Data signal of number1_V
//         bit 31~0 - number1_V[1471:1440] (Read/Write)
// 0x0c8 : Data signal of number1_V
//         bit 31~0 - number1_V[1503:1472] (Read/Write)
// 0x0cc : Data signal of number1_V
//         bit 31~0 - number1_V[1535:1504] (Read/Write)
// 0x0d0 : Data signal of number1_V
//         bit 31~0 - number1_V[1567:1536] (Read/Write)
// 0x0d4 : Data signal of number1_V
//         bit 31~0 - number1_V[1599:1568] (Read/Write)
// 0x0d8 : Data signal of number1_V
//         bit 31~0 - number1_V[1631:1600] (Read/Write)
// 0x0dc : Data signal of number1_V
//         bit 31~0 - number1_V[1663:1632] (Read/Write)
// 0x0e0 : Data signal of number1_V
//         bit 31~0 - number1_V[1695:1664] (Read/Write)
// 0x0e4 : Data signal of number1_V
//         bit 31~0 - number1_V[1727:1696] (Read/Write)
// 0x0e8 : Data signal of number1_V
//         bit 31~0 - number1_V[1759:1728] (Read/Write)
// 0x0ec : Data signal of number1_V
//         bit 31~0 - number1_V[1791:1760] (Read/Write)
// 0x0f0 : Data signal of number1_V
//         bit 31~0 - number1_V[1823:1792] (Read/Write)
// 0x0f4 : Data signal of number1_V
//         bit 31~0 - number1_V[1855:1824] (Read/Write)
// 0x0f8 : Data signal of number1_V
//         bit 31~0 - number1_V[1887:1856] (Read/Write)
// 0x0fc : Data signal of number1_V
//         bit 31~0 - number1_V[1919:1888] (Read/Write)
// 0x100 : Data signal of number1_V
//         bit 31~0 - number1_V[1951:1920] (Read/Write)
// 0x104 : Data signal of number1_V
//         bit 31~0 - number1_V[1983:1952] (Read/Write)
// 0x108 : Data signal of number1_V
//         bit 31~0 - number1_V[2015:1984] (Read/Write)
// 0x10c : Data signal of number1_V
//         bit 31~0 - number1_V[2047:2016] (Read/Write)
// 0x110 : reserved
// 0x114 : Data signal of number2_V
//         bit 31~0 - number2_V[31:0] (Read/Write)
// 0x118 : Data signal of number2_V
//         bit 31~0 - number2_V[63:32] (Read/Write)
// 0x11c : Data signal of number2_V
//         bit 31~0 - number2_V[95:64] (Read/Write)
// 0x120 : Data signal of number2_V
//         bit 31~0 - number2_V[127:96] (Read/Write)
// 0x124 : Data signal of number2_V
//         bit 31~0 - number2_V[159:128] (Read/Write)
// 0x128 : Data signal of number2_V
//         bit 31~0 - number2_V[191:160] (Read/Write)
// 0x12c : Data signal of number2_V
//         bit 31~0 - number2_V[223:192] (Read/Write)
// 0x130 : Data signal of number2_V
//         bit 31~0 - number2_V[255:224] (Read/Write)
// 0x134 : Data signal of number2_V
//         bit 31~0 - number2_V[287:256] (Read/Write)
// 0x138 : Data signal of number2_V
//         bit 31~0 - number2_V[319:288] (Read/Write)
// 0x13c : Data signal of number2_V
//         bit 31~0 - number2_V[351:320] (Read/Write)
// 0x140 : Data signal of number2_V
//         bit 31~0 - number2_V[383:352] (Read/Write)
// 0x144 : Data signal of number2_V
//         bit 31~0 - number2_V[415:384] (Read/Write)
// 0x148 : Data signal of number2_V
//         bit 31~0 - number2_V[447:416] (Read/Write)
// 0x14c : Data signal of number2_V
//         bit 31~0 - number2_V[479:448] (Read/Write)
// 0x150 : Data signal of number2_V
//         bit 31~0 - number2_V[511:480] (Read/Write)
// 0x154 : Data signal of number2_V
//         bit 31~0 - number2_V[543:512] (Read/Write)
// 0x158 : Data signal of number2_V
//         bit 31~0 - number2_V[575:544] (Read/Write)
// 0x15c : Data signal of number2_V
//         bit 31~0 - number2_V[607:576] (Read/Write)
// 0x160 : Data signal of number2_V
//         bit 31~0 - number2_V[639:608] (Read/Write)
// 0x164 : Data signal of number2_V
//         bit 31~0 - number2_V[671:640] (Read/Write)
// 0x168 : Data signal of number2_V
//         bit 31~0 - number2_V[703:672] (Read/Write)
// 0x16c : Data signal of number2_V
//         bit 31~0 - number2_V[735:704] (Read/Write)
// 0x170 : Data signal of number2_V
//         bit 31~0 - number2_V[767:736] (Read/Write)
// 0x174 : Data signal of number2_V
//         bit 31~0 - number2_V[799:768] (Read/Write)
// 0x178 : Data signal of number2_V
//         bit 31~0 - number2_V[831:800] (Read/Write)
// 0x17c : Data signal of number2_V
//         bit 31~0 - number2_V[863:832] (Read/Write)
// 0x180 : Data signal of number2_V
//         bit 31~0 - number2_V[895:864] (Read/Write)
// 0x184 : Data signal of number2_V
//         bit 31~0 - number2_V[927:896] (Read/Write)
// 0x188 : Data signal of number2_V
//         bit 31~0 - number2_V[959:928] (Read/Write)
// 0x18c : Data signal of number2_V
//         bit 31~0 - number2_V[991:960] (Read/Write)
// 0x190 : Data signal of number2_V
//         bit 31~0 - number2_V[1023:992] (Read/Write)
// 0x194 : Data signal of number2_V
//         bit 31~0 - number2_V[1055:1024] (Read/Write)
// 0x198 : Data signal of number2_V
//         bit 31~0 - number2_V[1087:1056] (Read/Write)
// 0x19c : Data signal of number2_V
//         bit 31~0 - number2_V[1119:1088] (Read/Write)
// 0x1a0 : Data signal of number2_V
//         bit 31~0 - number2_V[1151:1120] (Read/Write)
// 0x1a4 : Data signal of number2_V
//         bit 31~0 - number2_V[1183:1152] (Read/Write)
// 0x1a8 : Data signal of number2_V
//         bit 31~0 - number2_V[1215:1184] (Read/Write)
// 0x1ac : Data signal of number2_V
//         bit 31~0 - number2_V[1247:1216] (Read/Write)
// 0x1b0 : Data signal of number2_V
//         bit 31~0 - number2_V[1279:1248] (Read/Write)
// 0x1b4 : Data signal of number2_V
//         bit 31~0 - number2_V[1311:1280] (Read/Write)
// 0x1b8 : Data signal of number2_V
//         bit 31~0 - number2_V[1343:1312] (Read/Write)
// 0x1bc : Data signal of number2_V
//         bit 31~0 - number2_V[1375:1344] (Read/Write)
// 0x1c0 : Data signal of number2_V
//         bit 31~0 - number2_V[1407:1376] (Read/Write)
// 0x1c4 : Data signal of number2_V
//         bit 31~0 - number2_V[1439:1408] (Read/Write)
// 0x1c8 : Data signal of number2_V
//         bit 31~0 - number2_V[1471:1440] (Read/Write)
// 0x1cc : Data signal of number2_V
//         bit 31~0 - number2_V[1503:1472] (Read/Write)
// 0x1d0 : Data signal of number2_V
//         bit 31~0 - number2_V[1535:1504] (Read/Write)
// 0x1d4 : Data signal of number2_V
//         bit 31~0 - number2_V[1567:1536] (Read/Write)
// 0x1d8 : Data signal of number2_V
//         bit 31~0 - number2_V[1599:1568] (Read/Write)
// 0x1dc : Data signal of number2_V
//         bit 31~0 - number2_V[1631:1600] (Read/Write)
// 0x1e0 : Data signal of number2_V
//         bit 31~0 - number2_V[1663:1632] (Read/Write)
// 0x1e4 : Data signal of number2_V
//         bit 31~0 - number2_V[1695:1664] (Read/Write)
// 0x1e8 : Data signal of number2_V
//         bit 31~0 - number2_V[1727:1696] (Read/Write)
// 0x1ec : Data signal of number2_V
//         bit 31~0 - number2_V[1759:1728] (Read/Write)
// 0x1f0 : Data signal of number2_V
//         bit 31~0 - number2_V[1791:1760] (Read/Write)
// 0x1f4 : Data signal of number2_V
//         bit 31~0 - number2_V[1823:1792] (Read/Write)
// 0x1f8 : Data signal of number2_V
//         bit 31~0 - number2_V[1855:1824] (Read/Write)
// 0x1fc : Data signal of number2_V
//         bit 31~0 - number2_V[1887:1856] (Read/Write)
// 0x200 : Data signal of number2_V
//         bit 31~0 - number2_V[1919:1888] (Read/Write)
// 0x204 : Data signal of number2_V
//         bit 31~0 - number2_V[1951:1920] (Read/Write)
// 0x208 : Data signal of number2_V
//         bit 31~0 - number2_V[1983:1952] (Read/Write)
// 0x20c : Data signal of number2_V
//         bit 31~0 - number2_V[2015:1984] (Read/Write)
// 0x210 : Data signal of number2_V
//         bit 31~0 - number2_V[2047:2016] (Read/Write)
// 0x214 : reserved
// 0x218 : Data signal of output_V
//         bit 31~0 - output_V[31:0] (Read)
// 0x21c : Data signal of output_V
//         bit 31~0 - output_V[63:32] (Read)
// 0x220 : Data signal of output_V
//         bit 31~0 - output_V[95:64] (Read)
// 0x224 : Data signal of output_V
//         bit 31~0 - output_V[127:96] (Read)
// 0x228 : Data signal of output_V
//         bit 31~0 - output_V[159:128] (Read)
// 0x22c : Data signal of output_V
//         bit 31~0 - output_V[191:160] (Read)
// 0x230 : Data signal of output_V
//         bit 31~0 - output_V[223:192] (Read)
// 0x234 : Data signal of output_V
//         bit 31~0 - output_V[255:224] (Read)
// 0x238 : Data signal of output_V
//         bit 31~0 - output_V[287:256] (Read)
// 0x23c : Data signal of output_V
//         bit 31~0 - output_V[319:288] (Read)
// 0x240 : Data signal of output_V
//         bit 31~0 - output_V[351:320] (Read)
// 0x244 : Data signal of output_V
//         bit 31~0 - output_V[383:352] (Read)
// 0x248 : Data signal of output_V
//         bit 31~0 - output_V[415:384] (Read)
// 0x24c : Data signal of output_V
//         bit 31~0 - output_V[447:416] (Read)
// 0x250 : Data signal of output_V
//         bit 31~0 - output_V[479:448] (Read)
// 0x254 : Data signal of output_V
//         bit 31~0 - output_V[511:480] (Read)
// 0x258 : Data signal of output_V
//         bit 31~0 - output_V[543:512] (Read)
// 0x25c : Data signal of output_V
//         bit 31~0 - output_V[575:544] (Read)
// 0x260 : Data signal of output_V
//         bit 31~0 - output_V[607:576] (Read)
// 0x264 : Data signal of output_V
//         bit 31~0 - output_V[639:608] (Read)
// 0x268 : Data signal of output_V
//         bit 31~0 - output_V[671:640] (Read)
// 0x26c : Data signal of output_V
//         bit 31~0 - output_V[703:672] (Read)
// 0x270 : Data signal of output_V
//         bit 31~0 - output_V[735:704] (Read)
// 0x274 : Data signal of output_V
//         bit 31~0 - output_V[767:736] (Read)
// 0x278 : Data signal of output_V
//         bit 31~0 - output_V[799:768] (Read)
// 0x27c : Data signal of output_V
//         bit 31~0 - output_V[831:800] (Read)
// 0x280 : Data signal of output_V
//         bit 31~0 - output_V[863:832] (Read)
// 0x284 : Data signal of output_V
//         bit 31~0 - output_V[895:864] (Read)
// 0x288 : Data signal of output_V
//         bit 31~0 - output_V[927:896] (Read)
// 0x28c : Data signal of output_V
//         bit 31~0 - output_V[959:928] (Read)
// 0x290 : Data signal of output_V
//         bit 31~0 - output_V[991:960] (Read)
// 0x294 : Data signal of output_V
//         bit 31~0 - output_V[1023:992] (Read)
// 0x298 : Data signal of output_V
//         bit 31~0 - output_V[1055:1024] (Read)
// 0x29c : Data signal of output_V
//         bit 31~0 - output_V[1087:1056] (Read)
// 0x2a0 : Data signal of output_V
//         bit 31~0 - output_V[1119:1088] (Read)
// 0x2a4 : Data signal of output_V
//         bit 31~0 - output_V[1151:1120] (Read)
// 0x2a8 : Data signal of output_V
//         bit 31~0 - output_V[1183:1152] (Read)
// 0x2ac : Data signal of output_V
//         bit 31~0 - output_V[1215:1184] (Read)
// 0x2b0 : Data signal of output_V
//         bit 31~0 - output_V[1247:1216] (Read)
// 0x2b4 : Data signal of output_V
//         bit 31~0 - output_V[1279:1248] (Read)
// 0x2b8 : Data signal of output_V
//         bit 31~0 - output_V[1311:1280] (Read)
// 0x2bc : Data signal of output_V
//         bit 31~0 - output_V[1343:1312] (Read)
// 0x2c0 : Data signal of output_V
//         bit 31~0 - output_V[1375:1344] (Read)
// 0x2c4 : Data signal of output_V
//         bit 31~0 - output_V[1407:1376] (Read)
// 0x2c8 : Data signal of output_V
//         bit 31~0 - output_V[1439:1408] (Read)
// 0x2cc : Data signal of output_V
//         bit 31~0 - output_V[1471:1440] (Read)
// 0x2d0 : Data signal of output_V
//         bit 31~0 - output_V[1503:1472] (Read)
// 0x2d4 : Data signal of output_V
//         bit 31~0 - output_V[1535:1504] (Read)
// 0x2d8 : Data signal of output_V
//         bit 31~0 - output_V[1567:1536] (Read)
// 0x2dc : Data signal of output_V
//         bit 31~0 - output_V[1599:1568] (Read)
// 0x2e0 : Data signal of output_V
//         bit 31~0 - output_V[1631:1600] (Read)
// 0x2e4 : Data signal of output_V
//         bit 31~0 - output_V[1663:1632] (Read)
// 0x2e8 : Data signal of output_V
//         bit 31~0 - output_V[1695:1664] (Read)
// 0x2ec : Data signal of output_V
//         bit 31~0 - output_V[1727:1696] (Read)
// 0x2f0 : Data signal of output_V
//         bit 31~0 - output_V[1759:1728] (Read)
// 0x2f4 : Data signal of output_V
//         bit 31~0 - output_V[1791:1760] (Read)
// 0x2f8 : Data signal of output_V
//         bit 31~0 - output_V[1823:1792] (Read)
// 0x2fc : Data signal of output_V
//         bit 31~0 - output_V[1855:1824] (Read)
// 0x300 : Data signal of output_V
//         bit 31~0 - output_V[1887:1856] (Read)
// 0x304 : Data signal of output_V
//         bit 31~0 - output_V[1919:1888] (Read)
// 0x308 : Data signal of output_V
//         bit 31~0 - output_V[1951:1920] (Read)
// 0x30c : Data signal of output_V
//         bit 31~0 - output_V[1983:1952] (Read)
// 0x310 : Data signal of output_V
//         bit 31~0 - output_V[2015:1984] (Read)
// 0x314 : Data signal of output_V
//         bit 31~0 - output_V[2047:2016] (Read)
// 0x318 : Control signal of output_V
//         bit 0  - output_V_ap_vld (Read/COR)
//         others - reserved
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

//------------------------Parameter----------------------
localparam
    ADDR_AP_CTRL           = 10'h000,
    ADDR_GIE               = 10'h004,
    ADDR_IER               = 10'h008,
    ADDR_ISR               = 10'h00c,
    ADDR_NUMBER1_V_DATA_0  = 10'h010,
    ADDR_NUMBER1_V_DATA_1  = 10'h014,
    ADDR_NUMBER1_V_DATA_2  = 10'h018,
    ADDR_NUMBER1_V_DATA_3  = 10'h01c,
    ADDR_NUMBER1_V_DATA_4  = 10'h020,
    ADDR_NUMBER1_V_DATA_5  = 10'h024,
    ADDR_NUMBER1_V_DATA_6  = 10'h028,
    ADDR_NUMBER1_V_DATA_7  = 10'h02c,
    ADDR_NUMBER1_V_DATA_8  = 10'h030,
    ADDR_NUMBER1_V_DATA_9  = 10'h034,
    ADDR_NUMBER1_V_DATA_10 = 10'h038,
    ADDR_NUMBER1_V_DATA_11 = 10'h03c,
    ADDR_NUMBER1_V_DATA_12 = 10'h040,
    ADDR_NUMBER1_V_DATA_13 = 10'h044,
    ADDR_NUMBER1_V_DATA_14 = 10'h048,
    ADDR_NUMBER1_V_DATA_15 = 10'h04c,
    ADDR_NUMBER1_V_DATA_16 = 10'h050,
    ADDR_NUMBER1_V_DATA_17 = 10'h054,
    ADDR_NUMBER1_V_DATA_18 = 10'h058,
    ADDR_NUMBER1_V_DATA_19 = 10'h05c,
    ADDR_NUMBER1_V_DATA_20 = 10'h060,
    ADDR_NUMBER1_V_DATA_21 = 10'h064,
    ADDR_NUMBER1_V_DATA_22 = 10'h068,
    ADDR_NUMBER1_V_DATA_23 = 10'h06c,
    ADDR_NUMBER1_V_DATA_24 = 10'h070,
    ADDR_NUMBER1_V_DATA_25 = 10'h074,
    ADDR_NUMBER1_V_DATA_26 = 10'h078,
    ADDR_NUMBER1_V_DATA_27 = 10'h07c,
    ADDR_NUMBER1_V_DATA_28 = 10'h080,
    ADDR_NUMBER1_V_DATA_29 = 10'h084,
    ADDR_NUMBER1_V_DATA_30 = 10'h088,
    ADDR_NUMBER1_V_DATA_31 = 10'h08c,
    ADDR_NUMBER1_V_DATA_32 = 10'h090,
    ADDR_NUMBER1_V_DATA_33 = 10'h094,
    ADDR_NUMBER1_V_DATA_34 = 10'h098,
    ADDR_NUMBER1_V_DATA_35 = 10'h09c,
    ADDR_NUMBER1_V_DATA_36 = 10'h0a0,
    ADDR_NUMBER1_V_DATA_37 = 10'h0a4,
    ADDR_NUMBER1_V_DATA_38 = 10'h0a8,
    ADDR_NUMBER1_V_DATA_39 = 10'h0ac,
    ADDR_NUMBER1_V_DATA_40 = 10'h0b0,
    ADDR_NUMBER1_V_DATA_41 = 10'h0b4,
    ADDR_NUMBER1_V_DATA_42 = 10'h0b8,
    ADDR_NUMBER1_V_DATA_43 = 10'h0bc,
    ADDR_NUMBER1_V_DATA_44 = 10'h0c0,
    ADDR_NUMBER1_V_DATA_45 = 10'h0c4,
    ADDR_NUMBER1_V_DATA_46 = 10'h0c8,
    ADDR_NUMBER1_V_DATA_47 = 10'h0cc,
    ADDR_NUMBER1_V_DATA_48 = 10'h0d0,
    ADDR_NUMBER1_V_DATA_49 = 10'h0d4,
    ADDR_NUMBER1_V_DATA_50 = 10'h0d8,
    ADDR_NUMBER1_V_DATA_51 = 10'h0dc,
    ADDR_NUMBER1_V_DATA_52 = 10'h0e0,
    ADDR_NUMBER1_V_DATA_53 = 10'h0e4,
    ADDR_NUMBER1_V_DATA_54 = 10'h0e8,
    ADDR_NUMBER1_V_DATA_55 = 10'h0ec,
    ADDR_NUMBER1_V_DATA_56 = 10'h0f0,
    ADDR_NUMBER1_V_DATA_57 = 10'h0f4,
    ADDR_NUMBER1_V_DATA_58 = 10'h0f8,
    ADDR_NUMBER1_V_DATA_59 = 10'h0fc,
    ADDR_NUMBER1_V_DATA_60 = 10'h100,
    ADDR_NUMBER1_V_DATA_61 = 10'h104,
    ADDR_NUMBER1_V_DATA_62 = 10'h108,
    ADDR_NUMBER1_V_DATA_63 = 10'h10c,
    ADDR_NUMBER1_V_CTRL    = 10'h110,
    ADDR_NUMBER2_V_DATA_0  = 10'h114,
    ADDR_NUMBER2_V_DATA_1  = 10'h118,
    ADDR_NUMBER2_V_DATA_2  = 10'h11c,
    ADDR_NUMBER2_V_DATA_3  = 10'h120,
    ADDR_NUMBER2_V_DATA_4  = 10'h124,
    ADDR_NUMBER2_V_DATA_5  = 10'h128,
    ADDR_NUMBER2_V_DATA_6  = 10'h12c,
    ADDR_NUMBER2_V_DATA_7  = 10'h130,
    ADDR_NUMBER2_V_DATA_8  = 10'h134,
    ADDR_NUMBER2_V_DATA_9  = 10'h138,
    ADDR_NUMBER2_V_DATA_10 = 10'h13c,
    ADDR_NUMBER2_V_DATA_11 = 10'h140,
    ADDR_NUMBER2_V_DATA_12 = 10'h144,
    ADDR_NUMBER2_V_DATA_13 = 10'h148,
    ADDR_NUMBER2_V_DATA_14 = 10'h14c,
    ADDR_NUMBER2_V_DATA_15 = 10'h150,
    ADDR_NUMBER2_V_DATA_16 = 10'h154,
    ADDR_NUMBER2_V_DATA_17 = 10'h158,
    ADDR_NUMBER2_V_DATA_18 = 10'h15c,
    ADDR_NUMBER2_V_DATA_19 = 10'h160,
    ADDR_NUMBER2_V_DATA_20 = 10'h164,
    ADDR_NUMBER2_V_DATA_21 = 10'h168,
    ADDR_NUMBER2_V_DATA_22 = 10'h16c,
    ADDR_NUMBER2_V_DATA_23 = 10'h170,
    ADDR_NUMBER2_V_DATA_24 = 10'h174,
    ADDR_NUMBER2_V_DATA_25 = 10'h178,
    ADDR_NUMBER2_V_DATA_26 = 10'h17c,
    ADDR_NUMBER2_V_DATA_27 = 10'h180,
    ADDR_NUMBER2_V_DATA_28 = 10'h184,
    ADDR_NUMBER2_V_DATA_29 = 10'h188,
    ADDR_NUMBER2_V_DATA_30 = 10'h18c,
    ADDR_NUMBER2_V_DATA_31 = 10'h190,
    ADDR_NUMBER2_V_DATA_32 = 10'h194,
    ADDR_NUMBER2_V_DATA_33 = 10'h198,
    ADDR_NUMBER2_V_DATA_34 = 10'h19c,
    ADDR_NUMBER2_V_DATA_35 = 10'h1a0,
    ADDR_NUMBER2_V_DATA_36 = 10'h1a4,
    ADDR_NUMBER2_V_DATA_37 = 10'h1a8,
    ADDR_NUMBER2_V_DATA_38 = 10'h1ac,
    ADDR_NUMBER2_V_DATA_39 = 10'h1b0,
    ADDR_NUMBER2_V_DATA_40 = 10'h1b4,
    ADDR_NUMBER2_V_DATA_41 = 10'h1b8,
    ADDR_NUMBER2_V_DATA_42 = 10'h1bc,
    ADDR_NUMBER2_V_DATA_43 = 10'h1c0,
    ADDR_NUMBER2_V_DATA_44 = 10'h1c4,
    ADDR_NUMBER2_V_DATA_45 = 10'h1c8,
    ADDR_NUMBER2_V_DATA_46 = 10'h1cc,
    ADDR_NUMBER2_V_DATA_47 = 10'h1d0,
    ADDR_NUMBER2_V_DATA_48 = 10'h1d4,
    ADDR_NUMBER2_V_DATA_49 = 10'h1d8,
    ADDR_NUMBER2_V_DATA_50 = 10'h1dc,
    ADDR_NUMBER2_V_DATA_51 = 10'h1e0,
    ADDR_NUMBER2_V_DATA_52 = 10'h1e4,
    ADDR_NUMBER2_V_DATA_53 = 10'h1e8,
    ADDR_NUMBER2_V_DATA_54 = 10'h1ec,
    ADDR_NUMBER2_V_DATA_55 = 10'h1f0,
    ADDR_NUMBER2_V_DATA_56 = 10'h1f4,
    ADDR_NUMBER2_V_DATA_57 = 10'h1f8,
    ADDR_NUMBER2_V_DATA_58 = 10'h1fc,
    ADDR_NUMBER2_V_DATA_59 = 10'h200,
    ADDR_NUMBER2_V_DATA_60 = 10'h204,
    ADDR_NUMBER2_V_DATA_61 = 10'h208,
    ADDR_NUMBER2_V_DATA_62 = 10'h20c,
    ADDR_NUMBER2_V_DATA_63 = 10'h210,
    ADDR_NUMBER2_V_CTRL    = 10'h214,
    ADDR_OUTPUT_V_DATA_0   = 10'h218,
    ADDR_OUTPUT_V_DATA_1   = 10'h21c,
    ADDR_OUTPUT_V_DATA_2   = 10'h220,
    ADDR_OUTPUT_V_DATA_3   = 10'h224,
    ADDR_OUTPUT_V_DATA_4   = 10'h228,
    ADDR_OUTPUT_V_DATA_5   = 10'h22c,
    ADDR_OUTPUT_V_DATA_6   = 10'h230,
    ADDR_OUTPUT_V_DATA_7   = 10'h234,
    ADDR_OUTPUT_V_DATA_8   = 10'h238,
    ADDR_OUTPUT_V_DATA_9   = 10'h23c,
    ADDR_OUTPUT_V_DATA_10  = 10'h240,
    ADDR_OUTPUT_V_DATA_11  = 10'h244,
    ADDR_OUTPUT_V_DATA_12  = 10'h248,
    ADDR_OUTPUT_V_DATA_13  = 10'h24c,
    ADDR_OUTPUT_V_DATA_14  = 10'h250,
    ADDR_OUTPUT_V_DATA_15  = 10'h254,
    ADDR_OUTPUT_V_DATA_16  = 10'h258,
    ADDR_OUTPUT_V_DATA_17  = 10'h25c,
    ADDR_OUTPUT_V_DATA_18  = 10'h260,
    ADDR_OUTPUT_V_DATA_19  = 10'h264,
    ADDR_OUTPUT_V_DATA_20  = 10'h268,
    ADDR_OUTPUT_V_DATA_21  = 10'h26c,
    ADDR_OUTPUT_V_DATA_22  = 10'h270,
    ADDR_OUTPUT_V_DATA_23  = 10'h274,
    ADDR_OUTPUT_V_DATA_24  = 10'h278,
    ADDR_OUTPUT_V_DATA_25  = 10'h27c,
    ADDR_OUTPUT_V_DATA_26  = 10'h280,
    ADDR_OUTPUT_V_DATA_27  = 10'h284,
    ADDR_OUTPUT_V_DATA_28  = 10'h288,
    ADDR_OUTPUT_V_DATA_29  = 10'h28c,
    ADDR_OUTPUT_V_DATA_30  = 10'h290,
    ADDR_OUTPUT_V_DATA_31  = 10'h294,
    ADDR_OUTPUT_V_DATA_32  = 10'h298,
    ADDR_OUTPUT_V_DATA_33  = 10'h29c,
    ADDR_OUTPUT_V_DATA_34  = 10'h2a0,
    ADDR_OUTPUT_V_DATA_35  = 10'h2a4,
    ADDR_OUTPUT_V_DATA_36  = 10'h2a8,
    ADDR_OUTPUT_V_DATA_37  = 10'h2ac,
    ADDR_OUTPUT_V_DATA_38  = 10'h2b0,
    ADDR_OUTPUT_V_DATA_39  = 10'h2b4,
    ADDR_OUTPUT_V_DATA_40  = 10'h2b8,
    ADDR_OUTPUT_V_DATA_41  = 10'h2bc,
    ADDR_OUTPUT_V_DATA_42  = 10'h2c0,
    ADDR_OUTPUT_V_DATA_43  = 10'h2c4,
    ADDR_OUTPUT_V_DATA_44  = 10'h2c8,
    ADDR_OUTPUT_V_DATA_45  = 10'h2cc,
    ADDR_OUTPUT_V_DATA_46  = 10'h2d0,
    ADDR_OUTPUT_V_DATA_47  = 10'h2d4,
    ADDR_OUTPUT_V_DATA_48  = 10'h2d8,
    ADDR_OUTPUT_V_DATA_49  = 10'h2dc,
    ADDR_OUTPUT_V_DATA_50  = 10'h2e0,
    ADDR_OUTPUT_V_DATA_51  = 10'h2e4,
    ADDR_OUTPUT_V_DATA_52  = 10'h2e8,
    ADDR_OUTPUT_V_DATA_53  = 10'h2ec,
    ADDR_OUTPUT_V_DATA_54  = 10'h2f0,
    ADDR_OUTPUT_V_DATA_55  = 10'h2f4,
    ADDR_OUTPUT_V_DATA_56  = 10'h2f8,
    ADDR_OUTPUT_V_DATA_57  = 10'h2fc,
    ADDR_OUTPUT_V_DATA_58  = 10'h300,
    ADDR_OUTPUT_V_DATA_59  = 10'h304,
    ADDR_OUTPUT_V_DATA_60  = 10'h308,
    ADDR_OUTPUT_V_DATA_61  = 10'h30c,
    ADDR_OUTPUT_V_DATA_62  = 10'h310,
    ADDR_OUTPUT_V_DATA_63  = 10'h314,
    ADDR_OUTPUT_V_CTRL     = 10'h318,
    WRIDLE                 = 2'd0,
    WRDATA                 = 2'd1,
    WRRESP                 = 2'd2,
    RDIDLE                 = 2'd0,
    RDDATA                 = 2'd1,
    ADDR_BITS         = 10;

//------------------------Local signal-------------------
    reg  [1:0]                    wstate;
    reg  [1:0]                    wnext;
    reg  [ADDR_BITS-1:0]          waddr;
    wire [31:0]                   wmask;
    wire                          aw_hs;
    wire                          w_hs;
    reg  [1:0]                    rstate;
    reg  [1:0]                    rnext;
    reg  [31:0]                   rdata;
    wire                          ar_hs;
    wire [ADDR_BITS-1:0]          raddr;
    // internal registers
    wire                          int_ap_idle;
    wire                          int_ap_ready;
    reg                           int_ap_done;
    reg                           int_ap_start;
    reg                           int_auto_restart;
    reg                           int_gie;
    reg                           int_ier;
    reg                           int_isr;
    reg  [2047:0]                 int_number1_V;
    reg  [2047:0]                 int_number2_V;
    reg  [2047:0]                 int_output_V;
    reg                           int_output_V_ap_vld;

//------------------------Instantiation------------------

//------------------------AXI write fsm------------------
assign AWREADY = (wstate == WRIDLE);
assign WREADY  = (wstate == WRDATA);
assign BRESP   = 2'b00;  // OKAY
assign BVALID  = (wstate == WRRESP);
assign wmask   = { {8{WSTRB[3]}}, {8{WSTRB[2]}}, {8{WSTRB[1]}}, {8{WSTRB[0]}} };
assign aw_hs   = AWVALID & AWREADY;
assign w_hs    = WVALID & WREADY;

// wstate
always @(posedge ACLK) begin
    if (ARESET)
        wstate <= WRIDLE;
    else if (ACLK_EN)
        wstate <= wnext;
end

// wnext
always @(*) begin
    case (wstate)
        WRIDLE:
            if (AWVALID)
                wnext = WRDATA;
            else
                wnext = WRIDLE;
        WRDATA:
            if (WVALID)
                wnext = WRRESP;
            else
                wnext = WRDATA;
        WRRESP:
            if (BREADY)
                wnext = WRIDLE;
            else
                wnext = WRRESP;
        default:
            wnext = WRIDLE;
    endcase
end

// waddr
always @(posedge ACLK) begin
    if (ACLK_EN) begin
        if (aw_hs)
            waddr <= AWADDR[ADDR_BITS-1:0];
    end
end

//------------------------AXI read fsm-------------------
assign ARREADY = (rstate == RDIDLE);
assign RDATA   = rdata;
assign RRESP   = 2'b00;  // OKAY
assign RVALID  = (rstate == RDDATA);
assign ar_hs   = ARVALID & ARREADY;
assign raddr   = ARADDR[ADDR_BITS-1:0];

// rstate
always @(posedge ACLK) begin
    if (ARESET)
        rstate <= RDIDLE;
    else if (ACLK_EN)
        rstate <= rnext;
end

// rnext
always @(*) begin
    case (rstate)
        RDIDLE:
            if (ARVALID)
                rnext = RDDATA;
            else
                rnext = RDIDLE;
        RDDATA:
            if (RREADY & RVALID)
                rnext = RDIDLE;
            else
                rnext = RDDATA;
        default:
            rnext = RDIDLE;
    endcase
end

// rdata
always @(posedge ACLK) begin
    if (ACLK_EN) begin
        if (ar_hs) begin
            rdata <= 1'b0;
            case (raddr)
                ADDR_AP_CTRL: begin
                    rdata[0] <= int_ap_start;
                    rdata[1] <= int_ap_done;
                    rdata[2] <= int_ap_idle;
                    rdata[3] <= int_ap_ready;
                    rdata[7] <= int_auto_restart;
                end
                ADDR_GIE: begin
                    rdata <= int_gie;
                end
                ADDR_IER: begin
                    rdata <= int_ier;
                end
                ADDR_ISR: begin
                    rdata <= int_isr;
                end
                ADDR_NUMBER1_V_DATA_0: begin
                    rdata <= int_number1_V[31:0];
                end
                ADDR_NUMBER1_V_DATA_1: begin
                    rdata <= int_number1_V[63:32];
                end
                ADDR_NUMBER1_V_DATA_2: begin
                    rdata <= int_number1_V[95:64];
                end
                ADDR_NUMBER1_V_DATA_3: begin
                    rdata <= int_number1_V[127:96];
                end
                ADDR_NUMBER1_V_DATA_4: begin
                    rdata <= int_number1_V[159:128];
                end
                ADDR_NUMBER1_V_DATA_5: begin
                    rdata <= int_number1_V[191:160];
                end
                ADDR_NUMBER1_V_DATA_6: begin
                    rdata <= int_number1_V[223:192];
                end
                ADDR_NUMBER1_V_DATA_7: begin
                    rdata <= int_number1_V[255:224];
                end
                ADDR_NUMBER1_V_DATA_8: begin
                    rdata <= int_number1_V[287:256];
                end
                ADDR_NUMBER1_V_DATA_9: begin
                    rdata <= int_number1_V[319:288];
                end
                ADDR_NUMBER1_V_DATA_10: begin
                    rdata <= int_number1_V[351:320];
                end
                ADDR_NUMBER1_V_DATA_11: begin
                    rdata <= int_number1_V[383:352];
                end
                ADDR_NUMBER1_V_DATA_12: begin
                    rdata <= int_number1_V[415:384];
                end
                ADDR_NUMBER1_V_DATA_13: begin
                    rdata <= int_number1_V[447:416];
                end
                ADDR_NUMBER1_V_DATA_14: begin
                    rdata <= int_number1_V[479:448];
                end
                ADDR_NUMBER1_V_DATA_15: begin
                    rdata <= int_number1_V[511:480];
                end
                ADDR_NUMBER1_V_DATA_16: begin
                    rdata <= int_number1_V[543:512];
                end
                ADDR_NUMBER1_V_DATA_17: begin
                    rdata <= int_number1_V[575:544];
                end
                ADDR_NUMBER1_V_DATA_18: begin
                    rdata <= int_number1_V[607:576];
                end
                ADDR_NUMBER1_V_DATA_19: begin
                    rdata <= int_number1_V[639:608];
                end
                ADDR_NUMBER1_V_DATA_20: begin
                    rdata <= int_number1_V[671:640];
                end
                ADDR_NUMBER1_V_DATA_21: begin
                    rdata <= int_number1_V[703:672];
                end
                ADDR_NUMBER1_V_DATA_22: begin
                    rdata <= int_number1_V[735:704];
                end
                ADDR_NUMBER1_V_DATA_23: begin
                    rdata <= int_number1_V[767:736];
                end
                ADDR_NUMBER1_V_DATA_24: begin
                    rdata <= int_number1_V[799:768];
                end
                ADDR_NUMBER1_V_DATA_25: begin
                    rdata <= int_number1_V[831:800];
                end
                ADDR_NUMBER1_V_DATA_26: begin
                    rdata <= int_number1_V[863:832];
                end
                ADDR_NUMBER1_V_DATA_27: begin
                    rdata <= int_number1_V[895:864];
                end
                ADDR_NUMBER1_V_DATA_28: begin
                    rdata <= int_number1_V[927:896];
                end
                ADDR_NUMBER1_V_DATA_29: begin
                    rdata <= int_number1_V[959:928];
                end
                ADDR_NUMBER1_V_DATA_30: begin
                    rdata <= int_number1_V[991:960];
                end
                ADDR_NUMBER1_V_DATA_31: begin
                    rdata <= int_number1_V[1023:992];
                end
                ADDR_NUMBER1_V_DATA_32: begin
                    rdata <= int_number1_V[1055:1024];
                end
                ADDR_NUMBER1_V_DATA_33: begin
                    rdata <= int_number1_V[1087:1056];
                end
                ADDR_NUMBER1_V_DATA_34: begin
                    rdata <= int_number1_V[1119:1088];
                end
                ADDR_NUMBER1_V_DATA_35: begin
                    rdata <= int_number1_V[1151:1120];
                end
                ADDR_NUMBER1_V_DATA_36: begin
                    rdata <= int_number1_V[1183:1152];
                end
                ADDR_NUMBER1_V_DATA_37: begin
                    rdata <= int_number1_V[1215:1184];
                end
                ADDR_NUMBER1_V_DATA_38: begin
                    rdata <= int_number1_V[1247:1216];
                end
                ADDR_NUMBER1_V_DATA_39: begin
                    rdata <= int_number1_V[1279:1248];
                end
                ADDR_NUMBER1_V_DATA_40: begin
                    rdata <= int_number1_V[1311:1280];
                end
                ADDR_NUMBER1_V_DATA_41: begin
                    rdata <= int_number1_V[1343:1312];
                end
                ADDR_NUMBER1_V_DATA_42: begin
                    rdata <= int_number1_V[1375:1344];
                end
                ADDR_NUMBER1_V_DATA_43: begin
                    rdata <= int_number1_V[1407:1376];
                end
                ADDR_NUMBER1_V_DATA_44: begin
                    rdata <= int_number1_V[1439:1408];
                end
                ADDR_NUMBER1_V_DATA_45: begin
                    rdata <= int_number1_V[1471:1440];
                end
                ADDR_NUMBER1_V_DATA_46: begin
                    rdata <= int_number1_V[1503:1472];
                end
                ADDR_NUMBER1_V_DATA_47: begin
                    rdata <= int_number1_V[1535:1504];
                end
                ADDR_NUMBER1_V_DATA_48: begin
                    rdata <= int_number1_V[1567:1536];
                end
                ADDR_NUMBER1_V_DATA_49: begin
                    rdata <= int_number1_V[1599:1568];
                end
                ADDR_NUMBER1_V_DATA_50: begin
                    rdata <= int_number1_V[1631:1600];
                end
                ADDR_NUMBER1_V_DATA_51: begin
                    rdata <= int_number1_V[1663:1632];
                end
                ADDR_NUMBER1_V_DATA_52: begin
                    rdata <= int_number1_V[1695:1664];
                end
                ADDR_NUMBER1_V_DATA_53: begin
                    rdata <= int_number1_V[1727:1696];
                end
                ADDR_NUMBER1_V_DATA_54: begin
                    rdata <= int_number1_V[1759:1728];
                end
                ADDR_NUMBER1_V_DATA_55: begin
                    rdata <= int_number1_V[1791:1760];
                end
                ADDR_NUMBER1_V_DATA_56: begin
                    rdata <= int_number1_V[1823:1792];
                end
                ADDR_NUMBER1_V_DATA_57: begin
                    rdata <= int_number1_V[1855:1824];
                end
                ADDR_NUMBER1_V_DATA_58: begin
                    rdata <= int_number1_V[1887:1856];
                end
                ADDR_NUMBER1_V_DATA_59: begin
                    rdata <= int_number1_V[1919:1888];
                end
                ADDR_NUMBER1_V_DATA_60: begin
                    rdata <= int_number1_V[1951:1920];
                end
                ADDR_NUMBER1_V_DATA_61: begin
                    rdata <= int_number1_V[1983:1952];
                end
                ADDR_NUMBER1_V_DATA_62: begin
                    rdata <= int_number1_V[2015:1984];
                end
                ADDR_NUMBER1_V_DATA_63: begin
                    rdata <= int_number1_V[2047:2016];
                end
                ADDR_NUMBER2_V_DATA_0: begin
                    rdata <= int_number2_V[31:0];
                end
                ADDR_NUMBER2_V_DATA_1: begin
                    rdata <= int_number2_V[63:32];
                end
                ADDR_NUMBER2_V_DATA_2: begin
                    rdata <= int_number2_V[95:64];
                end
                ADDR_NUMBER2_V_DATA_3: begin
                    rdata <= int_number2_V[127:96];
                end
                ADDR_NUMBER2_V_DATA_4: begin
                    rdata <= int_number2_V[159:128];
                end
                ADDR_NUMBER2_V_DATA_5: begin
                    rdata <= int_number2_V[191:160];
                end
                ADDR_NUMBER2_V_DATA_6: begin
                    rdata <= int_number2_V[223:192];
                end
                ADDR_NUMBER2_V_DATA_7: begin
                    rdata <= int_number2_V[255:224];
                end
                ADDR_NUMBER2_V_DATA_8: begin
                    rdata <= int_number2_V[287:256];
                end
                ADDR_NUMBER2_V_DATA_9: begin
                    rdata <= int_number2_V[319:288];
                end
                ADDR_NUMBER2_V_DATA_10: begin
                    rdata <= int_number2_V[351:320];
                end
                ADDR_NUMBER2_V_DATA_11: begin
                    rdata <= int_number2_V[383:352];
                end
                ADDR_NUMBER2_V_DATA_12: begin
                    rdata <= int_number2_V[415:384];
                end
                ADDR_NUMBER2_V_DATA_13: begin
                    rdata <= int_number2_V[447:416];
                end
                ADDR_NUMBER2_V_DATA_14: begin
                    rdata <= int_number2_V[479:448];
                end
                ADDR_NUMBER2_V_DATA_15: begin
                    rdata <= int_number2_V[511:480];
                end
                ADDR_NUMBER2_V_DATA_16: begin
                    rdata <= int_number2_V[543:512];
                end
                ADDR_NUMBER2_V_DATA_17: begin
                    rdata <= int_number2_V[575:544];
                end
                ADDR_NUMBER2_V_DATA_18: begin
                    rdata <= int_number2_V[607:576];
                end
                ADDR_NUMBER2_V_DATA_19: begin
                    rdata <= int_number2_V[639:608];
                end
                ADDR_NUMBER2_V_DATA_20: begin
                    rdata <= int_number2_V[671:640];
                end
                ADDR_NUMBER2_V_DATA_21: begin
                    rdata <= int_number2_V[703:672];
                end
                ADDR_NUMBER2_V_DATA_22: begin
                    rdata <= int_number2_V[735:704];
                end
                ADDR_NUMBER2_V_DATA_23: begin
                    rdata <= int_number2_V[767:736];
                end
                ADDR_NUMBER2_V_DATA_24: begin
                    rdata <= int_number2_V[799:768];
                end
                ADDR_NUMBER2_V_DATA_25: begin
                    rdata <= int_number2_V[831:800];
                end
                ADDR_NUMBER2_V_DATA_26: begin
                    rdata <= int_number2_V[863:832];
                end
                ADDR_NUMBER2_V_DATA_27: begin
                    rdata <= int_number2_V[895:864];
                end
                ADDR_NUMBER2_V_DATA_28: begin
                    rdata <= int_number2_V[927:896];
                end
                ADDR_NUMBER2_V_DATA_29: begin
                    rdata <= int_number2_V[959:928];
                end
                ADDR_NUMBER2_V_DATA_30: begin
                    rdata <= int_number2_V[991:960];
                end
                ADDR_NUMBER2_V_DATA_31: begin
                    rdata <= int_number2_V[1023:992];
                end
                ADDR_NUMBER2_V_DATA_32: begin
                    rdata <= int_number2_V[1055:1024];
                end
                ADDR_NUMBER2_V_DATA_33: begin
                    rdata <= int_number2_V[1087:1056];
                end
                ADDR_NUMBER2_V_DATA_34: begin
                    rdata <= int_number2_V[1119:1088];
                end
                ADDR_NUMBER2_V_DATA_35: begin
                    rdata <= int_number2_V[1151:1120];
                end
                ADDR_NUMBER2_V_DATA_36: begin
                    rdata <= int_number2_V[1183:1152];
                end
                ADDR_NUMBER2_V_DATA_37: begin
                    rdata <= int_number2_V[1215:1184];
                end
                ADDR_NUMBER2_V_DATA_38: begin
                    rdata <= int_number2_V[1247:1216];
                end
                ADDR_NUMBER2_V_DATA_39: begin
                    rdata <= int_number2_V[1279:1248];
                end
                ADDR_NUMBER2_V_DATA_40: begin
                    rdata <= int_number2_V[1311:1280];
                end
                ADDR_NUMBER2_V_DATA_41: begin
                    rdata <= int_number2_V[1343:1312];
                end
                ADDR_NUMBER2_V_DATA_42: begin
                    rdata <= int_number2_V[1375:1344];
                end
                ADDR_NUMBER2_V_DATA_43: begin
                    rdata <= int_number2_V[1407:1376];
                end
                ADDR_NUMBER2_V_DATA_44: begin
                    rdata <= int_number2_V[1439:1408];
                end
                ADDR_NUMBER2_V_DATA_45: begin
                    rdata <= int_number2_V[1471:1440];
                end
                ADDR_NUMBER2_V_DATA_46: begin
                    rdata <= int_number2_V[1503:1472];
                end
                ADDR_NUMBER2_V_DATA_47: begin
                    rdata <= int_number2_V[1535:1504];
                end
                ADDR_NUMBER2_V_DATA_48: begin
                    rdata <= int_number2_V[1567:1536];
                end
                ADDR_NUMBER2_V_DATA_49: begin
                    rdata <= int_number2_V[1599:1568];
                end
                ADDR_NUMBER2_V_DATA_50: begin
                    rdata <= int_number2_V[1631:1600];
                end
                ADDR_NUMBER2_V_DATA_51: begin
                    rdata <= int_number2_V[1663:1632];
                end
                ADDR_NUMBER2_V_DATA_52: begin
                    rdata <= int_number2_V[1695:1664];
                end
                ADDR_NUMBER2_V_DATA_53: begin
                    rdata <= int_number2_V[1727:1696];
                end
                ADDR_NUMBER2_V_DATA_54: begin
                    rdata <= int_number2_V[1759:1728];
                end
                ADDR_NUMBER2_V_DATA_55: begin
                    rdata <= int_number2_V[1791:1760];
                end
                ADDR_NUMBER2_V_DATA_56: begin
                    rdata <= int_number2_V[1823:1792];
                end
                ADDR_NUMBER2_V_DATA_57: begin
                    rdata <= int_number2_V[1855:1824];
                end
                ADDR_NUMBER2_V_DATA_58: begin
                    rdata <= int_number2_V[1887:1856];
                end
                ADDR_NUMBER2_V_DATA_59: begin
                    rdata <= int_number2_V[1919:1888];
                end
                ADDR_NUMBER2_V_DATA_60: begin
                    rdata <= int_number2_V[1951:1920];
                end
                ADDR_NUMBER2_V_DATA_61: begin
                    rdata <= int_number2_V[1983:1952];
                end
                ADDR_NUMBER2_V_DATA_62: begin
                    rdata <= int_number2_V[2015:1984];
                end
                ADDR_NUMBER2_V_DATA_63: begin
                    rdata <= int_number2_V[2047:2016];
                end
                ADDR_OUTPUT_V_DATA_0: begin
                    rdata <= int_output_V[31:0];
                end
                ADDR_OUTPUT_V_DATA_1: begin
                    rdata <= int_output_V[63:32];
                end
                ADDR_OUTPUT_V_DATA_2: begin
                    rdata <= int_output_V[95:64];
                end
                ADDR_OUTPUT_V_DATA_3: begin
                    rdata <= int_output_V[127:96];
                end
                ADDR_OUTPUT_V_DATA_4: begin
                    rdata <= int_output_V[159:128];
                end
                ADDR_OUTPUT_V_DATA_5: begin
                    rdata <= int_output_V[191:160];
                end
                ADDR_OUTPUT_V_DATA_6: begin
                    rdata <= int_output_V[223:192];
                end
                ADDR_OUTPUT_V_DATA_7: begin
                    rdata <= int_output_V[255:224];
                end
                ADDR_OUTPUT_V_DATA_8: begin
                    rdata <= int_output_V[287:256];
                end
                ADDR_OUTPUT_V_DATA_9: begin
                    rdata <= int_output_V[319:288];
                end
                ADDR_OUTPUT_V_DATA_10: begin
                    rdata <= int_output_V[351:320];
                end
                ADDR_OUTPUT_V_DATA_11: begin
                    rdata <= int_output_V[383:352];
                end
                ADDR_OUTPUT_V_DATA_12: begin
                    rdata <= int_output_V[415:384];
                end
                ADDR_OUTPUT_V_DATA_13: begin
                    rdata <= int_output_V[447:416];
                end
                ADDR_OUTPUT_V_DATA_14: begin
                    rdata <= int_output_V[479:448];
                end
                ADDR_OUTPUT_V_DATA_15: begin
                    rdata <= int_output_V[511:480];
                end
                ADDR_OUTPUT_V_DATA_16: begin
                    rdata <= int_output_V[543:512];
                end
                ADDR_OUTPUT_V_DATA_17: begin
                    rdata <= int_output_V[575:544];
                end
                ADDR_OUTPUT_V_DATA_18: begin
                    rdata <= int_output_V[607:576];
                end
                ADDR_OUTPUT_V_DATA_19: begin
                    rdata <= int_output_V[639:608];
                end
                ADDR_OUTPUT_V_DATA_20: begin
                    rdata <= int_output_V[671:640];
                end
                ADDR_OUTPUT_V_DATA_21: begin
                    rdata <= int_output_V[703:672];
                end
                ADDR_OUTPUT_V_DATA_22: begin
                    rdata <= int_output_V[735:704];
                end
                ADDR_OUTPUT_V_DATA_23: begin
                    rdata <= int_output_V[767:736];
                end
                ADDR_OUTPUT_V_DATA_24: begin
                    rdata <= int_output_V[799:768];
                end
                ADDR_OUTPUT_V_DATA_25: begin
                    rdata <= int_output_V[831:800];
                end
                ADDR_OUTPUT_V_DATA_26: begin
                    rdata <= int_output_V[863:832];
                end
                ADDR_OUTPUT_V_DATA_27: begin
                    rdata <= int_output_V[895:864];
                end
                ADDR_OUTPUT_V_DATA_28: begin
                    rdata <= int_output_V[927:896];
                end
                ADDR_OUTPUT_V_DATA_29: begin
                    rdata <= int_output_V[959:928];
                end
                ADDR_OUTPUT_V_DATA_30: begin
                    rdata <= int_output_V[991:960];
                end
                ADDR_OUTPUT_V_DATA_31: begin
                    rdata <= int_output_V[1023:992];
                end
                ADDR_OUTPUT_V_DATA_32: begin
                    rdata <= int_output_V[1055:1024];
                end
                ADDR_OUTPUT_V_DATA_33: begin
                    rdata <= int_output_V[1087:1056];
                end
                ADDR_OUTPUT_V_DATA_34: begin
                    rdata <= int_output_V[1119:1088];
                end
                ADDR_OUTPUT_V_DATA_35: begin
                    rdata <= int_output_V[1151:1120];
                end
                ADDR_OUTPUT_V_DATA_36: begin
                    rdata <= int_output_V[1183:1152];
                end
                ADDR_OUTPUT_V_DATA_37: begin
                    rdata <= int_output_V[1215:1184];
                end
                ADDR_OUTPUT_V_DATA_38: begin
                    rdata <= int_output_V[1247:1216];
                end
                ADDR_OUTPUT_V_DATA_39: begin
                    rdata <= int_output_V[1279:1248];
                end
                ADDR_OUTPUT_V_DATA_40: begin
                    rdata <= int_output_V[1311:1280];
                end
                ADDR_OUTPUT_V_DATA_41: begin
                    rdata <= int_output_V[1343:1312];
                end
                ADDR_OUTPUT_V_DATA_42: begin
                    rdata <= int_output_V[1375:1344];
                end
                ADDR_OUTPUT_V_DATA_43: begin
                    rdata <= int_output_V[1407:1376];
                end
                ADDR_OUTPUT_V_DATA_44: begin
                    rdata <= int_output_V[1439:1408];
                end
                ADDR_OUTPUT_V_DATA_45: begin
                    rdata <= int_output_V[1471:1440];
                end
                ADDR_OUTPUT_V_DATA_46: begin
                    rdata <= int_output_V[1503:1472];
                end
                ADDR_OUTPUT_V_DATA_47: begin
                    rdata <= int_output_V[1535:1504];
                end
                ADDR_OUTPUT_V_DATA_48: begin
                    rdata <= int_output_V[1567:1536];
                end
                ADDR_OUTPUT_V_DATA_49: begin
                    rdata <= int_output_V[1599:1568];
                end
                ADDR_OUTPUT_V_DATA_50: begin
                    rdata <= int_output_V[1631:1600];
                end
                ADDR_OUTPUT_V_DATA_51: begin
                    rdata <= int_output_V[1663:1632];
                end
                ADDR_OUTPUT_V_DATA_52: begin
                    rdata <= int_output_V[1695:1664];
                end
                ADDR_OUTPUT_V_DATA_53: begin
                    rdata <= int_output_V[1727:1696];
                end
                ADDR_OUTPUT_V_DATA_54: begin
                    rdata <= int_output_V[1759:1728];
                end
                ADDR_OUTPUT_V_DATA_55: begin
                    rdata <= int_output_V[1791:1760];
                end
                ADDR_OUTPUT_V_DATA_56: begin
                    rdata <= int_output_V[1823:1792];
                end
                ADDR_OUTPUT_V_DATA_57: begin
                    rdata <= int_output_V[1855:1824];
                end
                ADDR_OUTPUT_V_DATA_58: begin
                    rdata <= int_output_V[1887:1856];
                end
                ADDR_OUTPUT_V_DATA_59: begin
                    rdata <= int_output_V[1919:1888];
                end
                ADDR_OUTPUT_V_DATA_60: begin
                    rdata <= int_output_V[1951:1920];
                end
                ADDR_OUTPUT_V_DATA_61: begin
                    rdata <= int_output_V[1983:1952];
                end
                ADDR_OUTPUT_V_DATA_62: begin
                    rdata <= int_output_V[2015:1984];
                end
                ADDR_OUTPUT_V_DATA_63: begin
                    rdata <= int_output_V[2047:2016];
                end
                ADDR_OUTPUT_V_CTRL: begin
                    rdata[0] <= int_output_V_ap_vld;
                end
            endcase
        end
    end
end


//------------------------Register logic-----------------
assign interrupt    = int_gie & (|int_isr);
assign ap_start     = int_ap_start;
assign int_ap_idle  = ap_idle;
assign int_ap_ready = ap_ready;
assign number1_V    = int_number1_V;
assign number2_V    = int_number2_V;
// int_ap_start
always @(posedge ACLK) begin
    if (ARESET)
        int_ap_start <= 1'b0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_AP_CTRL && WSTRB[0] && WDATA[0])
            int_ap_start <= 1'b1;
        else if (ap_done & int_auto_restart)
            int_ap_start <= 1'b1; // auto restart
        else
            int_ap_start <= 1'b0; // self clear
    end
end

// int_ap_done
always @(posedge ACLK) begin
    if (ARESET)
        int_ap_done <= 1'b0;
    else if (ACLK_EN) begin
        if (ap_done)
            int_ap_done <= 1'b1;
        else if (ar_hs && raddr == ADDR_AP_CTRL)
            int_ap_done <= 1'b0; // clear on read
    end
end

// int_auto_restart
always @(posedge ACLK) begin
    if (ARESET)
        int_auto_restart <= 1'b0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_AP_CTRL && WSTRB[0])
            int_auto_restart <=  WDATA[7];
    end
end

// int_gie
always @(posedge ACLK) begin
    if (ARESET)
        int_gie <= 1'b0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_GIE && WSTRB[0])
            int_gie <= WDATA[0];
    end
end

// int_ier
always @(posedge ACLK) begin
    if (ARESET)
        int_ier <= 1'b0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_IER && WSTRB[0])
            int_ier <= WDATA[0];
    end
end

// int_isr
always @(posedge ACLK) begin
    if (ARESET)
        int_isr <= 1'b0;
    else if (ACLK_EN) begin
        if (int_ier & ap_done)
            int_isr <= 1'b1;
        else if (w_hs && waddr == ADDR_ISR && WSTRB[0])
            int_isr <= int_isr ^ WDATA[0]; // toggle on write
    end
end

// int_number1_V[31:0]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[31:0] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_0)
            int_number1_V[31:0] <= (WDATA[31:0] & wmask) | (int_number1_V[31:0] & ~wmask);
    end
end

// int_number1_V[63:32]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[63:32] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_1)
            int_number1_V[63:32] <= (WDATA[31:0] & wmask) | (int_number1_V[63:32] & ~wmask);
    end
end

// int_number1_V[95:64]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[95:64] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_2)
            int_number1_V[95:64] <= (WDATA[31:0] & wmask) | (int_number1_V[95:64] & ~wmask);
    end
end

// int_number1_V[127:96]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[127:96] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_3)
            int_number1_V[127:96] <= (WDATA[31:0] & wmask) | (int_number1_V[127:96] & ~wmask);
    end
end

// int_number1_V[159:128]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[159:128] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_4)
            int_number1_V[159:128] <= (WDATA[31:0] & wmask) | (int_number1_V[159:128] & ~wmask);
    end
end

// int_number1_V[191:160]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[191:160] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_5)
            int_number1_V[191:160] <= (WDATA[31:0] & wmask) | (int_number1_V[191:160] & ~wmask);
    end
end

// int_number1_V[223:192]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[223:192] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_6)
            int_number1_V[223:192] <= (WDATA[31:0] & wmask) | (int_number1_V[223:192] & ~wmask);
    end
end

// int_number1_V[255:224]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[255:224] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_7)
            int_number1_V[255:224] <= (WDATA[31:0] & wmask) | (int_number1_V[255:224] & ~wmask);
    end
end

// int_number1_V[287:256]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[287:256] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_8)
            int_number1_V[287:256] <= (WDATA[31:0] & wmask) | (int_number1_V[287:256] & ~wmask);
    end
end

// int_number1_V[319:288]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[319:288] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_9)
            int_number1_V[319:288] <= (WDATA[31:0] & wmask) | (int_number1_V[319:288] & ~wmask);
    end
end

// int_number1_V[351:320]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[351:320] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_10)
            int_number1_V[351:320] <= (WDATA[31:0] & wmask) | (int_number1_V[351:320] & ~wmask);
    end
end

// int_number1_V[383:352]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[383:352] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_11)
            int_number1_V[383:352] <= (WDATA[31:0] & wmask) | (int_number1_V[383:352] & ~wmask);
    end
end

// int_number1_V[415:384]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[415:384] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_12)
            int_number1_V[415:384] <= (WDATA[31:0] & wmask) | (int_number1_V[415:384] & ~wmask);
    end
end

// int_number1_V[447:416]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[447:416] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_13)
            int_number1_V[447:416] <= (WDATA[31:0] & wmask) | (int_number1_V[447:416] & ~wmask);
    end
end

// int_number1_V[479:448]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[479:448] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_14)
            int_number1_V[479:448] <= (WDATA[31:0] & wmask) | (int_number1_V[479:448] & ~wmask);
    end
end

// int_number1_V[511:480]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[511:480] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_15)
            int_number1_V[511:480] <= (WDATA[31:0] & wmask) | (int_number1_V[511:480] & ~wmask);
    end
end

// int_number1_V[543:512]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[543:512] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_16)
            int_number1_V[543:512] <= (WDATA[31:0] & wmask) | (int_number1_V[543:512] & ~wmask);
    end
end

// int_number1_V[575:544]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[575:544] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_17)
            int_number1_V[575:544] <= (WDATA[31:0] & wmask) | (int_number1_V[575:544] & ~wmask);
    end
end

// int_number1_V[607:576]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[607:576] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_18)
            int_number1_V[607:576] <= (WDATA[31:0] & wmask) | (int_number1_V[607:576] & ~wmask);
    end
end

// int_number1_V[639:608]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[639:608] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_19)
            int_number1_V[639:608] <= (WDATA[31:0] & wmask) | (int_number1_V[639:608] & ~wmask);
    end
end

// int_number1_V[671:640]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[671:640] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_20)
            int_number1_V[671:640] <= (WDATA[31:0] & wmask) | (int_number1_V[671:640] & ~wmask);
    end
end

// int_number1_V[703:672]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[703:672] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_21)
            int_number1_V[703:672] <= (WDATA[31:0] & wmask) | (int_number1_V[703:672] & ~wmask);
    end
end

// int_number1_V[735:704]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[735:704] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_22)
            int_number1_V[735:704] <= (WDATA[31:0] & wmask) | (int_number1_V[735:704] & ~wmask);
    end
end

// int_number1_V[767:736]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[767:736] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_23)
            int_number1_V[767:736] <= (WDATA[31:0] & wmask) | (int_number1_V[767:736] & ~wmask);
    end
end

// int_number1_V[799:768]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[799:768] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_24)
            int_number1_V[799:768] <= (WDATA[31:0] & wmask) | (int_number1_V[799:768] & ~wmask);
    end
end

// int_number1_V[831:800]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[831:800] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_25)
            int_number1_V[831:800] <= (WDATA[31:0] & wmask) | (int_number1_V[831:800] & ~wmask);
    end
end

// int_number1_V[863:832]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[863:832] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_26)
            int_number1_V[863:832] <= (WDATA[31:0] & wmask) | (int_number1_V[863:832] & ~wmask);
    end
end

// int_number1_V[895:864]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[895:864] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_27)
            int_number1_V[895:864] <= (WDATA[31:0] & wmask) | (int_number1_V[895:864] & ~wmask);
    end
end

// int_number1_V[927:896]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[927:896] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_28)
            int_number1_V[927:896] <= (WDATA[31:0] & wmask) | (int_number1_V[927:896] & ~wmask);
    end
end

// int_number1_V[959:928]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[959:928] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_29)
            int_number1_V[959:928] <= (WDATA[31:0] & wmask) | (int_number1_V[959:928] & ~wmask);
    end
end

// int_number1_V[991:960]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[991:960] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_30)
            int_number1_V[991:960] <= (WDATA[31:0] & wmask) | (int_number1_V[991:960] & ~wmask);
    end
end

// int_number1_V[1023:992]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1023:992] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_31)
            int_number1_V[1023:992] <= (WDATA[31:0] & wmask) | (int_number1_V[1023:992] & ~wmask);
    end
end

// int_number1_V[1055:1024]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1055:1024] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_32)
            int_number1_V[1055:1024] <= (WDATA[31:0] & wmask) | (int_number1_V[1055:1024] & ~wmask);
    end
end

// int_number1_V[1087:1056]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1087:1056] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_33)
            int_number1_V[1087:1056] <= (WDATA[31:0] & wmask) | (int_number1_V[1087:1056] & ~wmask);
    end
end

// int_number1_V[1119:1088]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1119:1088] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_34)
            int_number1_V[1119:1088] <= (WDATA[31:0] & wmask) | (int_number1_V[1119:1088] & ~wmask);
    end
end

// int_number1_V[1151:1120]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1151:1120] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_35)
            int_number1_V[1151:1120] <= (WDATA[31:0] & wmask) | (int_number1_V[1151:1120] & ~wmask);
    end
end

// int_number1_V[1183:1152]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1183:1152] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_36)
            int_number1_V[1183:1152] <= (WDATA[31:0] & wmask) | (int_number1_V[1183:1152] & ~wmask);
    end
end

// int_number1_V[1215:1184]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1215:1184] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_37)
            int_number1_V[1215:1184] <= (WDATA[31:0] & wmask) | (int_number1_V[1215:1184] & ~wmask);
    end
end

// int_number1_V[1247:1216]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1247:1216] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_38)
            int_number1_V[1247:1216] <= (WDATA[31:0] & wmask) | (int_number1_V[1247:1216] & ~wmask);
    end
end

// int_number1_V[1279:1248]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1279:1248] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_39)
            int_number1_V[1279:1248] <= (WDATA[31:0] & wmask) | (int_number1_V[1279:1248] & ~wmask);
    end
end

// int_number1_V[1311:1280]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1311:1280] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_40)
            int_number1_V[1311:1280] <= (WDATA[31:0] & wmask) | (int_number1_V[1311:1280] & ~wmask);
    end
end

// int_number1_V[1343:1312]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1343:1312] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_41)
            int_number1_V[1343:1312] <= (WDATA[31:0] & wmask) | (int_number1_V[1343:1312] & ~wmask);
    end
end

// int_number1_V[1375:1344]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1375:1344] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_42)
            int_number1_V[1375:1344] <= (WDATA[31:0] & wmask) | (int_number1_V[1375:1344] & ~wmask);
    end
end

// int_number1_V[1407:1376]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1407:1376] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_43)
            int_number1_V[1407:1376] <= (WDATA[31:0] & wmask) | (int_number1_V[1407:1376] & ~wmask);
    end
end

// int_number1_V[1439:1408]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1439:1408] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_44)
            int_number1_V[1439:1408] <= (WDATA[31:0] & wmask) | (int_number1_V[1439:1408] & ~wmask);
    end
end

// int_number1_V[1471:1440]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1471:1440] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_45)
            int_number1_V[1471:1440] <= (WDATA[31:0] & wmask) | (int_number1_V[1471:1440] & ~wmask);
    end
end

// int_number1_V[1503:1472]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1503:1472] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_46)
            int_number1_V[1503:1472] <= (WDATA[31:0] & wmask) | (int_number1_V[1503:1472] & ~wmask);
    end
end

// int_number1_V[1535:1504]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1535:1504] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_47)
            int_number1_V[1535:1504] <= (WDATA[31:0] & wmask) | (int_number1_V[1535:1504] & ~wmask);
    end
end

// int_number1_V[1567:1536]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1567:1536] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_48)
            int_number1_V[1567:1536] <= (WDATA[31:0] & wmask) | (int_number1_V[1567:1536] & ~wmask);
    end
end

// int_number1_V[1599:1568]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1599:1568] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_49)
            int_number1_V[1599:1568] <= (WDATA[31:0] & wmask) | (int_number1_V[1599:1568] & ~wmask);
    end
end

// int_number1_V[1631:1600]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1631:1600] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_50)
            int_number1_V[1631:1600] <= (WDATA[31:0] & wmask) | (int_number1_V[1631:1600] & ~wmask);
    end
end

// int_number1_V[1663:1632]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1663:1632] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_51)
            int_number1_V[1663:1632] <= (WDATA[31:0] & wmask) | (int_number1_V[1663:1632] & ~wmask);
    end
end

// int_number1_V[1695:1664]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1695:1664] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_52)
            int_number1_V[1695:1664] <= (WDATA[31:0] & wmask) | (int_number1_V[1695:1664] & ~wmask);
    end
end

// int_number1_V[1727:1696]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1727:1696] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_53)
            int_number1_V[1727:1696] <= (WDATA[31:0] & wmask) | (int_number1_V[1727:1696] & ~wmask);
    end
end

// int_number1_V[1759:1728]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1759:1728] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_54)
            int_number1_V[1759:1728] <= (WDATA[31:0] & wmask) | (int_number1_V[1759:1728] & ~wmask);
    end
end

// int_number1_V[1791:1760]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1791:1760] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_55)
            int_number1_V[1791:1760] <= (WDATA[31:0] & wmask) | (int_number1_V[1791:1760] & ~wmask);
    end
end

// int_number1_V[1823:1792]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1823:1792] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_56)
            int_number1_V[1823:1792] <= (WDATA[31:0] & wmask) | (int_number1_V[1823:1792] & ~wmask);
    end
end

// int_number1_V[1855:1824]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1855:1824] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_57)
            int_number1_V[1855:1824] <= (WDATA[31:0] & wmask) | (int_number1_V[1855:1824] & ~wmask);
    end
end

// int_number1_V[1887:1856]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1887:1856] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_58)
            int_number1_V[1887:1856] <= (WDATA[31:0] & wmask) | (int_number1_V[1887:1856] & ~wmask);
    end
end

// int_number1_V[1919:1888]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1919:1888] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_59)
            int_number1_V[1919:1888] <= (WDATA[31:0] & wmask) | (int_number1_V[1919:1888] & ~wmask);
    end
end

// int_number1_V[1951:1920]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1951:1920] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_60)
            int_number1_V[1951:1920] <= (WDATA[31:0] & wmask) | (int_number1_V[1951:1920] & ~wmask);
    end
end

// int_number1_V[1983:1952]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[1983:1952] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_61)
            int_number1_V[1983:1952] <= (WDATA[31:0] & wmask) | (int_number1_V[1983:1952] & ~wmask);
    end
end

// int_number1_V[2015:1984]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[2015:1984] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_62)
            int_number1_V[2015:1984] <= (WDATA[31:0] & wmask) | (int_number1_V[2015:1984] & ~wmask);
    end
end

// int_number1_V[2047:2016]
always @(posedge ACLK) begin
    if (ARESET)
        int_number1_V[2047:2016] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER1_V_DATA_63)
            int_number1_V[2047:2016] <= (WDATA[31:0] & wmask) | (int_number1_V[2047:2016] & ~wmask);
    end
end

// int_number2_V[31:0]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[31:0] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_0)
            int_number2_V[31:0] <= (WDATA[31:0] & wmask) | (int_number2_V[31:0] & ~wmask);
    end
end

// int_number2_V[63:32]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[63:32] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_1)
            int_number2_V[63:32] <= (WDATA[31:0] & wmask) | (int_number2_V[63:32] & ~wmask);
    end
end

// int_number2_V[95:64]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[95:64] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_2)
            int_number2_V[95:64] <= (WDATA[31:0] & wmask) | (int_number2_V[95:64] & ~wmask);
    end
end

// int_number2_V[127:96]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[127:96] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_3)
            int_number2_V[127:96] <= (WDATA[31:0] & wmask) | (int_number2_V[127:96] & ~wmask);
    end
end

// int_number2_V[159:128]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[159:128] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_4)
            int_number2_V[159:128] <= (WDATA[31:0] & wmask) | (int_number2_V[159:128] & ~wmask);
    end
end

// int_number2_V[191:160]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[191:160] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_5)
            int_number2_V[191:160] <= (WDATA[31:0] & wmask) | (int_number2_V[191:160] & ~wmask);
    end
end

// int_number2_V[223:192]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[223:192] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_6)
            int_number2_V[223:192] <= (WDATA[31:0] & wmask) | (int_number2_V[223:192] & ~wmask);
    end
end

// int_number2_V[255:224]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[255:224] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_7)
            int_number2_V[255:224] <= (WDATA[31:0] & wmask) | (int_number2_V[255:224] & ~wmask);
    end
end

// int_number2_V[287:256]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[287:256] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_8)
            int_number2_V[287:256] <= (WDATA[31:0] & wmask) | (int_number2_V[287:256] & ~wmask);
    end
end

// int_number2_V[319:288]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[319:288] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_9)
            int_number2_V[319:288] <= (WDATA[31:0] & wmask) | (int_number2_V[319:288] & ~wmask);
    end
end

// int_number2_V[351:320]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[351:320] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_10)
            int_number2_V[351:320] <= (WDATA[31:0] & wmask) | (int_number2_V[351:320] & ~wmask);
    end
end

// int_number2_V[383:352]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[383:352] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_11)
            int_number2_V[383:352] <= (WDATA[31:0] & wmask) | (int_number2_V[383:352] & ~wmask);
    end
end

// int_number2_V[415:384]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[415:384] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_12)
            int_number2_V[415:384] <= (WDATA[31:0] & wmask) | (int_number2_V[415:384] & ~wmask);
    end
end

// int_number2_V[447:416]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[447:416] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_13)
            int_number2_V[447:416] <= (WDATA[31:0] & wmask) | (int_number2_V[447:416] & ~wmask);
    end
end

// int_number2_V[479:448]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[479:448] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_14)
            int_number2_V[479:448] <= (WDATA[31:0] & wmask) | (int_number2_V[479:448] & ~wmask);
    end
end

// int_number2_V[511:480]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[511:480] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_15)
            int_number2_V[511:480] <= (WDATA[31:0] & wmask) | (int_number2_V[511:480] & ~wmask);
    end
end

// int_number2_V[543:512]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[543:512] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_16)
            int_number2_V[543:512] <= (WDATA[31:0] & wmask) | (int_number2_V[543:512] & ~wmask);
    end
end

// int_number2_V[575:544]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[575:544] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_17)
            int_number2_V[575:544] <= (WDATA[31:0] & wmask) | (int_number2_V[575:544] & ~wmask);
    end
end

// int_number2_V[607:576]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[607:576] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_18)
            int_number2_V[607:576] <= (WDATA[31:0] & wmask) | (int_number2_V[607:576] & ~wmask);
    end
end

// int_number2_V[639:608]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[639:608] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_19)
            int_number2_V[639:608] <= (WDATA[31:0] & wmask) | (int_number2_V[639:608] & ~wmask);
    end
end

// int_number2_V[671:640]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[671:640] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_20)
            int_number2_V[671:640] <= (WDATA[31:0] & wmask) | (int_number2_V[671:640] & ~wmask);
    end
end

// int_number2_V[703:672]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[703:672] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_21)
            int_number2_V[703:672] <= (WDATA[31:0] & wmask) | (int_number2_V[703:672] & ~wmask);
    end
end

// int_number2_V[735:704]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[735:704] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_22)
            int_number2_V[735:704] <= (WDATA[31:0] & wmask) | (int_number2_V[735:704] & ~wmask);
    end
end

// int_number2_V[767:736]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[767:736] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_23)
            int_number2_V[767:736] <= (WDATA[31:0] & wmask) | (int_number2_V[767:736] & ~wmask);
    end
end

// int_number2_V[799:768]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[799:768] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_24)
            int_number2_V[799:768] <= (WDATA[31:0] & wmask) | (int_number2_V[799:768] & ~wmask);
    end
end

// int_number2_V[831:800]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[831:800] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_25)
            int_number2_V[831:800] <= (WDATA[31:0] & wmask) | (int_number2_V[831:800] & ~wmask);
    end
end

// int_number2_V[863:832]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[863:832] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_26)
            int_number2_V[863:832] <= (WDATA[31:0] & wmask) | (int_number2_V[863:832] & ~wmask);
    end
end

// int_number2_V[895:864]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[895:864] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_27)
            int_number2_V[895:864] <= (WDATA[31:0] & wmask) | (int_number2_V[895:864] & ~wmask);
    end
end

// int_number2_V[927:896]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[927:896] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_28)
            int_number2_V[927:896] <= (WDATA[31:0] & wmask) | (int_number2_V[927:896] & ~wmask);
    end
end

// int_number2_V[959:928]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[959:928] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_29)
            int_number2_V[959:928] <= (WDATA[31:0] & wmask) | (int_number2_V[959:928] & ~wmask);
    end
end

// int_number2_V[991:960]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[991:960] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_30)
            int_number2_V[991:960] <= (WDATA[31:0] & wmask) | (int_number2_V[991:960] & ~wmask);
    end
end

// int_number2_V[1023:992]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1023:992] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_31)
            int_number2_V[1023:992] <= (WDATA[31:0] & wmask) | (int_number2_V[1023:992] & ~wmask);
    end
end

// int_number2_V[1055:1024]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1055:1024] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_32)
            int_number2_V[1055:1024] <= (WDATA[31:0] & wmask) | (int_number2_V[1055:1024] & ~wmask);
    end
end

// int_number2_V[1087:1056]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1087:1056] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_33)
            int_number2_V[1087:1056] <= (WDATA[31:0] & wmask) | (int_number2_V[1087:1056] & ~wmask);
    end
end

// int_number2_V[1119:1088]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1119:1088] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_34)
            int_number2_V[1119:1088] <= (WDATA[31:0] & wmask) | (int_number2_V[1119:1088] & ~wmask);
    end
end

// int_number2_V[1151:1120]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1151:1120] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_35)
            int_number2_V[1151:1120] <= (WDATA[31:0] & wmask) | (int_number2_V[1151:1120] & ~wmask);
    end
end

// int_number2_V[1183:1152]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1183:1152] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_36)
            int_number2_V[1183:1152] <= (WDATA[31:0] & wmask) | (int_number2_V[1183:1152] & ~wmask);
    end
end

// int_number2_V[1215:1184]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1215:1184] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_37)
            int_number2_V[1215:1184] <= (WDATA[31:0] & wmask) | (int_number2_V[1215:1184] & ~wmask);
    end
end

// int_number2_V[1247:1216]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1247:1216] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_38)
            int_number2_V[1247:1216] <= (WDATA[31:0] & wmask) | (int_number2_V[1247:1216] & ~wmask);
    end
end

// int_number2_V[1279:1248]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1279:1248] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_39)
            int_number2_V[1279:1248] <= (WDATA[31:0] & wmask) | (int_number2_V[1279:1248] & ~wmask);
    end
end

// int_number2_V[1311:1280]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1311:1280] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_40)
            int_number2_V[1311:1280] <= (WDATA[31:0] & wmask) | (int_number2_V[1311:1280] & ~wmask);
    end
end

// int_number2_V[1343:1312]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1343:1312] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_41)
            int_number2_V[1343:1312] <= (WDATA[31:0] & wmask) | (int_number2_V[1343:1312] & ~wmask);
    end
end

// int_number2_V[1375:1344]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1375:1344] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_42)
            int_number2_V[1375:1344] <= (WDATA[31:0] & wmask) | (int_number2_V[1375:1344] & ~wmask);
    end
end

// int_number2_V[1407:1376]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1407:1376] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_43)
            int_number2_V[1407:1376] <= (WDATA[31:0] & wmask) | (int_number2_V[1407:1376] & ~wmask);
    end
end

// int_number2_V[1439:1408]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1439:1408] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_44)
            int_number2_V[1439:1408] <= (WDATA[31:0] & wmask) | (int_number2_V[1439:1408] & ~wmask);
    end
end

// int_number2_V[1471:1440]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1471:1440] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_45)
            int_number2_V[1471:1440] <= (WDATA[31:0] & wmask) | (int_number2_V[1471:1440] & ~wmask);
    end
end

// int_number2_V[1503:1472]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1503:1472] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_46)
            int_number2_V[1503:1472] <= (WDATA[31:0] & wmask) | (int_number2_V[1503:1472] & ~wmask);
    end
end

// int_number2_V[1535:1504]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1535:1504] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_47)
            int_number2_V[1535:1504] <= (WDATA[31:0] & wmask) | (int_number2_V[1535:1504] & ~wmask);
    end
end

// int_number2_V[1567:1536]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1567:1536] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_48)
            int_number2_V[1567:1536] <= (WDATA[31:0] & wmask) | (int_number2_V[1567:1536] & ~wmask);
    end
end

// int_number2_V[1599:1568]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1599:1568] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_49)
            int_number2_V[1599:1568] <= (WDATA[31:0] & wmask) | (int_number2_V[1599:1568] & ~wmask);
    end
end

// int_number2_V[1631:1600]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1631:1600] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_50)
            int_number2_V[1631:1600] <= (WDATA[31:0] & wmask) | (int_number2_V[1631:1600] & ~wmask);
    end
end

// int_number2_V[1663:1632]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1663:1632] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_51)
            int_number2_V[1663:1632] <= (WDATA[31:0] & wmask) | (int_number2_V[1663:1632] & ~wmask);
    end
end

// int_number2_V[1695:1664]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1695:1664] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_52)
            int_number2_V[1695:1664] <= (WDATA[31:0] & wmask) | (int_number2_V[1695:1664] & ~wmask);
    end
end

// int_number2_V[1727:1696]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1727:1696] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_53)
            int_number2_V[1727:1696] <= (WDATA[31:0] & wmask) | (int_number2_V[1727:1696] & ~wmask);
    end
end

// int_number2_V[1759:1728]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1759:1728] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_54)
            int_number2_V[1759:1728] <= (WDATA[31:0] & wmask) | (int_number2_V[1759:1728] & ~wmask);
    end
end

// int_number2_V[1791:1760]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1791:1760] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_55)
            int_number2_V[1791:1760] <= (WDATA[31:0] & wmask) | (int_number2_V[1791:1760] & ~wmask);
    end
end

// int_number2_V[1823:1792]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1823:1792] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_56)
            int_number2_V[1823:1792] <= (WDATA[31:0] & wmask) | (int_number2_V[1823:1792] & ~wmask);
    end
end

// int_number2_V[1855:1824]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1855:1824] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_57)
            int_number2_V[1855:1824] <= (WDATA[31:0] & wmask) | (int_number2_V[1855:1824] & ~wmask);
    end
end

// int_number2_V[1887:1856]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1887:1856] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_58)
            int_number2_V[1887:1856] <= (WDATA[31:0] & wmask) | (int_number2_V[1887:1856] & ~wmask);
    end
end

// int_number2_V[1919:1888]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1919:1888] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_59)
            int_number2_V[1919:1888] <= (WDATA[31:0] & wmask) | (int_number2_V[1919:1888] & ~wmask);
    end
end

// int_number2_V[1951:1920]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1951:1920] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_60)
            int_number2_V[1951:1920] <= (WDATA[31:0] & wmask) | (int_number2_V[1951:1920] & ~wmask);
    end
end

// int_number2_V[1983:1952]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[1983:1952] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_61)
            int_number2_V[1983:1952] <= (WDATA[31:0] & wmask) | (int_number2_V[1983:1952] & ~wmask);
    end
end

// int_number2_V[2015:1984]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[2015:1984] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_62)
            int_number2_V[2015:1984] <= (WDATA[31:0] & wmask) | (int_number2_V[2015:1984] & ~wmask);
    end
end

// int_number2_V[2047:2016]
always @(posedge ACLK) begin
    if (ARESET)
        int_number2_V[2047:2016] <= 0;
    else if (ACLK_EN) begin
        if (w_hs && waddr == ADDR_NUMBER2_V_DATA_63)
            int_number2_V[2047:2016] <= (WDATA[31:0] & wmask) | (int_number2_V[2047:2016] & ~wmask);
    end
end

// int_output_V
always @(posedge ACLK) begin
    if (ARESET)
        int_output_V <= 0;
    else if (ACLK_EN) begin
        if (output_V_ap_vld)
            int_output_V <= output_V;
    end
end

// int_output_V_ap_vld
always @(posedge ACLK) begin
    if (ARESET)
        int_output_V_ap_vld <= 1'b0;
    else if (ACLK_EN) begin
        if (output_V_ap_vld)
            int_output_V_ap_vld <= 1'b1;
        else if (ar_hs && raddr == ADDR_OUTPUT_V_CTRL)
            int_output_V_ap_vld <= 1'b0; // clear on read
    end
end


//------------------------Memory logic-------------------

endmodule
